{"version":3,"file":"decoder-pro.js","sources":["../src/decoder/decoder-pro.js","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../src/utils/webglV2.js","../src/constant/index.js","../node_modules/screenfull/dist/screenfull.js","../src/utils/aac.js","../src/utils/index.js","../node_modules/oput/dist/index.js","../src/utils/debug.js","../src/utils/exp-golomb.js","../src/utils/h264-sps-parser.js","../src/utils/h264.js","../src/utils/h265-vps-sps-pps-parser.js","../src/utils/h265.js","../src/utils/aes-js.js","../src/utils/crypto.js","../src/worker-run.js","../src/worker.js"],"sourcesContent":["var Module=typeof Module!=\"undefined\"?Module:{};var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}};read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!=\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var tempRet0=0;var setTempRet0=value=>{tempRet0=value};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||134217728;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"decoder-pro.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"F\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"J\"];addOnInit(Module[\"asm\"][\"G\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func==\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function ___cxa_allocate_exception(size){return _malloc(size+24)+24}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}var PATH={isAbs:path=>path.charAt(0)===\"/\",splitPath:filename=>{var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))},join2:(l,r)=>{return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){var randomBuffer=new Uint8Array(1);return function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");return function(){return crypto_module[\"randomBytes\"](1)[0]}}catch(e){}}return function(){abort(\"randomDevice\")}}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(p=>!!p),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc(BUFSIZE);var bytesRead=0;try{bytesRead=fs.readSync(process.stdin.fd,buf,0,BUFSIZE,-1)}catch(e){if(e.toString().includes(\"EOF\"))bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function zeroMemory(address,size){HEAPU8.fill(0,address,address+size)}function alignMemory(size,alignment){return Math.ceil(size/alignment)*alignment}function mmapAlloc(size){size=alignMemory(size,65536);var ptr=_emscripten_builtin_memalign(65536,size);if(!ptr)return 0;zeroMemory(ptr,size);return ptr}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{path=PATH_FS.resolve(FS.cwd(),path);if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:node=>{var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:(parentid,name)=>{var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>{return node===node.parent},isMountpoint:node=>{return!!node.mounted},isFile:mode=>{return(mode&61440)===32768},isDir:mode=>{return(mode&61440)===16384},isLink:mode=>{return(mode&61440)===40960},isChrdev:mode=>{return(mode&61440)===8192},isBlkdev:mode=>{return(mode&61440)===24576},isFIFO:mode=>{return(mode&61440)===4096},isSocket:mode=>{return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:str=>{var flags=FS.flagModes[str];if(typeof flags==\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:flag=>{var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:(node,perms)=>{if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:dir=>{var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:(dir,name)=>{try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:(node,flags)=>{if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:(fd_start=0,fd_end=FS.MAX_OPEN_FDS)=>{for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:fd=>FS.streams[fd],createStream:(stream,fd_start,fd_end)=>{if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}},flags:{get:function(){return this.shared.flags},set:function(val){this.shared.flags=val}},position:{get function(){return this.shared.position},set:function(val){this.shared.position=val}}}}stream=Object.assign(new FS.FSStream,stream);var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{if(typeof populate==\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:mountpoint=>{var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:(parent,name)=>{return parent.node_ops.lookup(parent,name)},mknod:(path,mode,dev)=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:(path,mode)=>{mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:(path,mode)=>{mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:(path,mode)=>{var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:(path,mode,dev)=>{if(typeof dev==\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:path=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:path=>{var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:(path,dontFollow)=>{var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:path=>{return FS.stat(path,true)},chmod:(path,mode,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,true)},fchmod:(fd,mode)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:(path,uid,gid,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,true)},fchown:(fd,uid,gid)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:(path,len)=>{if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:(path,atime,mtime)=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags==\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode==\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:stream=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>{return stream.fd===null},llseek:(stream,offset,whence)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:(stream,offset,length)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync:(stream,buffer,offset,length,mmapFlags)=>{if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:(path,opts={})=>{opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:()=>FS.currentPath,chdir:path=>{var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:()=>{FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:()=>{FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:()=>{FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:()=>{var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:(parent,name)=>{var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:()=>{if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError:()=>{if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:()=>{FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:(input,output,error)=>{FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:()=>{FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:(path,dontResolveLastLink)=>{var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{return null}},analyzePath:(path,dontResolveLastLink)=>{try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent=typeof parent==\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:(parent,name,properties,canRead,canWrite)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name;if(parent){parent=typeof parent==\"string\"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:(parent,name,input,output)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:stream=>{stream.seekable=false},close:stream=>{if(output&&output.buffer&&output.buffer.length){output(10)}},read:(stream,buffer,offset,length,pos)=>{var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node},createPreloadedFile:(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}if(Browser.handledByPreloadPlugin(byteArray,fullname,finish,()=>{if(onerror)onerror();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}},indexedDB:()=>{return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:()=>{return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=()=>{out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=()=>{var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=()=>{ok++;if(ok+fail==total)finish()};putRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=()=>{var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var getRequest=files.get(path);getRequest.onsuccess=()=>{if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream}};function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.createStream(stream,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 5:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationRegistry=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}var delayFunction=undefined;function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=()=>lengthBytesUTF8(value)}else{getLength=()=>value.length}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emscripten_date_now(){return Date.now()}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol}var emval_methodCallers=[];function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=Emval.toValue(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function __emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAP32[(argTypes>>2)+i],\"parameter \"+i)}return a}var emval_registeredMethods=[];function __emval_get_method_caller(argCount,argTypes){var types=__emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map(function(t){return t.name}).join(\"_\")+\"$\";var returnId=emval_registeredMethods[signatureName];if(returnId!==undefined){return returnId}var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);returnId=__emval_addMethodCaller(invokerFunction);emval_registeredMethods[signatureName]=returnId;return returnId}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_fdstat_get(fd,pbuf){try{var stream=SYSCALLS.getStreamFromFD(fd);var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4;HEAP8[pbuf>>0]=type;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doReadv(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function convertI32PairToI53Checked(lo,hi){return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var offset=convertI32PairToI53Checked(offset_low,offset_high);if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doWritev(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _setTempRet0(val){setTempRet0(val)}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={\"s\":___cxa_allocate_exception,\"r\":___cxa_throw,\"C\":___syscall_fcntl64,\"w\":___syscall_openat,\"u\":__embind_register_bigint,\"E\":__embind_register_bool,\"l\":__embind_register_class,\"k\":__embind_register_class_constructor,\"d\":__embind_register_class_function,\"D\":__embind_register_emval,\"p\":__embind_register_float,\"c\":__embind_register_integer,\"b\":__embind_register_memory_view,\"o\":__embind_register_std_string,\"j\":__embind_register_std_wstring,\"q\":__embind_register_void,\"i\":__emscripten_date_now,\"e\":__emval_call_void_method,\"g\":__emval_decref,\"f\":__emval_get_method_caller,\"a\":_abort,\"A\":_emscripten_memcpy_big,\"v\":_emscripten_resize_heap,\"y\":_environ_get,\"z\":_environ_sizes_get,\"n\":_fd_close,\"x\":_fd_fdstat_get,\"B\":_fd_read,\"t\":_fd_seek,\"m\":_fd_write,\"h\":_setTempRet0};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _emscripten_builtin_memalign=Module[\"_emscripten_builtin_memalign\"]=function(){return(_emscripten_builtin_memalign=Module[\"_emscripten_builtin_memalign\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=function(){return(___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var dynCall_viiijj=Module[\"dynCall_viiijj\"]=function(){return(dynCall_viiijj=Module[\"dynCall_viiijj\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var dynCall_jij=Module[\"dynCall_jij\"]=function(){return(dynCall_jij=Module[\"dynCall_jij\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var dynCall_jii=Module[\"dynCall_jii\"]=function(){return(dynCall_jii=Module[\"dynCall_jii\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _ff_h264_cabac_tables=Module[\"_ff_h264_cabac_tables\"]=112796;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();module.exports=Module;\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import {mat4, vec3} from 'gl-matrix'\n\nexport default (gl, openWebglAlignment) => {\n    const vertexShaderScript = `\n            attribute vec4 aVertexPosition;\n            attribute vec2 aTexturePosition;\n            uniform mat4 uModelMatrix;\n            uniform mat4 uViewMatrix;\n            uniform mat4 uProjectionMatrix;\n            varying lowp vec2 vTexturePosition;\n            void main(void) {\n              gl_Position = uProjectionMatrix * uViewMatrix * uModelMatrix * aVertexPosition;\n              vTexturePosition = aTexturePosition;\n            }\n        `;\n    const fragmentShaderScript = `\n            precision highp float;\n            varying highp vec2 vTexturePosition;\n            uniform int isyuv;\n            uniform sampler2D rgbaTexture;\n            uniform sampler2D yTexture;\n            uniform sampler2D uTexture;\n            uniform sampler2D vTexture;\n\n            const mat4 YUV2RGB = mat4( 1.1643828125, 0, 1.59602734375, -.87078515625,\n                                       1.1643828125, -.39176171875, -.81296875, .52959375,\n                                       1.1643828125, 2.017234375, 0, -1.081390625,\n                                       0, 0, 0, 1);\n\n\n            void main(void) {\n\n                if (isyuv>0) {\n\n                    highp float y = texture2D(yTexture,  vTexturePosition).r;\n                    highp float u = texture2D(uTexture,  vTexturePosition).r;\n                    highp float v = texture2D(vTexture,  vTexturePosition).r;\n                    gl_FragColor = vec4(y, u, v, 1) * YUV2RGB;\n\n                } else {\n                    gl_FragColor =  texture2D(rgbaTexture, vTexturePosition);\n                }\n            }\n        `;\n\n    if (openWebglAlignment) {\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    }\n\n    const shaderProgram = _initShaderProgram();\n\n\n    const _programInfo = {\n        program: shaderProgram,\n        attribLocations: {\n            vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n            texturePosition: gl.getAttribLocation(shaderProgram, 'aTexturePosition'),\n        },\n        uniformLocations: {\n            projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n            modelMatrix: gl.getUniformLocation(shaderProgram, 'uModelMatrix'),\n            viewMatrix: gl.getUniformLocation(shaderProgram, 'uViewMatrix'),\n            rgbatexture: gl.getUniformLocation(shaderProgram, 'rgbaTexture'),\n            ytexture: gl.getUniformLocation(shaderProgram, 'yTexture'),\n            utexture: gl.getUniformLocation(shaderProgram, 'uTexture'),\n            vtexture: gl.getUniformLocation(shaderProgram, 'vTexture'),\n            isyuv: gl.getUniformLocation(shaderProgram, 'isyuv'),\n        }\n    }\n\n    const _buffers = _initBuffers();\n\n    const _rgbatexture = _createTexture();\n    const _ytexture = _createTexture();\n    const _utexture = _createTexture();\n    const _vtexture = _createTexture();\n\n\n    function _initBuffers() {\n        // Create a buffer for the cube's vertex positions.\n        const positionBuffer = gl.createBuffer();\n\n        // Select the positionBuffer as the one to apply buffer\n        // operations to from here out.\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n        // Now create an array of positions for the cube.\n\n        const positions = [\n            // Front face\n            -1.0, -1.0, -1.0,\n            1.0, -1.0, -1.0,\n            1.0, 1.0, -1.0,\n            -1.0, 1.0, -1.0,\n\n        ];\n\n        // Now pass the list of positions into WebGL to build the\n        // shape. We do this by creating a Float32Array from the\n        // JavaScript array, then use it to fill the current buffer.\n\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n        // Now set up the colors for the faces. We'll use solid colors\n        // for each face.\n\n//   const facePos = [\n//     [0.0,  0.0],\n//     [1.0,  0.0],\n//     [1.0,  1.0],\n//     [0.0,  1.0]\n//   ];\n\n        const facePos = [\n            [0.0, 1.0],\n            [1.0, 1.0],\n            [1.0, 0.0],\n            [0.0, 0.0]\n        ];\n\n        // Convert the array of colors into a table for all the vertices.\n\n        var texturePos = [];\n\n        texturePos = texturePos.concat(...facePos);\n\n        const texpositionBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, texpositionBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texturePos), gl.STATIC_DRAW);\n\n        // Build the element array buffer; this specifies the indices\n        // into the vertex arrays for each face's vertices.\n\n        const indexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n\n        // This array defines each face as two triangles, using the\n        // indices into the vertex array to specify each triangle's\n        // position.\n\n        const indices = [\n            0, 1, 2, 0, 2, 3\n        ];\n\n\n        // Now send the element array to GL\n\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n            new Uint16Array(indices), gl.STATIC_DRAW);\n\n        return {\n            position: positionBuffer,\n            texPosition: texpositionBuffer,\n            indices: indexBuffer\n        };\n    }\n\n    function _createTexture() {\n        let texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        return texture;\n    }\n\n    function _loadShader(type, source) {\n        const shader = gl.createShader(type);\n\n        // Send the source to the shader object\n\n        gl.shaderSource(shader, source);\n\n        // Compile the shader program\n\n        gl.compileShader(shader);\n\n        // See if it compiled successfully\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            console.log('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n            gl.deleteShader(shader);\n            return null;\n        }\n\n        return shader;\n    }\n\n    function _initShaderProgram() {\n        const vertexShader = _loadShader(gl.VERTEX_SHADER, vertexShaderScript);\n        const fragmentShader = _loadShader(gl.FRAGMENT_SHADER, fragmentShaderScript);\n\n        // Create the shader program\n\n        const shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n\n        // If creating the shader program failed, alert\n\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            console.log('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n            return null;\n        }\n\n        return shaderProgram;\n    }\n\n    function _drawScene(w, h) {\n        gl.viewport(0, 0, w, h);\n\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);  // Clear to black, fully opaque\n        gl.clearDepth(1.0);                 // Clear everything\n        gl.enable(gl.DEPTH_TEST);           // Enable depth testing\n        gl.depthFunc(gl.LEQUAL);            // Near things obscure far things\n\n        // Clear the canvas before we start drawing on it.\n\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        const zNear = 0.1;\n        const zFar = 100.0;\n        const projectionMatrix = mat4.create();\n        mat4.ortho(projectionMatrix, -1, 1, -1, 1, zNear, zFar);\n\n        // Set the drawing position to the \"identity\" point, which is\n        // the center of the scene.\n        const modelMatrix = mat4.create();\n        mat4.identity(modelMatrix);\n\n        const viewMatrix = mat4.create();\n        mat4.lookAt(viewMatrix, vec3.fromValues(0, 0, 0), vec3.fromValues(0, 0, -1), vec3.fromValues(0, 1, 0));\n\n        // Tell WebGL how to pull out the positions from the position\n        // buffer into the vertexPosition attribute\n        {\n            const numComponents = 3;\n            const type = gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            gl.bindBuffer(gl.ARRAY_BUFFER, _buffers.position);\n            gl.vertexAttribPointer(\n                _programInfo.attribLocations.vertexPosition,\n                numComponents,\n                type,\n                normalize,\n                stride,\n                offset);\n            gl.enableVertexAttribArray(\n                _programInfo.attribLocations.vertexPosition);\n        }\n\n        // Tell WebGL how to pull out the colors from the color buffer\n        // into the vertexColor attribute.\n        {\n            const numComponents = 2;\n            const type = gl.FLOAT;\n            const normalize = false;\n            const stride = 0;\n            const offset = 0;\n            gl.bindBuffer(gl.ARRAY_BUFFER, _buffers.texPosition);\n            gl.vertexAttribPointer(\n                _programInfo.attribLocations.texturePosition,\n                numComponents,\n                type,\n                normalize,\n                stride,\n                offset);\n            gl.enableVertexAttribArray(\n                _programInfo.attribLocations.texturePosition);\n        }\n\n        let rgbatextunit = 2;\n        let ytextunit = rgbatextunit + 1;\n        let utextunit = rgbatextunit + 2;\n        let vtextunit = rgbatextunit + 3;\n\n        gl.activeTexture(gl.TEXTURE0 + ytextunit);\n        gl.bindTexture(gl.TEXTURE_2D, _ytexture);\n        gl.activeTexture(gl.TEXTURE0 + utextunit);\n        gl.bindTexture(gl.TEXTURE_2D, _utexture);\n        gl.activeTexture(gl.TEXTURE0 + vtextunit);\n        gl.bindTexture(gl.TEXTURE_2D, _vtexture);\n\n\n        // Tell WebGL which indices to use to index the vertices\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _buffers.indices);\n\n        // Tell WebGL to use our program when drawing\n\n        gl.useProgram(_programInfo.program);\n\n        // Set the shader uniforms\n\n        gl.uniformMatrix4fv(\n            _programInfo.uniformLocations.projectionMatrix,\n            false,\n            projectionMatrix);\n\n        gl.uniformMatrix4fv(\n            _programInfo.uniformLocations.modelMatrix,\n            false,\n            modelMatrix);\n\n        gl.uniformMatrix4fv(\n            _programInfo.uniformLocations.viewMatrix,\n            false,\n            viewMatrix);\n\n        gl.uniform1i(_programInfo.uniformLocations.rgbatexture, rgbatextunit);\n        gl.uniform1i(_programInfo.uniformLocations.ytexture, ytextunit);\n        gl.uniform1i(_programInfo.uniformLocations.utexture, utextunit);\n        gl.uniform1i(_programInfo.uniformLocations.vtexture, vtextunit);\n\n        gl.uniform1i(_programInfo.uniformLocations.isyuv, 1);\n\n        {\n            const vertexCount = 6;\n            const type = gl.UNSIGNED_SHORT;\n            const offset = 0;\n            gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\n        }\n\n        // Update the rotation for the next draw\n    }\n\n    return {\n        render: function (width, height, y, u, v) {\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, _ytexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width, height, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, y);\n            gl.activeTexture(gl.TEXTURE1);\n            gl.bindTexture(gl.TEXTURE_2D, _utexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width / 2, height / 2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, u);\n            gl.activeTexture(gl.TEXTURE2);\n            gl.bindTexture(gl.TEXTURE_2D, _vtexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width / 2, height / 2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, v);\n            _drawScene(width, height)\n        },\n        renderYUV: function (width, height, data) {\n            let y = data.slice(0, width * height);\n            let u = data.slice(width * height, width * height * 5 / 4);\n            let v = data.slice(width * height * 5 / 4, width * height * 3 / 2);\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, _ytexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width, height, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, y);\n            gl.activeTexture(gl.TEXTURE1);\n            gl.bindTexture(gl.TEXTURE_2D, _utexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width / 2, height / 2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, u);\n            gl.activeTexture(gl.TEXTURE2);\n            gl.bindTexture(gl.TEXTURE_2D, _vtexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width / 2, height / 2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, v);\n            _drawScene(width, height)\n        },\n\n        destroy: function () {\n            gl.deleteProgram(_programInfo.program);\n\n            gl.deleteBuffer(_buffers.position);\n            gl.deleteBuffer(_buffers.texPosition);\n            gl.deleteBuffer(_buffers.indices);\n\n            gl.deleteTexture(_rgbatexture);\n            gl.deleteTexture(_ytexture);\n            gl.deleteTexture(_utexture);\n            gl.deleteTexture(_vtexture);\n        }\n    }\n}\n","// 播放协议\nexport const PLAYER_PLAY_PROTOCOL = {\n    websocket: 1,\n    fetch: 2,\n    hls: 3,\n    webrtc: 4,\n    webTransport: 5,\n}\n\nexport const PLAYER_STREAM_TYPE = {\n    fetch: 'fetch',\n    hls: 'hls',\n    websocket: 'websocket',\n    webrtc: 'webrtc',\n    webTransport: 'webTransport',\n    worker: 'worker',\n}\n\n// 播放\nexport const PLAY_TYPE = {\n    player: \"player\",\n    playbackTF: 'playbackTF',\n}\n\nexport const FILE_SUFFIX = {\n    mp4: 'mp4',\n    webm: 'webm'\n};\n\nexport const DEMUX_TYPE = {\n    flv: 'flv',\n    m7s: 'm7s',\n    hls: 'hls',\n    webrtc: 'webrtc',\n    webTransport: 'webTransport',\n    nakedFlow: 'nakedFlow'\n}\n\nexport const DEMUX_TYPE_SHOW = {\n    flv: 'FLV',\n    m7s: 'm7s',\n    hls: 'HLS',\n    webrtc: 'Webrtc',\n    webTransport: 'WebTransport',\n    nakedFlow: '裸流'\n}\n\nexport const DECODE_TYPE = {\n    mse: 'mse',\n    wcs: 'wcs',\n    offscreen: 'offscreen',\n    wasm: 'wasm',\n    simd: 'simd',\n    webrtc: 'webrtc',\n    hls: 'hls'\n}\n\nexport const RENDER_TYPE = {\n    canvas: 'canvas',\n    video: 'video'\n}\n\nexport const DEBUG_LEVEL = {\n    debug: 'debug',\n    warn: 'warn',\n}\n\nexport const PTZ_ACTIVE_EVENT_TYPE = {\n    click: 'click',\n    mouseDownAndUp: 'mouseDownAndUp',\n}\n\nexport const PLAYER_NAME = 'JessibucaPro'\n\nexport const DEFAULT_PLAYBACK_FORWARD_MAX_RATE_DECODE_IFRAME = 4; // default playback forward max rate decode iframe\n\nexport const MEDIA_SOURCE_UPDATE_END_TIMEOUT = 10 * 1000\n\nexport const DOCUMENT_ONE_SECOND_BUFFER_LENGTH = 60; // default one second buffer length (fps is 25 - 30)\n\nexport const MSE_MAX_DELAY_TIME = 5;// 单位 秒\n\nexport const MSE_DELAY_INCREASE_TIME = 3;// 单位 秒\n\nexport const PLAYER_RESIZE_TIME = 500;\n\nexport const PLAYER_SCROLL_TIME = 200;\n\nexport const FLV_BUFFER_LARGE_SIZE = 1024 * 1024; // 1024kb = 1mb\n\nexport const WASM_DECODE_MAX_DIFF_TIMESTAMP = 1100; // 1s\n\nexport const AUDIO_CHANNEL_MAX = 2; // max support 2 channel\n\nexport const FRAME_TS_MAX_DIFF = 1000 * 60 * 60; // 1 hour\n\nexport const SIMD_H264_DECODE_MAX_WIDTH = 4080;\n\n\nexport const CRYPTO_KEY_URL_PATH = '/crypto/'\n\nexport const DEFAULT_JESSIBUCA_OPTIONS = {\n    url: '',\n    playbackConfig: {},\n    fullscreenWatermarkConfig: {}, // 全屏水印设置。\n    playType: PLAY_TYPE.player,\n    playbackForwardMaxRateDecodeIFrame: DEFAULT_PLAYBACK_FORWARD_MAX_RATE_DECODE_IFRAME,\n    playOptions: {},\n    isLive: true,\n    isMulti: false,\n    isCrypto: false\n}\n\n// default player options\nexport const DEFAULT_PLAYER_OPTIONS = {\n    playType: PLAY_TYPE.player, //\n    container: '',//\n    videoBuffer: 1 * 1000, // 1* 1000ms == 1 second\n    videoBufferDelay: 1 * 1000,// 1 * 1000ms\n    networkDelay: 10 * 1000, //  10 * 1000ms\n    isResize: true, //\n    isFullResize: false, // full resize\n    isFlv: false, // flv\n    isHls: false, // hls（inner）\n    isWebrtc: false,// webrtc (inner)\n    isWebrtcForZLM: false,// webrtc for ZLM (inner)\n    isNakedFlow: false,// 是否是裸流（264、265）\n    debug: false, // debug log\n    debugLevel: DEBUG_LEVEL.warn, // log level\n    debugUuid: '', // debug uuid (inner)\n    isMulti: false,// 是否多实例播放\n    hotKey: false, // 快捷键\n    loadingTimeout: 10, // loading timeout\n    heartTimeout: 10,  // heart timeout\n    timeout: 10, // second\n    pageVisibilityHiddenTimeout: 5 * 60, //   5 * 60  = 5 minute\n    loadingTimeoutReplay: true, // loading timeout replay\n    heartTimeoutReplay: true,// heart timeout replay。\n    loadingTimeoutReplayTimes: 3, // loading timeout replay fail times\n    heartTimeoutReplayTimes: 3, // heart timeout replay fail times\n    heartTimeoutReplayUseLastFrameShow: false, // heart timeout replay use last frame\n    supportDblclickFullscreen: false,\n    showBandwidth: false, //\n    showPerformance: false, // 是否显示性能面板\n    keepScreenOn: true,\n    isNotMute: false,\n    hasAudio: true,\n    hasVideo: true,\n    operateBtns: {\n        fullscreen: false,\n        screenshot: false,\n        play: false,\n        audio: false,\n        record: false,\n        ptz: false,\n        quality: false,\n        zoom: false,\n        close: false,\n        scale: false,\n        performance: false,\n        aiFace: false,\n        aiObject: false,\n        fullscreenFn: null,\n        fullscreenExitFn: null,\n        screenshotFn: null,\n        playFn: null,\n        pauseFn: null,\n        recordFn: null,\n        recordStopFn: null,\n    },\n    extendOperateBtns: [],\n    contextmenuBtns: [],\n    watermarkConfig: {}, // 局部水印设置\n    controlAutoHide: false,\n    hasControl: false, // 内部参数\n    loadingIcon: true,\n    loadingText: '',\n    background: '',\n    backgroundLoadingShow: false, // 加载过程中是否显示背景\n    loadingBackground: '', // 内部参数 重新播放过程中，显示播放失败前的最后一帧数据。\n    decoder: 'decoder-pro.js',\n    decoderWASM: '',\n    url: '',// 内部参数\n    rotate: 0,\n    mirrorRotate: 'none', // 镜像xx\n    playbackConfig: {\n        playList: [], // {start:xx,end:xx}\n        fps: '', // fps值\n        showControl: true,\n        showRateBtn: false,\n        rateConfig: [],// 播放倍率切换，支持[{label:'正常',value:1},{label:'2倍',value:2}]\n        isCacheBeforeDecodeForFpsRender: false, // rfs渲染时，是否在解码前缓存数据\n        uiUsePlaybackPause: false, // ui上面是否使用 playbackPause 方法\n        isPlaybackPauseClearCache: true,// playbackPause是否清除缓存数据\n        isUseFpsRender: false, // 是否使用固定的fps渲染，如果设置的fps小于流推过来的，会造成内存堆积甚至溢出\n        isUseLocalCalculateTime: false, // 是否使用本地时间来计算playback时间\n        localOneFrameTimestamp: 40, // 一帧 40ms, isUseLocalCalculateTime 为 true 生效。\n        supportWheel: false,// 是否支持滚动轴切换精度。\n    },\n    qualityConfig: [], // 支持 ['高清','超清','4K']\n    defaultStreamQuality: '',\n    scaleConfig: ['拉伸', '缩放', '正常'],\n    // text: '',\n    forceNoOffscreen: true, // 默认是不采用\n    hiddenAutoPause: false,\n    protocol: PLAYER_PLAY_PROTOCOL.fetch, // 内部参数\n    demuxType: DEMUX_TYPE.flv, // 内部参数\n    useWasm: false,//wasm 解码 （inner）默认\n    useWCS: false, //\n    useSIMD: true, // pro 默认优先使用wasm simd解码，不支持则使用wasm解码\n    wcsUseVideoRender: true, // wcs 是否使用 video 渲染\n    wasmUseVideoRender: true, // wasm 用video标签渲染\n    mseUseCanvasRender: false,//mse 用canvas标签渲染\n    hlsUseCanvasRender: false,// hls 用canvas标签渲染\n    useMSE: false, //\n    useOffscreen: false, //  内部参数\n    mseDecodeErrorReplay: true,// mse 解码失败重新播放\n    wcsDecodeErrorReplay: true,// wcs 解码失败重新播放\n    wasmDecodeErrorReplay: true, // 解码失败重新播放。\n    autoWasm: true, // 自动降级到 wasm 模式\n    webglAlignmentErrorReplay: true, // webgl对齐失败重新播放。\n    openWebglAlignment: false,//  https://github.com/langhuihui/jessibuca/issues/152\n    syncAudioAndVideo: false,// 音视频同步\n    // playback config\n    playbackDelayTime: 1000, // TF卡流播放延迟时间  Inner\n    playbackFps: 25, // Inner\n    playbackForwardMaxRateDecodeIFrame: DEFAULT_PLAYBACK_FORWARD_MAX_RATE_DECODE_IFRAME,// max rate render i frame , Inner\n    playbackCurrentTimeMove: true, // Inner\n\n    useVideoRender: true, // 使用video标签渲染\n    useCanvasRender: false, // 使用canvas渲染\n    networkDelayTimeoutReplay: false, // 网络延迟重连\n    recordType: FILE_SUFFIX.mp4,\n    checkFirstIFrame: true, // 检查第一帧是否是I帧\n    nakedFlowFps: 25, // 裸流fps\n    audioEngine: null, // 音频引擎\n    isShowRecordingUI: true, // 是否显示录制中\n    isShowZoomingUI: true, // 是否显示缩放中\n    useFaceDetector: false, // 使用人脸检测\n    useObjectDetector: false, // 使用物体检测\n    ptzClickType: PTZ_ACTIVE_EVENT_TYPE.click, // PTZ 点击类型\n    // 微信安卓音频播放块大小\n    // 计算规则 48000 * ms / 1000 = size,\n    // 48000 * 200 /1000 = 9600  播放时长200ms\n    // 48000 * 175 /1000 = 8400  播放时长175ms\n    // 48000 * 150 /1000 = 7200  播放时长150ms\n    // 48000 * 125 /1000 = 6000  播放时长125ms\n    // 48000 * 100 /1000 = 4800  播放时长100ms default\n    // 48000 * 50 /1000 = 2400  播放时长50ms\n    // 48000 * 25 /1000 = 1200  播放时长25ms\n    // 48000 * 10 /1000 = 480  播放时长10ms\n    weiXinInAndroidAudioBufferSize: 4800,\n    isCrypto: false,// 是否加密\n    cryptoKey: '',// 加密key\n    cryptoIV: '',// 加密iv\n    cryptoKeyUrl: '',// 加密key获取域名\n    autoResize: false,// 自动调整大小 inner\n    useWebFullScreen: false,// 使用web全屏(旋转播放器90度)(只会在移动端生效)\n    ptsMaxDiff: 60 * 60, //单位(秒)，默认值是1H\n    aiFaceDetectWidth: 192, // 人脸检测宽度\n    aiObjectDetectWidth: 192, // 物体检测宽度\n    videoRenderSupportScale: true, // video渲染支持Scale\n    mediaSourceTsIsMaxDiffReplay: true // 当ts间隔超过最大值之后，重新播放\n}\n\n\nexport const WORKER_CMD_TYPE = {\n    init: 'init',\n    initVideo: 'initVideo',\n    render: 'render',\n    playAudio: 'playAudio',\n    initAudio: 'initAudio',\n    kBps: 'kBps',\n    decode: 'decode',\n    audioCode: 'audioCode',\n    videoCode: 'videoCode',\n    videoCodec: 'videoCodec',\n    videoNalu: 'videoNalu',\n    wasmError: 'wasmError',\n    workerFetch: 'workerFetch',\n    iframeIntervalTs: 'iframeIntervalTs',\n    workerEnd: 'workerEnd',\n    networkDelay: 'networkDelay',\n    playbackStreamVideoFps: 'playbackStreamVideoFps',\n    wasmDecodeVideoNoResponseError: 'wasmDecodeVideoNoResponseError',\n    simdH264DecodeVideoWidthIsTooLarge: 'simdH264DecodeVideoWidthIsTooLarge',\n    websocketOpen: 'websocketOpen',\n    closeEnd: 'closeEnd',\n}\n\nexport const WASM_ERROR = {\n    invalidNalUnitSize: 'Invalid NAL unit size',\n    // errorSplittingTheInputIntoNALUnits: 'Error splitting the input into NAL units'\n}\n\nexport const MEDIA_TYPE = {\n    audio: 1,\n    video: 2\n}\n\nexport const FLV_MEDIA_TYPE = {\n    audio: 8,\n    video: 9,\n    scriptData: 18\n}\n\nexport const WORKER_SEND_TYPE = {\n    init: 'init',\n    decode: 'decode',\n    audioDecode: 'audioDecode',\n    videoDecode: 'videoDecode',\n    initAudioCodec: 'initAudioCodec',\n    initVideoCodec: 'initVideoCodec',\n    close: 'close',\n    updateConfig: 'updateConfig',\n    resetDecode: 'resetDecode',\n    clearBuffer: 'clearBuffer',\n    resetAudioDecode: 'resetAudioDecode',\n    resetVideoDecode: 'resetVideoDecode',\n    fetchStream: 'fetchStream',\n    sendWsMessage: 'sendWsMessage',\n}\n\n\n// inner events\nexport const EVENTS = {\n    fullscreen: 'fullscreen$2',\n    webFullscreen: 'webFullscreen',\n    decoderWorkerInit: 'decoderWorkerInit',\n    play: 'play',\n    playing: 'playing',\n    pause: 'pause',\n    mute: 'mute',\n    load: 'load',\n    loading: 'loading',\n    zooming: 'zooming',\n    videoInfo: 'videoInfo',\n    timeUpdate: 'timeUpdate',\n    audioInfo: \"audioInfo\",\n    log: 'log',\n    error: \"error\",\n    kBps: 'kBps',\n    timeout: 'timeout',\n    delayTimeout: 'delayTimeout',\n    delayTimeoutRetryEnd: 'delayTimeoutRetryEnd',\n    loadingTimeout: 'loadingTimeout',\n    loadingTimeoutRetryEnd: 'loadingTimeoutRetryEnd',\n    stats: 'stats',\n    performance: \"performance\",\n    faceDetectActive: 'faceDetectActive',\n    objectDetectActive: 'objectDetectActive',\n    // record\n    record: 'record',\n    recording: 'recording',\n    recordingTimestamp: 'recordingTimestamp',\n    recordStart: 'recordStart',\n    recordEnd: 'recordEnd',\n    recordCreateError: 'recordCreateError',\n    recordBlob: 'recordBlob',\n\n    buffer: 'buffer',\n    videoFrame: 'videoFrame',\n    start: 'start',\n    metadata: 'metadata',\n    resize: 'resize',\n    volumechange: 'volumechange',\n    destroy: 'destroy',\n    beforeDestroy: 'beforeDestroy',\n\n    // stream\n    streamEnd: 'streamEnd',\n    streamRate: 'streamRate',\n    streamAbps: 'streamAbps',\n    streamVbps: 'streamVbps',\n    streamDts: 'streamDts',\n    streamSuccess: 'streamSuccess',\n    streamMessage: 'streamMessage',\n    streamError: 'streamError',\n    streamStats: 'streamStats',\n\n    // MSE\n    mseSourceOpen: 'mseSourceOpen',\n    mseSourceClose: 'mseSourceClose',\n    mseSourceended: 'mseSourceended',\n    mseSourceBufferError: 'mseSourceBufferError',\n    mseSourceBufferBusy: 'mseSourceBufferBusy',\n    mseSourceBufferFull: 'mseSourceBufferFull',\n    // VIDEO\n    videoWaiting: 'videoWaiting',\n    videoTimeUpdate: 'videoTimeUpdate',\n    videoSyncAudio: 'videoSyncAudio',\n    //\n    playToRenderTimes: 'playToRenderTimes',\n    playbackTime: 'playbackTime',\n    playbackTimestamp: 'playbackTimestamp',\n    playbackPrecision: 'playbackPrecision',\n    playbackJustTime: 'playbackJustTime',\n    playbackStats: 'playbackStats',\n    playbackSeek: 'playbackSeek',\n    playbackPause: 'playbackPause',\n    playbackPauseOrResume: 'playbackPauseOrResume',\n    playbackRateChange: 'playbackRateChange',\n    playbackPreRateChange: 'playbackPreRateChange',\n\n    ptz: 'ptz',\n    streamQualityChange: 'streamQualityChange',\n    visibilityChange: \"visibilityChange\",\n    netBuf: 'netBuf',\n    close: 'close',\n    networkDelayTimeout: 'networkDelayTimeout',\n    togglePerformancePanel: 'togglePerformancePanel',\n    viewResizeChange: 'viewResizeChange',\n    flvDemuxBufferSizeTooLarge: 'flvDemuxBufferSizeTooLarge',\n    // talk\n    talkGetUserMediaSuccess: 'talkGetUserMediaSuccess',\n    talkGetUserMediaFail: 'talkGetUserMediaFail',\n    talkGetUserMediaTimeout: 'talkGetUserMediaTimeout',\n    talkStreamStart: 'talkStreamStart',\n    talkStreamOpen: 'talkStreamOpen',\n    talkStreamClose: 'talkStreamClose',\n    talkStreamError: 'talkStreamError',\n    talkStreamInactive: 'talkStreamInactive',\n\n    webrtcDisconnect: 'webrtcDisconnect',\n    webrtcFailed: 'webrtcFailed',\n    webrtcClosed: 'webrtcClosed',\n\n    // crash\n    crashLog: 'crashLog',\n\n    // dom\n    focus: 'focus',\n    blur: 'blur',\n    visibilityHiddenTimeout: 'visibilityHiddenTimeout',\n\n    // websocket\n    websocketOpen: 'websocketOpen',\n    websocketClose: 'websocketClose',\n    websocketError: 'websocketError',\n    websocketMessage: 'websocketMessage',\n\n    // ai\n\n    aiObjectDetectorInfo: 'aiObjectDetectorInfo',\n    aiFaceDetector: 'aiFaceDetector',\n\n    //\n    playFailedAndPaused: 'playFailedAndPaused',\n}\n\n// jessibuca events\nexport const JESSIBUCA_EVENTS = {\n    load: EVENTS.load,\n    timeUpdate: EVENTS.timeUpdate,\n    videoInfo: EVENTS.videoInfo,\n    audioInfo: EVENTS.audioInfo,\n    error: EVENTS.error,\n    kBps: EVENTS.kBps,\n    start: EVENTS.start,\n    timeout: EVENTS.timeout,\n    loadingTimeout: EVENTS.loadingTimeout,\n    loadingTimeoutRetryEnd: EVENTS.loadingTimeoutRetryEnd,\n    delayTimeout: EVENTS.delayTimeout,\n    delayTimeoutRetryEnd: EVENTS.delayTimeoutRetryEnd,\n    fullscreen: 'fullscreen',\n    webFullscreen: EVENTS.webFullscreen,\n    play: EVENTS.play,\n    pause: EVENTS.pause,\n    mute: EVENTS.mute,\n    stats: EVENTS.stats,\n    performance: EVENTS.performance,\n    recordingTimestamp: EVENTS.recordingTimestamp,\n    recordStart: EVENTS.recordStart,\n    recordEnd: EVENTS.recordEnd,\n    recordBlob: EVENTS.recordBlob,\n    playToRenderTimes: EVENTS.playToRenderTimes,\n\n    // playback\n    playbackSeek: EVENTS.playbackSeek,\n    playbackStats: EVENTS.playbackStats,\n    playbackTimestamp: EVENTS.playbackTimestamp,\n    playbackPauseOrResume: EVENTS.playbackPauseOrResume,\n    playbackPreRateChange: EVENTS.playbackPreRateChange,\n    playbackRateChange: EVENTS.playbackRateChange,\n\n    ptz: EVENTS.ptz,\n    streamQualityChange: EVENTS.streamQualityChange,\n    zooming: EVENTS.zooming,\n    crashLog: EVENTS.crashLog,\n\n    focus: EVENTS.focus,\n    blur: EVENTS.blur,\n    visibilityHiddenTimeout: EVENTS.visibilityHiddenTimeout,\n    visibilityChange: EVENTS.visibilityChange,\n\n    // websocket\n    websocketOpen: EVENTS.websocketOpen,\n    //\n    networkDelayTimeout: EVENTS.networkDelayTimeout,\n    aiObjectDetectorInfo: EVENTS.aiObjectDetectorInfo,\n    playFailedAndPaused: EVENTS.playFailedAndPaused,\n}\n\nexport const TALK_EVENTS = {\n    talkStreamClose: EVENTS.talkStreamClose,\n    talkStreamError: EVENTS.talkStreamError,\n    talkStreamInactive: EVENTS.talkStreamInactive,\n    talkGetUserMediaTimeout: EVENTS.talkGetUserMediaTimeout,\n}\n\nexport const EVENTS_ERROR = {\n    playError: 'playIsNotPauseOrUrlIsNull',\n    fetchError: \"fetchError\",\n    websocketError: 'websocketError',\n    webcodecsH265NotSupport: 'webcodecsH265NotSupport',\n    webcodecsDecodeError: 'webcodecsDecodeError',\n    mediaSourceH265NotSupport: 'mediaSourceH265NotSupport',\n    mediaSourceDecoderConfigurationError: 'mediaSourceDecoderConfigurationError',\n    mediaSourceFull: EVENTS.mseSourceBufferFull,\n    mseSourceBufferError: EVENTS.mseSourceBufferError,\n    mediaSourceAppendBufferError: 'mediaSourceAppendBufferError',\n    mediaSourceBufferListLarge: 'mediaSourceBufferListLarge',\n    mediaSourceAppendBufferEndTimeout: 'mediaSourceAppendBufferEndTimeout',\n    mediaSourceTsIsMaxDiff: 'mediaSourceTsIsMaxDiff',\n    wasmDecodeError: 'wasmDecodeError',\n    hlsError: 'hlsError',\n    webrtcError: 'webrtcError',\n    webglAlignmentError: 'webglAlignmentError',\n    webcodecsWidthOrHeightChange: 'webcodecsWidthOrHeightChange',\n    tallWebsocketClosedByError: 'tallWebsocketClosedByError',\n    flvDemuxBufferSizeTooLarge: EVENTS.flvDemuxBufferSizeTooLarge,\n    wasmDecodeVideoNoResponseError: 'wasmDecodeVideoNoResponseError',\n    audioChannelError: 'audioChannelError',\n    simdH264DecodeVideoWidthIsTooLarge: 'simdH264DecodeVideoWidthIsTooLarge',\n}\n\n\nexport const WEBSOCKET_STATUS = {\n    notConnect: 'notConnect',\n    open: 'open',\n    close: 'close',\n    error: 'error'\n}\n\nexport const WEBSOCKET_STATUS_CODE = {\n    connecting: 0,\n    open: 1,\n    closing: 2,\n    closed: 3\n}\n\n\nexport const BUFFER_STATUS = {\n    empty: 'empty',\n    buffering: 'buffering',\n    full: 'full'\n}\n\n\nexport const SCREENSHOT_TYPE = {\n    download: 'download',\n    base64: 'base64',\n    blob: 'blob'\n}\n\n\nexport const RECORDING_TYPE = {\n    download: 'download',\n    blob: 'blob'\n}\n\n\nexport const VIDEO_ENC_TYPE = {\n    7: 'H264(AVC)', //\n    12: 'H265(HEVC)' //\n}\n\nexport const VIDEO_ENC_CODE = {\n    h264: 7,\n    h265: 12\n}\n\nexport const VIDEO_ENC_TYPE_SHOW = {\n    h264: 'H264(AVC)',\n    h265: 'H265(HEVC)'\n}\n\nexport const AUDIO_ENC_CODE = {\n    AAC: 10,\n    ALAW: 7,\n    MULAW: 8,\n    MP3: 2\n}\n\nexport const AUDIO_ENC_CODE_SHOW = {\n    AAC: 'AAC',\n    ALAW: 'ALAW(g711a)',\n    MULAW: 'MULAW(g711u)'\n}\n\nexport const AUDIO_ENC_TYPE = {\n    10: 'AAC',\n    7: 'ALAW',\n    8: 'MULAW'\n}\n\n\nexport const H264_NAL_TYPE = {\n    sps: 7,\n    pps: 8,\n    iFrame: 5,\n    kUnspecified: 0,\n    kSliceNonIDR: 1,\n    kSliceDPA: 2,\n    kSliceDPB: 3,\n    kSliceDPC: 4,\n    kSliceIDR: 5,\n    kSliceSEI: 6,\n    kSliceSPS: 7,\n    kSlicePPS: 8,\n    kSliceAUD: 9,\n    kEndOfSequence: 10,\n    kEndOfStream: 11,\n    kFiller: 12,\n    kSPSExt: 13,\n    kReserved0: 14,\n}\n\nexport const H265_NAL_TYPE = {\n    vps: 32, // 语义为视频参数集\n    sps: 33, // 语义为序列参数集\n    pps: 34, // 语义为图像参数集\n    sei: 39, //SEI 语义为补充增强信息\n    //iFrame: 19, // 语义为可能有RADL图像的IDR图像的SS编码数据 IDR\n    //pFrame: 1, //  语义为被参考的后置图像，且非TSA、非STSA的SS编码数据\n    //nLp: 20, // kSliceIDR_N_LP\n}\n\n\nexport const CONTROL_HEIGHT = 38\nexport const CONTROL_PLAYBACK_HEIGHT = 48\n\nexport const SCALE_MODE_TYPE = {\n    full: 0, //  视频画面完全填充canvas区域,画面会被拉伸\n    auto: 1, // 视频画面做等比缩放后,高或宽对齐canvas区域,画面不被拉伸,但有黑边\n    fullAuto: 2 // 视频画面做等比缩放后,完全填充canvas区域,画面不被拉伸,没有黑边,但画面显示不全\n}\n\n\nexport const CANVAS_RENDER_TYPE = {\n    webcodecs: 'webcodecs',\n    webgl: 'webgl',\n    offscreen: 'offscreen',\n    mse: 'mse',\n    hls: 'hls'\n}\n\nexport const ENCODED_VIDEO_TYPE = {\n    key: 'key',\n    delta: 'delta'\n}\n\n\nexport const MP4_CODECS = {\n    avc: 'video/mp4; codecs=\"avc1.64002A\"',\n    hev: 'video/mp4; codecs=\"hev1.1.6.L123.b0\"',\n}\n\n\nexport const MEDIA_SOURCE_STATE = {\n    ended: 'ended',\n    open: 'open',\n    closed: 'closed'\n}\n\n\n// frag duration\nexport const FRAG_DURATION = Math.ceil(1000 / 25)\n\n\nexport const AUDIO_SYNC_VIDEO_DIFF = 1000; // ms\n\n// renderTimeDay once length\nexport const PLAYBACK_RENDER_ONCE_LENGTH = 2000;\n\nexport const HOT_KEY = {\n    esc: 27, //\n    arrowUp: 38, //\n    arrowDown: 40, //\n}\n\n// playback control time precision\nexport const PLAYBACK_CONTROL_TIME_PRECISION = {\n    oneHour: 'oneHour', // 60min\n    halfHour: 'halfHour', // 30min\n    tenMin: 'tenMin', // 10min\n    fiveMin: 'fiveMin', // 5min\n    // oneMin: \"oneMin\" // 1min\n}\n\nexport const PLAYBACK_CONTROL_TIME_PRECISION_CLASS = {\n    oneHour: 'one-hour', // 60min\n    halfHour: 'half-hour', // 30min\n    tenMin: 'ten-min', // 10min\n    fiveMin: 'five-min', // 5min\n    // oneMin: 'one-min' // 1min\n}\n\nexport const PLAYBACK_CONTROL_TIME_PRECISION_TEXT = {\n    oneHour: '1h', // 60min\n    halfHour: '30min', // 30min\n    tenMin: '10min', // 10min\n    fiveMin: '5min', // 5min\n    // oneMin: '1min' // 1min\n}\n\n//\nexport const PLAYBACK_CONTROL_TIME_PRECISION_ARRAY = [\n    'oneHour', 'halfHour', 'tenMin', 'fiveMin'\n]\n\nexport const PTZ_ARROW = ['up', 'right', 'down', 'left'];\n\nexport const PTZ_OBJ = {\n    up: \"up\",\n    right: 'right',\n    down: 'down',\n    left: 'left',\n    stop: 'stop'\n}\n\nexport const TALK_ENC_TYPE = {\n    g711a: 'g711a',\n    g711u: 'g711u'\n}\n\nexport const SCREENSHOT_FORMAT_TYPE = {\n    png: 'image/png',\n    jpeg: 'image/jpeg',\n    webp: 'image/webp'\n};\n\nexport const PLAYBACK_VIDEO_MAX_BUFFER_SIZE = 50;\n\n\nexport const MEDIA_SOURCE_EVENTS = {\n    sourceClose: 'sourceclose',\n    sourceOpen: 'sourceopen',\n    sourceended: 'sourceended'\n}\n\nexport const VIDEO_ELEMENT_EVENTS = {\n    canplay: 'canplay',\n    waiting: \"waiting\",\n    timeUpdate: 'timeupdate',\n    ratechange: 'ratechange'\n}\n\n\nexport const VIDEO_ENCODE_TYPE = {\n    h264: 'avc',\n    h265: 'hevc'\n}\n\n\nexport const AVCPacketType = {\n    AVCSequenceHeader: 0,\n    AVCNalu: 1,\n}\n\n\nexport const WCS_ERROR = {\n    keyframeIsRequiredError: 'A key frame is required after configure() or flush()',\n    canNotDecodeClosedCodec: \"Cannot call 'decode' on a closed codec\",\n}\nexport const FETCH_ERROR = {\n    abortError: 'The user aborted a request',\n    abortError2: 'AbortError',\n    abort: 'AbortError'\n}\n\nexport const PLAYER_STATUS = {\n    loading: 'loading',\n    playing: 'playing',\n    paused: 'paused',\n    destroy: 'destroy'\n}\n\n\nexport const AVC_PACKET_TYPE = {\n    sequenceHeader: 0,\n    nalu: 1\n}\n\nexport const FRAME_TYPE = {\n    keyFrame: 1,\n    interFrame: 2\n}\n\n//     RTP_PAYLOAD_TYPE_PCMU    = 0,   // g711u\n//     RTP_PAYLOAD_TYPE_PCMA    = 8,   // g711a\n//     RTP_PAYLOAD_TYPE_JPEG    = 26,\n//     RTP_PAYLOAD_TYPE_H264    = 96,\n//     RTP_PAYLOAD_TYPE_H265    = 97,\n//     RTP_PAYLOAD_TYPE_OPUS    = 98,\n//     RTP_PAYLOAD_TYPE_AAC     = 99,\n//     RTP_PAYLOAD_TYPE_G726    = 100,\n//     RTP_PAYLOAD_TYPE_G726_16 = 101,\n//     RTP_PAYLOAD_TYPE_G726_24 = 102,\n//     RTP_PAYLOAD_TYPE_G726_32 = 103,\n//     RTP_PAYLOAD_TYPE_G726_40 = 104,\n//     RTP_PAYLOAD_TYPE_SPEEX   = 105,\nexport const RTP_PAYLOAD_TYPE = {\n    pcma: 8,\n    g711a: 8,\n    pcmu: 0,\n    g711u: 0,\n    jpeg: 26,\n    h264: 96,\n    h265: 97,\n    opus: 98,\n}\n\n\nexport const TALK_PACKET_TYPE = {\n    empty: 'empty', // 裸的协议\n    rtp: 'rtp',\n    opus: 'opus'\n}\n\n\nexport const RECORD_STREAM_TYPE = {\n    stream: 'stream',\n    playback: 'playback'\n}\n\n\nexport const WEBSOCKET_EVENTS = {\n    open: 'open',\n    close: 'close',\n    error: 'error',\n    message: 'message'\n}\n\nexport const TALK_ENGINE = {\n    worklet: 'worklet',\n    script: 'script'\n}\n\n// default talk options\nexport const DEFAULT_TALK_OPTIONS = {\n    encType: TALK_ENC_TYPE.g711a,\n    packetType: TALK_PACKET_TYPE.rtp, // 默认的包个格式化\n    rtpSsrc: '0000000000', // 10 位\n    numberChannels: 1, // 采样通道\n    sampleRate: 8000, // 采样率\n    sampleBitsWidth: 16, // 采样精度\n    debug: false,\n    debugLevel: DEBUG_LEVEL.warn, // debug level\n    testMicrophone: false, // 测试麦克风获取\n    audioBufferLength: 160, // 默认走的是 20ms 8000 采样率 16 位精度\n    engine: TALK_ENGINE.worklet, //\n    checkGetUserMediaTimeout: false, // 检测 getUserMedia 超时\n    getUserMediaTimeout: 10 * 1000, // getUserMedia 超时时间 10s\n}\n\n\nexport const AUDIO_ENGINE_TYPE = {\n    worklet: 'worklet',\n    script: 'script', // default\n    active: 'active' //\n}\n\n\nexport const CONTROL_BUTTON_OPTIONS = {\n    name: '',\n    index: 0,\n    icon: '',\n    iconHover: '',\n    iconTitle: '',\n    activeIcon: '',\n    activeIconHover: '',\n    activeIconTitle: '',\n    click: null,\n    activeClick: null,\n}\n\nexport const MENU_ITEM_OPTIONS = {\n    content: '',\n    click: null,\n    index: 0\n}\n\n\n// multi options\nexport const DEFAULT_MULTI_OPTIONS = {\n    container: '',\n    maxSplit: 4, // 最大分屏数\n    split: 1, // 默认分屏数\n    style: {\n        border: \"#343434\",\n        borderSelect: \"#FFCC00\",\n        background: \"#000\"\n    }\n}\n\n//\nexport const MULTI_EVENTS = {\n    dblSelected: 'multiDblSelected', // 双击选中窗口\n    selected: 'multiSelected', // 选中窗口\n    mouseOver: 'multiMouseover', // 鼠标移入\n    mouseOut: 'multiMouseout', // 鼠标移出\n    mouseUp: 'multiMouseup', // 鼠标mouseUp事件\n}\n","/*!\n* screenfull\n* v5.1.0 - 2020-12-24\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (element, options) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar onFullScreenEntered = function () {\n\t\t\t\t\tthis.off('change', onFullScreenEntered);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenEntered);\n\n\t\t\t\telement = element || document.documentElement;\n\n\t\t\t\tvar returnPromise = element[fn.requestFullscreen](options);\n\n\t\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\t\treturnPromise.then(onFullScreenEntered).catch(reject);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\texit: function () {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tif (!this.isFullscreen) {\n\t\t\t\t\tresolve();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar onFullScreenExit = function () {\n\t\t\t\t\tthis.off('change', onFullScreenExit);\n\t\t\t\t\tresolve();\n\t\t\t\t}.bind(this);\n\n\t\t\t\tthis.on('change', onFullScreenExit);\n\n\t\t\t\tvar returnPromise = document[fn.exitFullscreen]();\n\n\t\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\t\treturnPromise.then(onFullScreenExit).catch(reject);\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t},\n\t\ttoggle: function (element, options) {\n\t\t\treturn this.isFullscreen ? this.exit() : this.request(element, options);\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = {isEnabled: false};\n\t\t} else {\n\t\t\twindow.screenfull = {isEnabled: false};\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tisEnabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n","import {AUDIO_ENC_CODE, AVC_PACKET_TYPE} from \"../constant\";\n\n/**\n *\n * @param arrayItem\n * @returns {Uint8Array}\n */\nexport function aacEncoderConfigurationRecord(arrayItem) {\n    // 需要取出7个字节的ADTS头。\n    const accADTSHeader = arrayItem.slice(0, 7);\n    // 七个字节的adts头；\n    //     aac 格式\n    // 需要先发序列帧。然后再发后续的\n    // 序列帧：asc 序列\n    // 后续的帧，0 变成 1 就行了。\n    // 0: Main profile\n    // 1: Low Complexity profile(LC)\n    // 2: Scalable Sampling Rate profile(SSR)\n    const profile = ((accADTSHeader[2] & 0xc0) >> 6);\n    // const profile = 0;\n    // const sampleRate = (+audioInfo.sampleRate);\n    const sampleRate = ((accADTSHeader[2] & 0x3C) >> 2)\n    // const channel = (+audioInfo.channel);\n    const channel = ((accADTSHeader[2] & 0x1) << 2) | ((accADTSHeader[3] & 0xc0) >> 6)\n    const config1 = (profile << 3) | ((sampleRate & 0xe) >> 1)\n    const config2 = ((sampleRate & 0x1) << 7) | (channel << 3)\n    // 0xAF >> 4 === 10\n    const temp = [0xAF, 0x00, config1, config2];\n    const arrayBuffer = new Uint8Array(temp);\n\n    return arrayBuffer;\n}\n\n/**\n *\n * @param arrayItem\n * @returns {Uint8Array}\n */\nexport function aacEncoderNalePacket(arrayItem) {\n    arrayItem.unshift(0xAF, 0x01);\n    const arrayBuffer = new Uint8Array(arrayItem);\n    return arrayBuffer;\n}\n\n/**\n *\n * @param payload\n * @returns {boolean}\n */\nexport function isAacCodecPacket(payload) {\n    return (payload[0] >> 4) === AUDIO_ENC_CODE.AAC && payload[1] === AVC_PACKET_TYPE.sequenceHeader\n}\n","import {\n    MP4_CODECS,\n    FILE_SUFFIX,\n    H264_NAL_TYPE,\n    VIDEO_ENC_TYPE_SHOW,\n    H265_NAL_TYPE,\n    AUDIO_ENC_TYPE,\n    AUDIO_ENC_CODE_SHOW,\n    AUDIO_ENC_CODE,\n    DEFAULT_JESSIBUCA_OPTIONS,\n    DEFAULT_PLAYER_OPTIONS,\n    DEFAULT_TALK_OPTIONS,\n    CONTROL_BUTTON_OPTIONS, MENU_ITEM_OPTIONS, DEFAULT_MULTI_OPTIONS\n} from \"../constant\";\nimport screenfull from \"screenfull\";\nimport {isAacCodecPacket} from \"./aac\";\n\nexport function noop() {\n}\n\n\nexport function supportOffscreen($canvas) {\n    return typeof $canvas.transferControlToOffscreen === 'function';\n}\n\n\nexport function supportOffscreenV2() {\n    return typeof OffscreenCanvas !== \"undefined\";\n}\n\n\nexport function createContextGL($canvas) {\n    let gl = null;\n\n    const validContextNames = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"];\n    let nameIndex = 0;\n\n    while (!gl && nameIndex < validContextNames.length) {\n        const contextName = validContextNames[nameIndex];\n\n        try {\n            let contextOptions = {preserveDrawingBuffer: true};\n            gl = $canvas.getContext(contextName, contextOptions);\n        } catch (e) {\n            console.error(e);\n            gl = null;\n        }\n\n        if (!gl || typeof gl.getParameter !== \"function\") {\n            gl = null;\n        }\n\n        ++nameIndex;\n    }\n\n\n    return gl;\n}\n\n\nexport function audioContextUnlock(context) {\n    context.resume();\n    const source = context.createBufferSource();\n    source.buffer = context.createBuffer(1, 1, 22050);\n    source.connect(context.destination);\n    if (source.noteOn) {\n        source.noteOn(0);\n    } else {\n        source.start(0);\n    }\n}\n\nexport function dataURLToFile(dataURL = '') {\n    const arr = dataURL.split(\",\");\n    const bstr = atob(arr[1]);\n    const type = arr[0].replace(\"data:\", \"\").replace(\";base64\", \"\")\n    let n = bstr.length, u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], 'file', {type});\n}\n\nexport function downloadFile(file, fileName) {\n    if (file instanceof Blob || file instanceof File) {\n        file = new Blob([file]);\n    }\n    const aLink = document.createElement(\"a\");\n    aLink.download = fileName;\n    aLink.href = file;\n    aLink.click();\n}\n\n\nexport function downloadImg(content, fileName) {\n    const aLink = document.createElement(\"a\");\n    aLink.download = fileName;\n    const href = URL.createObjectURL(content);\n    aLink.href = href;\n    aLink.click();\n    setTimeout(() => {\n        URL.revokeObjectURL(href);\n    }, isIOS() ? 1000 : 0)\n}\n\nexport function checkFull() {\n    let isFull = document.fullscreenElement || window.webkitFullscreenElement || document.msFullscreenElement;\n    if (isFull === undefined) isFull = false;\n    return !!isFull;\n}\n\nexport function now() {\n    return new Date().getTime();\n}\n\nexport const supportedWasm = (() => {\n    try {\n        if (typeof WebAssembly === \"object\"\n            && typeof WebAssembly.instantiate === \"function\") {\n            const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\n            if (module instanceof WebAssembly.Module)\n                return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n        }\n    } catch (e) {\n    }\n    return false;\n})();\n\nexport function clamp(num, a, b) {\n    return Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));\n}\n\nexport function setStyle(element, key, value) {\n    if (!element) {\n        return\n    }\n    if (typeof key === 'object') {\n        Object.keys(key).forEach(item => {\n            setStyle(element, item, key[item]);\n        });\n    }\n    element.style[key] = value;\n    return element;\n}\n\n\nexport function getStyle(element, key, numberType = true) {\n    if (!element) {\n        return 0\n    }\n\n    const value = getComputedStyle(element, null).getPropertyValue(key);\n    return numberType ? parseFloat(value) : value;\n}\n\nexport function getNowTime() {\n    if (performance && typeof performance.now === 'function') {\n        return performance.now();\n    }\n    return Date.now();\n}\n\nexport function calculationRate(callback) {\n    let totalSize = 0;\n    let lastTime = getNowTime();\n    return size => {\n        if (!isNumber(size)) {\n            return;\n        }\n        totalSize += size;\n        const thisTime = getNowTime();\n        const diffTime = thisTime - lastTime;\n        if (diffTime >= 1000) {\n            callback((totalSize / diffTime) * 1000);\n            lastTime = thisTime;\n            totalSize = 0;\n        }\n    };\n}\n\nexport function downloadRecord(blob, name, suffix) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = (name || now()) + '.' + (suffix || FILE_SUFFIX.webm);\n    a.click();\n    setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n    }, isIOS() ? 1000 : 0)\n}\n\nexport const env = '__ENV__';\nexport const version = '__VERSION__'\nexport const proVersionTime = '__BUILD_DAY__'\nexport const isDev = env === '\"development\"';\nexport const isProd = env === '\"production\"';\nexport const isRelease = env === '\"release\"';\n\nexport function isMobile() {\n    return (/iphone|ipod|android.*mobile|windows.*phone|blackberry.*mobile/i.test(window.navigator.userAgent.toLowerCase()));\n}\n\nexport function isPad() {\n    return (/ipad|android(?!.*mobile)|tablet|kindle|silk/i.test(window.navigator.userAgent.toLowerCase()));\n}\n\nexport function isAndroid() {\n    const UA = window.navigator.userAgent.toLowerCase();\n    return (/android/i.test(UA));\n}\n\nexport function getBrowser() {\n    const UserAgent = window.navigator.userAgent.toLowerCase() || '';\n    const browserInfo = {\n        type: '',\n        version: ''\n    };\n    const browserArray = {\n        IE: window.ActiveXObject || \"ActiveXObject\" in window, // IE\n        Chrome: UserAgent.indexOf('chrome') > -1 && UserAgent.indexOf('safari') > -1, // Chrome浏览器\n        Firefox: UserAgent.indexOf('firefox') > -1, // 火狐浏览器\n        Opera: UserAgent.indexOf('opera') > -1, // Opera浏览器\n        Safari: UserAgent.indexOf('safari') > -1 && UserAgent.indexOf('chrome') == -1, // safari浏览器\n        Edge: UserAgent.indexOf('edge') > -1, // Edge浏览器\n        QQBrowser: /qqbrowser/.test(UserAgent), // qq浏览器\n        WeixinBrowser: /MicroMessenger/i.test(UserAgent) // 微信浏览器\n    };\n    // console.log(browserArray)\n    for (let i in browserArray) {\n        if (browserArray[i]) {\n            let versions = '';\n            if (i === 'IE') {\n                const versionArray = UserAgent.match(/(msie\\s|trident.*rv:)([\\w.]+)/)\n                if (versionArray && versionArray.length > 2) {\n                    versions = UserAgent.match(/(msie\\s|trident.*rv:)([\\w.]+)/)[2];\n                }\n            } else if (i === 'Chrome') {\n                for (let mt in navigator.mimeTypes) {\n                    //检测是否是360浏览器(测试只有pc端的360才起作用)\n                    if (navigator.mimeTypes[mt]['type'] === 'application/360softmgrplugin') {\n                        i = '360';\n                    }\n                }\n                const versionArray = UserAgent.match(/chrome\\/([\\d.]+)/);\n                if (versionArray && versionArray.length > 1) {\n                    versions = versionArray[1];\n                }\n            } else if (i === 'Firefox') {\n                const versionArray = UserAgent.match(/firefox\\/([\\d.]+)/);\n                if (versionArray && versionArray.length > 1) {\n                    versions = versionArray[1];\n                }\n            } else if (i === 'Opera') {\n                const versionArray = UserAgent.match(/opera\\/([\\d.]+)/);\n                if (versionArray && versionArray.length > 1) {\n                    versions = versionArray[1];\n                }\n            } else if (i === 'Safari') {\n                const versionArray = UserAgent.match(/version\\/([\\d.]+)/);\n                if (versionArray && versionArray.length > 1) {\n                    versions = versionArray[1];\n                }\n            } else if (i === 'Edge') {\n                const versionArray = UserAgent.match(/edge\\/([\\d.]+)/);\n                if (versionArray && versionArray.length > 1) {\n                    versions = versionArray[1];\n                }\n            } else if (i === 'QQBrowser') {\n                const versionArray = UserAgent.match(/qqbrowser\\/([\\d.]+)/);\n                if (versionArray && versionArray.length > 1) {\n                    versions = versionArray[1];\n                }\n            }\n            browserInfo.type = i;\n            browserInfo.version = parseInt(versions);\n        }\n    }\n    return browserInfo;\n}\n\nexport function isIOS() {\n    const UA = window.navigator.userAgent.toLowerCase();\n    return UA && /iphone|ipad|ipod|ios/.test(UA);\n}\n\nexport function isSafari() {\n    const ua = window.navigator.userAgent;\n    return !ua.match(/Chrome/gi) && !!ua.match(/Safari/gi);\n}\n\nexport function parseTime(time, cFormat) {\n    if (arguments.length === 0) {\n        return null\n    }\n    var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\n    var date;\n    if (typeof time === 'object') {\n        date = time\n    } else {\n        if (('' + time).length === 10) time = parseInt(time) * 1000;\n        time = +time; // 转成int 型\n        date = new Date(time)\n    }\n    var formatObj = {\n        y: date.getFullYear(),\n        m: date.getMonth() + 1,\n        d: date.getDate(),\n        h: date.getHours(),\n        i: date.getMinutes(),\n        s: date.getSeconds(),\n        a: date.getDay()\n    };\n    var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\n        var value = formatObj[key]\n        if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1]\n        if (result.length > 0 && value < 10) {\n            value = '0' + value\n        }\n        return value || 0\n    });\n    return time_str\n}\n\n// 是否支持 webcodecs\nexport function supportWCS() {\n    return \"VideoEncoder\" in window;\n}\n\nexport function wcsIsConfigSupported(config) {\n    return new Promise((resolve, reject) => {\n        if (!supportWCS()) {\n            return reject('VideoEncoder is not supported')\n        }\n\n        if (!VideoEncoder.isConfigSupported) {\n            return reject('VideoEncoder.isConfigSupported is not a function')\n        }\n\n        VideoEncoder.isConfigSupported(config).then((result) => {\n            if (result.supported) {\n                resolve()\n            } else {\n                reject('VideoEncoder.isConfigSupported() result is not supported');\n            }\n        })\n    })\n\n}\n\nexport function supportWasmUseVideoRender() {\n    return 'VideoFrame' in window;\n}\n\nexport function toNumber(value) {\n    if (typeof value !== 'string') {\n        return value;\n    } else {\n        // 转换成 number 类型\n        var parsed = Number(value);\n        return isNaN(parsed) ? value : parsed;\n    }\n}\n\nexport function uuid16() {\n    return 'xxxxxxxxxxxx4xxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n    })\n}\n\nexport function throttle(callback, delay) {\n    let isThrottled = false;\n    let args;\n    let context;\n\n    function fn(...args2) {\n        if (isThrottled) {\n            args = args2;\n            context = this;\n            return;\n        }\n\n        isThrottled = true;\n        callback.apply(this, args2);\n        setTimeout(() => {\n            isThrottled = false;\n            if (args) {\n                fn.apply(context, args);\n                args = null;\n                context = null;\n            }\n        }, delay);\n    }\n\n    return fn;\n}\n\n\nexport function isDef(v) {\n    return v !== undefined && v !== null;\n}\n\nexport function formatVideoDecoderConfigure(avcC) {\n    let codecArray = avcC.subarray(1, 4);\n    let codecString = \"avc1.\";\n    for (let j = 0; j < 3; j++) {\n        let h = codecArray[j].toString(16);\n        if (h.length < 2) {\n            h = \"0\" + h\n        }\n        codecString += h\n    }\n\n    return {\n        codec: codecString,\n        description: avcC\n    }\n}\n\nexport function formatHevcVideoDecoderConfigure(hecvC) {\n    // The codec string begins with the prefix \"hev1.\" or \"hvc1.\", with a suffix of four dot-separated fields as described\n    // 'hvc1.2.4.L93.B0', //'hev1.1.6.H120.B0'\n    let codecArray = hecvC.subarray(1, 4);\n    // let codecString = \"hvc1.2.4.L93.B0\";\n    let codecString = 'hev1.1.6.L120.90';\n    // for (let j = 0; j < 3; j++) {\n    //     let h = codecArray[j].toString(16);\n    //     if (h.length < 2) {\n    //         h = \"0\" + h\n    //     }\n    //     codecString += h\n    // }\n\n    return {\n        codec: codecString,\n        description: hecvC\n    }\n}\n\n\nexport function isFullScreen() {\n    // return document.isFullScreen || document.mozIsFullScreen || document.webkitIsFullScreen;\n    return screenfull.isFullscreen\n}\n\n//\nexport function bpsSize(value) {\n    if (null == value || value === '') {\n        return \"0 KB/s\";\n    }\n    let size = parseFloat(value);\n    size = size.toFixed(2);\n    return size + 'KB/s';\n}\n\nexport function bpsSize$2(value) {\n    if (null == value || value === '' || parseFloat(value) === 0 || value === 'NaN') {\n        return \"0 KB/s\";\n    }\n    const unitArr = [\"KB/s\", \"MB/s\", \"GB/s\", \"TB/s\", \"PB/s\", \"EB/s\", \"ZB/s\", \"YB/s\"];\n    let index = 0;\n    const srcsize = parseFloat(value);\n    index = Math.floor(Math.log(srcsize) / Math.log(1024));\n    let size = srcsize / Math.pow(1024, index);\n    size = size.toFixed(2);//\n    return size + (unitArr[index] || unitArr[0]);\n}\n\nexport function formatFileSize(value) {\n    if (null == value || value == '') {\n        return \"0 Bytes\";\n    }\n    const unitArr = new Array(\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\");\n    let index = 0;\n    const srcsize = parseFloat(value);\n    index = Math.floor(Math.log(srcsize) / Math.log(1024));\n    var size = srcsize / Math.pow(1024, index);\n    size = size.toFixed(2);//保留的小数位数\n    return size + unitArr[index];\n}\n\nexport function isNumber(value) {\n    const toString = Object.prototype.toString;\n    return toString.call(value) === \"[object Number]\";\n}\n\n\nexport function fpsStatus(fps) {\n    let result = 0;\n    if (fps >= 24) {\n        result = 2;\n    } else if (fps >= 15) {\n        result = 1;\n    }\n\n    return result;\n}\n\nexport function createEmptyImageBitmap(width, height) {\n    const $canvasElement = document.createElement(\"canvas\");\n    $canvasElement.width = width;\n    $canvasElement.height = height;\n    const imageBitmap = window.createImageBitmap($canvasElement, 0, 0, width, height);\n    // release canvas\n    $canvasElement.width = 0;\n    $canvasElement.height = 0;\n    return imageBitmap;\n}\n\n\nexport function supportMSE() {\n    let result = false;\n    if ('MediaSource' in window && window.MediaSource.isTypeSupported(MP4_CODECS.avc)) {\n        result = true;\n    }\n    return result;\n}\n\n//\nexport function supportMSEDecodeHevc() {\n    let result = false;\n    if ('MediaSource' in window && window.MediaSource.isTypeSupported(MP4_CODECS.hev)) {\n        result = true;\n    }\n    return result;\n}\n\n// 查看是否webcodecs 支持 hevc解码\n// chrome 107\nexport function supportWCSDecodeHevc() {\n    const browserInfo = getBrowser();\n    return browserInfo.type.toLowerCase() === 'chrome' && browserInfo.version >= 107;\n}\n\nexport function supportMediaStreamTrack() {\n    let result = false;\n    if ('MediaStreamTrackGenerator' in window) {\n        result = true;\n    }\n    return result\n}\n\nexport function supportMediaStream() {\n    let result = false;\n    if ('MediaStream' in window) {\n        result = true;\n    }\n    return result;\n}\n\n\nexport function formatMp4VideoCodec(codec) {\n    return `video/mp4; codecs=\"${codec}\"`\n}\n\n\nexport function saveBlobToFile(fileName, blob) {\n    let url = window.URL.createObjectURL(blob);\n    let aLink = window.document.createElement('a');\n    aLink.download = fileName;\n    aLink.href = url;\n    //创建内置事件并触发\n    let evt = window.document.createEvent('MouseEvents');\n    evt.initEvent(\"click\", true, true); //initEvent 不加后两个参数在FF下会报错  事件类型，是否冒泡，是否阻止浏览器的默认行为\n    aLink.dispatchEvent(evt);\n    setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n    }, isIOS() ? 1000 : 0)\n}\n\nexport function isEmpty(value) {\n    return value === null || value === undefined\n}\n\nexport function isBoolean(value) {\n    return value === true || value === false;\n}\n\nexport function isNotEmpty(value) {\n    return !isEmpty(value)\n}\n\nexport function initPlayTimes() {\n    return {\n        playInitStart: '', //1\n        playStart: '', // 2\n        streamStart: '', //3\n        streamResponse: '', // 4\n        demuxStart: '', // 5\n        decodeStart: '', // 6\n        videoStart: '', // 7\n        playTimestamp: '',// playStart- playInitStart\n        streamTimestamp: '',// streamStart - playStart\n        streamResponseTimestamp: '',// streamResponse - streamStart\n        demuxTimestamp: '', // demuxStart - streamResponse\n        decodeTimestamp: '', // decodeStart - demuxStart\n        videoTimestamp: '',// videoStart - decodeStart\n        allTimestamp: '' // videoStart - playInitStart\n    }\n}\n\nfunction _formatWatermarkOptions(options) {\n    let defaultConfig = {\n        container: '',\n        left: '',\n        right: '',\n        top: '',\n        bottom: '',\n        opacity: 1,\n        backgroundColor: '',\n        image: {\n            src: '',\n            width: '100',\n            height: '60'\n        },\n        text: {\n            content: '',\n            fontSize: '14',\n            color: '#000'\n        },\n    }\n    const imageConfig = Object.assign(defaultConfig.image, options.image || {})\n    const textConfig = Object.assign(defaultConfig.text, options.text || {})\n    defaultConfig = Object.assign(defaultConfig, options, {\n        image: imageConfig,\n        text: textConfig\n    })\n\n    return defaultConfig;\n}\n\n\nexport function formatFullscreenWatermarkOptions(container, options) {\n    let defaultConfig = {\n        container: container || '',\n        text: '', // 文本\n        opacity: '',// 透明度\n        angle: '',// 倾斜角度\n        color: '',// 字体颜色\n        fontSize: '',// 字体大小\n        fontFamily: '',// 字体\n    }\n    defaultConfig = Object.assign(defaultConfig, options)\n    return {\n        watermark_parent_node: defaultConfig.container,\n        watermark_alpha: defaultConfig.opacity,\n        watermark_angle: defaultConfig.angle,\n        watermark_fontsize: defaultConfig.fontSize,\n        watermark_color: defaultConfig.color,\n        watermark_font: defaultConfig.fontFamily,\n        watermark_txt: defaultConfig.text,\n    }\n}\n\n// create watermark\nexport function createWatermark(options) {\n    let defaultConfig = _formatWatermarkOptions(options);\n    const $container = defaultConfig.container;\n\n    if (!$container) {\n        return\n    }\n\n    let shadowRoot = null;\n    const otDiv = document.createElement('div');\n    otDiv.setAttribute('style', 'pointer-events: none !important; display: block !important');\n\n    if (typeof otDiv.attachShadow === \"function\") {\n        shadowRoot = otDiv.attachShadow({mode: 'open'});\n    } else if (otDiv.shadowRoot) {\n        shadowRoot = otDiv.shadowRoot;\n    } else {\n        shadowRoot = otDiv;\n    }\n\n    const nodeList = $container.children;\n    const index = Math.floor(Math.random() * (nodeList.length - 1));\n\n    if (nodeList[index]) {\n        $container.insertBefore(otDiv, nodeList[index]);\n    } else {\n        $container.appendChild(otDiv);\n    }\n\n\n    const maskDiv = document.createElement('div');\n    let innerDom = null;\n    if (defaultConfig.image && defaultConfig.image.src) {\n        innerDom = document.createElement('img')\n        innerDom.style.height = '100%';\n        innerDom.style.width = '100%';\n        innerDom.style.objectFit = 'contain';\n        innerDom.src = defaultConfig.image.src;\n    } else if (defaultConfig.text && defaultConfig.text.content) {\n        innerDom = document.createTextNode(defaultConfig.text.content);\n    }\n\n    if (!innerDom) {\n        return;\n    }\n\n    maskDiv.appendChild(innerDom);\n\n    maskDiv.style.visibility = '';\n    maskDiv.style.position = \"absolute\";\n    maskDiv.style.display = 'block'\n    maskDiv.style['-ms-user-select'] = \"none\";\n    maskDiv.style['-moz-user-select'] = \"none\";\n    maskDiv.style['-webkit-user-select'] = \"none\";\n    maskDiv.style['-o-user-select'] = \"none\";\n    maskDiv.style['user-select'] = \"none\";\n    maskDiv.style['-webkit-touch-callout'] = \"none\";\n    maskDiv.style['-webkit-tap-highlight-color'] = \"rgba(0,0,0,0)\";\n    maskDiv.style['-webkit-text-size-adjust'] = \"none\";\n    maskDiv.style['-webkit-touch-callout'] = \"none\";\n    maskDiv.style.opacity = defaultConfig.opacity;\n    if (isNumber(defaultConfig.left)) {\n        maskDiv.style.left = defaultConfig.left + 'px';\n    }\n    if (isNumber(defaultConfig.right)) {\n        maskDiv.style.right = defaultConfig.right + 'px';\n    }\n    if (isNumber(defaultConfig.top)) {\n        maskDiv.style.top = defaultConfig.top + 'px';\n    }\n    if (isNumber(defaultConfig.bottom)) {\n        maskDiv.style.bottom = defaultConfig.bottom + 'px';\n    }\n    if (defaultConfig.backgroundColor) {\n        maskDiv.style.backgroundColor = defaultConfig.backgroundColor;\n    }\n    maskDiv.style.overflow = 'hidden';\n    maskDiv.style.zIndex = \"9999999\";\n    if (defaultConfig.image && defaultConfig.image.src) {\n        maskDiv.style.width = defaultConfig.image.width + 'px';\n        maskDiv.style.height = defaultConfig.image.height + 'px';\n    } else if (defaultConfig.text && defaultConfig.text.content) {\n        maskDiv.style.fontSize = defaultConfig.text.fontSize + 'px';\n        maskDiv.style.color = defaultConfig.text.color;\n    }\n\n    shadowRoot.appendChild(maskDiv)\n\n    // remove function\n    return () => {\n        $container.removeChild(otDiv);\n    }\n}\n\n// create image watermark\nexport function createImageWatermark(dataUrl, options) {\n    return new Promise((resolve, reject) => {\n        let defaultConfig = _formatWatermarkOptions(options);\n\n        if (!defaultConfig.image.src && !defaultConfig.text.content) {\n            return resolve(dataUrl);\n        }\n\n\n        let canvas = document.createElement('canvas')\n        canvas.width = options.width;\n        canvas.height = options.height;\n        let ctx = canvas.getContext('2d')\n        let x = 0;\n        let y = 0;\n        if (isNumber(defaultConfig.left)) {\n            x = defaultConfig.left;\n        } else if (isNumber(defaultConfig.right)) {\n            x = canvas.width - defaultConfig.right\n        }\n\n        if (isNumber(defaultConfig.top)) {\n            y = defaultConfig.top;\n        } else if (isNumber(defaultConfig.bottom)) {\n            y = canvas.height - defaultConfig.bottom;\n        }\n        const imag = new Image();\n        imag.src = dataUrl;\n        imag.onload = () => {\n            ctx.drawImage(imag, 0, 0);\n            if (defaultConfig.image && defaultConfig.image.src) {\n                const tempImage = new Image();\n                tempImage.src = defaultConfig.image.src;\n                tempImage.setAttribute(\"crossOrigin\", 'Anonymous')\n                tempImage.onload = () => {\n                    x -= defaultConfig.image.width;\n                    // y -= defaultConfig.image.height;\n                    ctx.drawImage(tempImage, x, y, defaultConfig.image.width, defaultConfig.image.height);\n                    resolve(canvas.toDataURL(options.format, options.quality));\n                }\n                tempImage.onerror = (e) => {\n                    reject();\n                }\n            } else if (defaultConfig.text && defaultConfig.text.content) {\n                // 设置填充字号和字体，样式\n                ctx.font = defaultConfig.text.fontSize + \"px 宋体\";\n                // color\n                ctx.fillStyle = defaultConfig.text.color;\n                // 设置右对齐\n                ctx.textAlign = 'right';\n                // 在指定位置绘制文字，这里指定距离右下角20坐标的地方\n                ctx.fillText(defaultConfig.text.content, x, y)\n                resolve(canvas.toDataURL(options.format, options.quality))\n            }\n        }\n\n        imag.onerror = (e) => {\n            reject(e)\n        }\n    })\n}\n\nexport function formatTimeTips(time) {\n    var result;\n\n    //\n    if (time > -1) {\n        var hour = Math.floor(time / 3600);\n        var min = Math.floor(time / 60) % 60;\n        var sec = time % 60;\n\n        sec = Math.round(sec);\n\n        if (hour < 10) {\n            result = '0' + hour + \":\";\n        } else {\n            result = hour + \":\";\n        }\n\n        if (min < 10) {\n            result += \"0\";\n        }\n        result += min + \":\";\n        if (sec < 10) {\n            result += \"0\";\n        }\n        result += sec.toFixed(0);\n    }\n\n    return result;\n}\n\n\n//\nexport function createVideoFrame(arrayBuffer, init) {\n    return new VideoFrame(arrayBuffer, init)\n}\n\n\nexport function getLocationSearch() {\n    var url = window.location.search; //获取url中\"?\"符后的字串\n    var theRequest = {};\n    if (url.indexOf(\"?\") != -1) {\n        var str = url.substr(1);\n        var strs = str.split(\"&\");\n        for (var i = 0; i < strs.length; i++) {\n            theRequest[strs[i].split(\"=\")[0]] = unescape(strs[i].split(\"=\")[1]);\n        }\n    }\n    return theRequest;\n};\n\n// min timestamp\nexport function formatMinTimeTips(time, second) {\n    let result = '';\n\n    //\n    if (time > -1) {\n        const hour = Math.floor(time / 60) % 60;\n        let min = time % 60;\n\n        min = Math.round(min);\n\n        if (hour < 10) {\n            result = '0' + hour + \":\";\n        } else {\n            result = hour + \":\";\n        }\n\n        if (min < 10) {\n            result += \"0\";\n        }\n        result += min;\n\n        if (!isEmpty(second)) {\n            if (second < 10) {\n                second = '0' + second;\n            }\n            result += (':' + second);\n        }\n    }\n\n    return result;\n}\n\n// second timestamp\nexport function formatSecondTimeTips(time) {\n    let result = '';\n    if (time > -1) {\n        const hour = Math.floor(time / 60 / 60) % 60;\n        let min = Math.floor(time / 60) % 60;\n        let second = time % 60\n\n        min = Math.round(min);\n\n        if (hour < 10) {\n            result = '0' + hour + \":\";\n        } else {\n            result = hour + \":\";\n        }\n\n        if (min < 10) {\n            result += \"0\";\n        }\n        result += min + ':';\n\n        if (second < 10) {\n            result += '0'\n        }\n        result += second\n    }\n\n    return result;\n}\n\n\nexport function formatSecondTime(time) {\n    let result = {};\n    if (time > -1) {\n        const hour = Math.floor(time / 60 / 60) % 60;\n        let min = Math.floor(time / 60) % 60;\n        let second = time % 60\n        result = {\n            hour,\n            min,\n            second\n        }\n    }\n\n    return result;\n}\n\n/**\n *\n * @param time\n */\nexport function formatMinuteTimestamp(day, time) {\n    const hour = Math.floor(time / 60) % 60;\n    const min = Math.floor(time % 60);\n    const nowMinuteTimestamp = new Date(day).setHours(\n        hour,\n        min,\n        0,\n        0\n    );\n    return nowMinuteTimestamp;\n}\n\nexport function formatSecondTimestamp(day, time) {\n    const hour = Math.floor(time / 60 / 60) % 60;\n    const min = Math.floor(time / 60) % 60;\n    const second = time % 60\n    const nowSecondTimestamp = new Date(day).setHours(\n        hour,\n        min,\n        second,\n        0\n    );\n    return nowSecondTimestamp;\n}\n\nexport function getStrLength(value) {\n    return ('' + value).length\n}\n\n\nexport function isEmptyObject(obj) {\n    return (obj && Object.keys(obj).length === 0)\n}\n\nexport function isNotEmptyObject(obj) {\n    return !isEmptyObject(obj);\n}\n\n\nexport function isString(value) {\n    return typeof value === \"string\";\n}\n\n\nexport function isSupportSIMD() {\n    return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11]));\n}\n\n\nexport const isWeChat = () => {\n    const userAgent = window.navigator.userAgent;\n    return /MicroMessenger/i.test(userAgent)\n};\n\n//\nexport const isWeChatInAndroid = () => {\n    return isWeChat() && isAndroid();\n}\n\nexport const isWeChatInIOS = () => {\n    return isWeChat() && isIOS();\n}\n\n\nexport function getTarget(e) {\n    const event = e || window.event;\n    const target = event.target || event.srcElement;\n    return target;\n}\n\nconst _mime = function (option, value) {\n    const mimeTypes = navigator.mimeTypes;\n    for (let mt in mimeTypes) {\n        if (mimeTypes[mt][option] == value) {\n            return true;\n        }\n    }\n    return false;\n};\n\nexport function isWindow() {\n    let isWindows = false;\n    const agent = navigator.userAgent.toLowerCase();\n    const isMac = /macintosh|mac os x/i.test(navigator.userAgent);\n    if (agent.indexOf(\"win32\") >= 0 || agent.indexOf(\"wow32\") >= 0) {\n        //your code\n        isWindows = true;\n    }\n    if (agent.indexOf(\"win64\") >= 0 || agent.indexOf(\"wow64\") >= 0) {\n        //your code\n        isWindows = true;\n    }\n    if (isMac) {\n        //your code\n        isWindows = false;\n    }\n\n    return isWindows;\n}\n\nexport function isWindow360() {\n    const userAgent = window.navigator.userAgent;\n    let is360 = userAgent.indexOf('QihooBrowser') > -1 ||\n        userAgent.indexOf('QHBrowser') > -1 ||\n        userAgent.indexOf('360EE') > -1 ||\n        userAgent.indexOf('360SE') > -1;\n\n    if (!is360) {\n        if (window.chrome) {\n            const chrome_version = userAgent.replace(/^.*Chrome\\/([\\d]+).*$/, '$1');\n            if (_mime(\"type\", \"application/360softmgrplugin\") || _mime(\"type\", \"application/mozilla-npqihooquicklogin\")) {\n                is360 = true;\n            } else if (chrome_version > 36 && window.showModalDialog) {\n                is360 = true;\n            } else if (chrome_version > 45) {\n                is360 = _mime(\"type\", \"application/vnd.chromium.remoting-viewer\");\n                if (!is360 && chrome_version >= 69) {\n                    is360 = _mime(\"type\", \"application/hwepass2001.installepass2001\") || _mime(\"type\", \"application/asx\");\n                }\n            }\n        }\n    }\n\n    return is360 && isWindow();\n}\n\n\nexport function isFunction(fn) {\n    return typeof fn === \"function\"\n}\n\n\nexport function isSupportOfflineAudioContext() {\n    let offlineAudioContext = new OfflineAudioContext(1, 1, 44100);\n    return Boolean(offlineAudioContext.audioWorklet && typeof offlineAudioContext.audioWorklet.addModule == \"function\")\n}\n\n\nexport function isWebglRenderSupport(width) {\n    return (width / 2) % 4 === 0\n}\n\n/**\n * is green yuv\n * @param arrayBuffer\n * @returns {boolean}\n */\nexport function isGreenYUV(arrayBuffer) {\n    let zeroNum = 0;\n    for (let i = 0; i < arrayBuffer.length; i++) {\n        let temp = arrayBuffer[i];\n        if (temp === 0) {\n            zeroNum += 1\n        }\n    }\n    const isGreen = zeroNum === arrayBuffer.length;\n    if (isGreen) {\n        console.log('green yuv', arrayBuffer)\n    }\n    return isGreen\n}\n\n/**\n *\n * @param event\n * @returns {{posX: number, posY: number}}\n */\nexport function getMousePosition(event) {\n    let posX = 0;\n    let posY = 0;\n    const e = event || window.event;  //标准化事件对象\n    if (e.pageX || e.pageY) {  //获取鼠标指针的当前坐标值\n        posX = e.pageX;\n        posY = e.pageY;\n    } else if (e.clientX || e.clientY) {\n        posX = event.clientX + document.documentElement.scrollLeft + document.body.scrollLeft;\n        posY = event.clientY + document.documentElement.scrollTop + document.body.scrollTop;\n    }\n    return {\n        posX,\n        posY\n    }\n}\n\nexport function canPlayAppleMpegurl() {\n    let video = document.createElement('video');\n    let result = video.canPlayType('application/vnd.apple.mpegurl')\n    video = null;\n    return result;\n}\n\n\nexport function isSupportGetUserMedia() {\n    let result = false;\n    const navigator = window.navigator;\n\n    if (navigator) {\n        result = !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)\n\n        if (!result) {\n            result = !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia)\n        }\n    }\n\n    return result;\n}\n\nexport function onlyMseOrWcsVideo(opt) {\n    return opt.hasAudio === false && (opt.useMSE || (opt.useWCS && !opt.useOffscreen))\n}\n\nexport function checkNaluType(naluBuffer) {\n    let result = null;\n    let type = naluBuffer[0] & 0b0001_1111;\n    if (type === H264_NAL_TYPE.sps || type === H264_NAL_TYPE.pps) {\n        result = VIDEO_ENC_TYPE_SHOW.h264;\n    }\n    if (!result) {\n        type = (naluBuffer[0] & 0x7E) >> 1;\n        if (type === H265_NAL_TYPE.vps || type === H265_NAL_TYPE.sps || type === H265_NAL_TYPE.pps) {\n            result = VIDEO_ENC_TYPE_SHOW.h265;\n        }\n    }\n\n    return result;\n}\n\n\nexport function checkAudioNaluType(naluBuffer) {\n    let result = null;\n    const codecId = naluBuffer[0] >> 4;\n\n    if (isAacCodecPacket(naluBuffer)) {\n        result = AUDIO_ENC_CODE_SHOW.AAC\n    } else if (codecId === AUDIO_ENC_CODE.ALAW) {\n        result = AUDIO_ENC_CODE_SHOW.ALAW\n    } else if (codecId === AUDIO_ENC_CODE.MULAW) {\n        result = AUDIO_ENC_CODE_SHOW.MULAW\n    }\n\n    return result;\n}\n\n\nexport function createWorkletModuleUrl(func) {\n\n    function functionToString(str) {\n        return str.trim().match(/^function\\s*\\w*\\s*\\([\\w\\s,]*\\)\\s*{([\\w\\W]*?)}$/)[1]\n    }\n\n    const funcStr = functionToString(func.toString());\n    const blob = new Blob([funcStr], {type: 'application/javascript'});\n    return URL.createObjectURL(blob);\n}\n\nexport function supportWritableStream() {\n    return typeof WritableStream !== 'undefined';\n}\n\n\nexport function closeVideoFrame(videoFrame) {\n    if (videoFrame.close) {\n        videoFrame.close()\n    } else if (videoFrame.destroy) {\n        videoFrame.destroy()\n    }\n}\n\nexport function isInHttps() {\n    return window.location.protocol === 'https:' || window.location.hostname === 'localhost';\n}\n\nexport function errorToString(error) {\n    const nativeToString = Object.prototype.toString;\n\n    function isErrorLike(error) {\n        switch (nativeToString.call(error)) {\n            case '[object Error]':\n                return true;\n            case '[object Exception]':\n                return true;\n            case '[object DOMException]':\n                return true;\n            default:\n                try {\n                    return error instanceof Error;\n                } catch (e) {\n                    return false;\n                }\n        }\n    }\n\n    if (isErrorLike(error)) {\n        return error.message;\n    } else {\n        return error == null\n            ? '' :\n            typeof error === 'object'\n                ? JSON.stringify(error, null, 2)\n                : String(error)\n    }\n}\n\n\nexport function isInSampleHost(url) {\n    let result = false;\n\n\n    return result;\n}\n\n\nexport function calcStreamFpsByBufferList(bufferList, type) {\n\n    if (type) {\n        bufferList = bufferList.filter(item => item.type === type)\n    }\n\n    let firstItem = bufferList[0];\n    let oneSecondLength = null;\n    let nextIndex = 1;\n    if (bufferList.length > 0) {\n        let nextItem = bufferList[1];\n        if (nextItem && nextItem.ts - firstItem.ts > 100000) {\n            firstItem = nextItem;\n            nextIndex = 2;\n        }\n    }\n\n    if (firstItem) {\n        // next start\n        for (let i = nextIndex; i < bufferList.length; i++) {\n            let tempItem = bufferList[i];\n            if (type && tempItem.type !== type) {\n                tempItem = null;\n            }\n            if (tempItem) {\n                const diff = tempItem.ts - firstItem.ts;\n                if (diff >= 1000) {\n                    const prevTempItem = bufferList[i - 1];\n                    const diff2 = prevTempItem.ts - firstItem.ts;\n                    if (diff2 < 1000) {\n                        oneSecondLength = i + 1;\n                    }\n                }\n            }\n        }\n    }\n\n    return oneSecondLength;\n}\n\n\nexport function isFetchSuccess(res) {\n    return (res.ok && (res.status >= 200 && res.status <= 299))\n}\n\n// stroke rect or text in canvas\nexport function strokeRectOrTextInCanvas({ctx, list}) {\n    ctx.save();\n    (list || []).forEach(item => {\n        if (item.type === 'text') {\n            ctx.font = `${item.fontSize || 12}px Arial`;\n            ctx.fillStyle = item.color || 'green';\n            ctx.fillText(item.text, item.x, item.y);\n        } else if (item.type === 'rect') {\n            ctx.strokeStyle = item.color || 'green';\n            ctx.lineWidth = item.lineWidth || 2;\n            ctx.strokeRect(item.x, item.y, item.width, item.height);\n        }\n    })\n    ctx.restore();\n}\n\n\n// stroke text in canvas\nexport function strokeTextInCanvas({ctx, color, fontSize, text, x, y}) {\n    ctx.save();\n    ctx.font = `${fontSize || 12}px Arial`;\n    ctx.fillStyle = color || 'green';\n    ctx.fillText(text, x, y);\n    ctx.restore();\n}\n\n\nexport function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\nexport function getUrlRelativePath(href) {\n    const url = href || document.location.toString();\n    const arrUrl = url.split(\"//\");\n\n    const start = arrUrl[1].indexOf(\"/\");\n    let relUrl = arrUrl[1].substring(start);//stop省略，截取从start开始到结尾的所有字符\n\n    if (relUrl.indexOf(\"?\") != -1) {\n        relUrl = relUrl.split(\"?\")[0];\n    }\n    return relUrl;\n}\n\nexport function base64Decode(data) {\n    const utf8Decode = function (str_data) {\n        var tmp_arr = [], i = 0, ac = 0, c1 = 0, c2 = 0, c3 = 0;\n        // 变成string类型\n        str_data += '';\n\n        while (i < str_data.length) {\n            c1 = str_data.charCodeAt(i);\n            if (c1 < 128) {\n                tmp_arr[ac++] = String.fromCharCode(c1);\n                i++;\n            } else if (c1 > 191 && c1 < 224) {\n                c2 = str_data.charCodeAt(i + 1);\n                tmp_arr[ac++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = str_data.charCodeAt(i + 1);\n                c3 = str_data.charCodeAt(i + 2);\n                tmp_arr[ac++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n\n        return tmp_arr.join('');\n    };\n\n    const b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, dec = \"\", tmp_arr = [];\n    if (!data) {\n        return data;\n    }\n    data += '';\n    do {\n        h1 = b64.indexOf(data.charAt(i++));\n        h2 = b64.indexOf(data.charAt(i++));\n        h3 = b64.indexOf(data.charAt(i++));\n        h4 = b64.indexOf(data.charAt(i++));\n        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n        o1 = bits >> 16 & 0xff;\n        o2 = bits >> 8 & 0xff;\n        o3 = bits & 0xff;\n        if (h3 == 64) {\n            tmp_arr[ac++] = String.fromCharCode(o1);\n        } else if (h4 == 64) {\n            tmp_arr[ac++] = String.fromCharCode(o1, o2);\n        } else {\n            tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n        }\n    } while (i < data.length);\n    dec = tmp_arr.join('');\n    dec = utf8Decode(dec);\n    return dec;\n}\n\nexport function b64toUin8(base64String) {\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\n    var base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n\n    var rawData = window.atob(base64);\n    var outputArray = new Uint8Array(rawData.length);\n\n    for (var i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n}\n\nexport function base64ToString(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n\n    const rawData = window.atob(base64);\n    let result = '';\n\n    for (let i = 0; i < rawData.length; ++i) {\n        result += rawData.charCodeAt(i);\n    }\n    return result;\n}\n\n\nexport function resolveUrl(url) {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let href = url;\n\n    if (msie) {\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n    }\n\n    urlParsingNode.setAttribute('href', href);\n\n\n    return {\n        origin: urlParsingNode.origin,\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n    };\n}\n\n\nexport function uuid4() {\n    return 'xxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n    })\n}\n\nexport function clone(obj) {\n    let result = '';\n    //\n    if (typeof obj === 'object') {\n        try {\n            result = JSON.stringify(obj);\n            result = JSON.parse(result);\n        } catch (e) {\n            result = obj;\n        }\n    } else {\n        result = obj;\n    }\n\n    return result;\n}\n\n/**\n *\n * @returns {object:DEFAULT_JESSIBUCA_OPTIONS}\n */\nexport function getDefaultJessibucaOptions() {\n    return clone(DEFAULT_JESSIBUCA_OPTIONS);\n}\n\n/**\n *\n * @returns {object:DEFAULT_PLAYER_OPTIONS}\n */\nexport function getDefaultPlayerOptions() {\n    return clone(DEFAULT_PLAYER_OPTIONS);\n}\n\n/**\n *\n * @returns {object:DEFAULT_TALK_OPTIONS}\n */\nexport function getDefaultTalkOptions() {\n    return clone(DEFAULT_TALK_OPTIONS);\n}\n\n\n/**\n *\n * @returns {object:CONTROL_BUTTON_OPTIONS}\n */\nexport function getDefaultButtonOptions() {\n    return clone(CONTROL_BUTTON_OPTIONS);\n}\n\n\n/**\n *\n * @returns {object:MENU_ITEM_OPTIONS}\n */\nexport function getDefaultMenuOptions() {\n    return clone(MENU_ITEM_OPTIONS);\n}\n\n\n/**\n *\n * @returns {object:DEFAULT_MULTI_OPTIONS}\n */\nexport function getDefaultMultiOptions() {\n    return clone(DEFAULT_MULTI_OPTIONS);\n}\n\n\nexport function base64ToBlob(base64Data) {\n    const byteString = atob(base64Data.split(\",\")[1]);\n    const mimeType = base64Data.match(/:(.*?);/)[1];\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ab], {type: mimeType});\n}\n\nexport function createCanvasImage(base64Data) {\n    return new Promise((resolve, reject) => {\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n\n        const image = new Image();\n        image.onload = () => {\n            canvas.width = image.width;\n            canvas.height = image.height;\n            context.drawImage(image, 0, 0);\n            const posterUrl = canvas.toDataURL(\"image/png\");\n            // clear\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            canvas.width = 0;\n            canvas.height = 0;\n            //\n            resolve(posterUrl);\n        };\n        image.onerror = (e) => {\n            reject(e)\n        }\n        image.src = base64Data;\n    })\n\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst Types = [[Uint8Array, Int8Array], [Uint16Array, Int16Array], [Uint32Array, Int32Array, Float32Array], [Float64Array]];\nconst U32 = Symbol(32);\nconst U16 = Symbol(16);\nconst U8 = Symbol(8);\nconst OPutMap = new Map();\nTypes.forEach((t, i) => t.forEach((t) => OPutMap.set(t, i)));\nexport default class OPut {\n    constructor(g) {\n        this.g = g;\n        this.consumed = 0;\n        if (g)\n            this.need = g.next().value;\n    }\n    fillFromReader(source) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { done, value } = yield source.read();\n            if (done) {\n                this.close();\n                return;\n            }\n            else {\n                this.write(value);\n                return this.fillFromReader(source);\n            }\n        });\n    }\n    ;\n    consume() {\n        if (this.buffer && this.consumed) {\n            this.buffer.copyWithin(0, this.consumed);\n            this.buffer = this.buffer.subarray(0, this.buffer.length - this.consumed);\n            this.consumed = 0;\n        }\n    }\n    demand(n, consume) {\n        if (consume)\n            this.consume();\n        this.need = n;\n        return this.flush();\n    }\n    read(need) {\n        return new Promise((resolve, reject) => {\n            if (this.resolve)\n                return reject(\"last read not complete yet\");\n            this.resolve = (data) => {\n                delete this.resolve;\n                delete this.need;\n                resolve(data);\n            };\n            this.demand(need, true);\n        });\n    }\n    readU32() {\n        return this.read(U32);\n    }\n    readU16() {\n        return this.read(U16);\n    }\n    readU8() {\n        return this.read(U8);\n    }\n    close() {\n        if (this.g)\n            this.g.return();\n    }\n    flush() {\n        if (!this.buffer || !this.need)\n            return;\n        let returnValue = null;\n        const unread = this.buffer.subarray(this.consumed);\n        let n = 0;\n        const notEnough = (x) => unread.length < (n = x);\n        if (typeof this.need === 'number') {\n            if (notEnough(this.need))\n                return;\n            returnValue = unread.subarray(0, n);\n        }\n        else if (this.need instanceof ArrayBuffer) {\n            if (notEnough(this.need.byteLength))\n                return;\n            new Uint8Array(this.need).set(unread.subarray(0, n));\n            returnValue = this.need;\n        }\n        else if (this.need === U32) {\n            if (notEnough(4))\n                return;\n            returnValue = (unread[0] << 24) | (unread[1] << 16) | (unread[2] << 8) | unread[3];\n        }\n        else if (this.need === U16) {\n            if (notEnough(2))\n                return;\n            returnValue = (unread[0] << 8) | unread[1];\n        }\n        else if (this.need === U8) {\n            if (notEnough(1))\n                return;\n            returnValue = unread[0];\n        }\n        else if (OPutMap.has(this.need.constructor)) {\n            if (notEnough(this.need.length << OPutMap.get(this.need.constructor)))\n                return;\n            new Uint8Array(this.need.buffer, this.need.byteOffset).set(unread.subarray(0, n));\n            returnValue = this.need;\n        }\n        else if (this.g) {\n            this.g.throw(new Error('Unsupported type'));\n            return;\n        }\n        this.consumed += n;\n        if (this.g)\n            this.demand(this.g.next(returnValue).value, true);\n        else if (this.resolve)\n            this.resolve(returnValue);\n        return returnValue;\n    }\n    write(value) {\n        if (value instanceof ArrayBuffer) {\n            this.malloc(value.byteLength).set(new Uint8Array(value));\n        }\n        else {\n            this.malloc(value.byteLength).set(new Uint8Array(value.buffer, value.byteOffset, value.byteLength));\n        }\n        if (this.g || this.resolve)\n            this.flush();\n    }\n    writeU32(value) {\n        this.malloc(4).set([(value >> 24) & 0xff, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff]);\n        this.flush();\n    }\n    writeU16(value) {\n        this.malloc(2).set([(value >> 8) & 0xff, value & 0xff]);\n        this.flush();\n    }\n    writeU8(value) {\n        this.malloc(1)[0] = value;\n        this.flush();\n    }\n    malloc(size) {\n        if (this.buffer) {\n            const l = this.buffer.length;\n            const nl = l + size;\n            if (nl <= this.buffer.buffer.byteLength - this.buffer.byteOffset) {\n                this.buffer = new Uint8Array(this.buffer.buffer, this.buffer.byteOffset, nl);\n            }\n            else {\n                const n = new Uint8Array(nl);\n                n.set(this.buffer);\n                this.buffer = n;\n            }\n            return this.buffer.subarray(l, nl);\n        }\n        else {\n            this.buffer = new Uint8Array(size);\n            return this.buffer;\n        }\n    }\n}\nOPut.U32 = U32;\nOPut.U16 = U16;\nOPut.U8 = U8;\n;\n//# sourceMappingURL=index.js.map","import {DEBUG_LEVEL} from \"../constant\";\n\nexport default class Debug {\n    constructor(master) {\n        this.log = (name, ...args) => {\n            if (master._opt.debug && master._opt.debugLevel == DEBUG_LEVEL.debug) {\n                const prefix = master._opt.debugUuid ? `[${master._opt.debugUuid}]` : '';\n                console.log(`JessibucaPro${prefix}:[\\u2705\\u2705\\u2705][${name}]`, ...args);\n            }\n        };\n\n        this.warn = (name, ...args) => {\n            if (master._opt.debug && (master._opt.debugLevel == DEBUG_LEVEL.debug || master._opt.debugLevel == DEBUG_LEVEL.warn)) {\n                const prefix = master._opt.debugUuid ? `[${master._opt.debugUuid}]` : '';\n                console.log(`JessibucaPro${prefix}:[\\u2757\\u2757\\u2757][${name}]`, ...args);\n            }\n        };\n\n        this.error = (name, ...args) => {\n            const prefix = master._opt.debugUuid ? `[${master._opt.debugUuid}]` : '';\n            console.error(`JessibucaPro${prefix}:[\\u274C\\u274C\\u274C][${name}]`, ...args);\n        };\n    }\n}\n","// Exponential-Golomb buffer decoder\nclass ExpGolomb {\n\n    constructor(uint8array) {\n\n        this._buffer = uint8array;\n        this._buffer_index = 0;\n        this._total_bytes = uint8array.byteLength;\n        this._total_bits = uint8array.byteLength * 8;\n        this._current_word = 0;\n        this._current_word_bits_left = 0;\n    }\n\n    destroy() {\n        this._buffer = null;\n    }\n\n    _fillCurrentWord() {\n        let buffer_bytes_left = this._total_bytes - this._buffer_index;\n        if (buffer_bytes_left <= 0) {\n            // throw new IllegalStateException('ExpGolomb: _fillCurrentWord() but no bytes available');\n            console.error('ExpGolomb: _fillCurrentWord() but no bytes available', this._total_bytes, this._buffer_index);\n            return;\n        }\n\n        let bytes_read = Math.min(4, buffer_bytes_left);\n        let word = new Uint8Array(4);\n        word.set(this._buffer.subarray(this._buffer_index, this._buffer_index + bytes_read));\n        this._current_word = new DataView(word.buffer).getUint32(0, false);\n\n        this._buffer_index += bytes_read;\n        this._current_word_bits_left = bytes_read * 8;\n    }\n\n    readBits(bits) {\n        if (bits > 32) {\n            // throw new InvalidArgumentException('ExpGolomb: readBits() bits exceeded max 32bits!');\n            console.error('ExpGolomb: readBits() bits exceeded max 32bits!');\n        }\n\n        if (bits <= this._current_word_bits_left) {\n            let result = this._current_word >>> (32 - bits);\n            this._current_word <<= bits;\n            this._current_word_bits_left -= bits;\n            return result;\n        }\n\n        let result = this._current_word_bits_left ? this._current_word : 0;\n        result = result >>> (32 - this._current_word_bits_left);\n        let bits_need_left = bits - this._current_word_bits_left;\n\n        this._fillCurrentWord();\n        let bits_read_next = Math.min(bits_need_left, this._current_word_bits_left);\n\n        let result2 = this._current_word >>> (32 - bits_read_next);\n        this._current_word <<= bits_read_next;\n        this._current_word_bits_left -= bits_read_next;\n\n        result = (result << bits_read_next) | result2;\n        return result;\n    }\n\n    readBool() {\n        return this.readBits(1) === 1;\n    }\n\n    readByte() {\n        return this.readBits(8);\n    }\n\n    _skipLeadingZero() {\n        let zero_count;\n        for (zero_count = 0; zero_count < this._current_word_bits_left; zero_count++) {\n            if (0 !== (this._current_word & (0x80000000 >>> zero_count))) {\n                this._current_word <<= zero_count;\n                this._current_word_bits_left -= zero_count;\n                return zero_count;\n            }\n        }\n        this._fillCurrentWord();\n        return zero_count + this._skipLeadingZero();\n    }\n\n    readUEG() {  // unsigned exponential golomb\n        let leading_zeros = this._skipLeadingZero();\n        return this.readBits(leading_zeros + 1) - 1;\n    }\n\n    readSEG() {  // signed exponential golomb\n        let value = this.readUEG();\n        if (value & 0x01) {\n            return (value + 1) >>> 1;\n        } else {\n            return -1 * (value >>> 1);\n        }\n    }\n\n}\n\nexport default ExpGolomb;\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpGolomb from './exp-golomb.js';\n\nclass SPSParser {\n\n    static _ebsp2rbsp(uint8array) {\n        let src = uint8array;\n        let src_length = src.byteLength;\n        let dst = new Uint8Array(src_length);\n        let dst_idx = 0;\n\n        for (let i = 0; i < src_length; i++) {\n            if (i >= 2) {\n                // Unescape: Skip 0x03 after 00 00\n                if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n                    continue;\n                }\n            }\n            dst[dst_idx] = src[i];\n            dst_idx++;\n        }\n\n        return new Uint8Array(dst.buffer, 0, dst_idx);\n    }\n\n    // 解析 SPS\n    // https://zhuanlan.zhihu.com/p/27896239\n    static parseSPS(uint8array) {\n        let rbsp = SPSParser._ebsp2rbsp(uint8array);\n        let gb = new ExpGolomb(rbsp);\n\n        gb.readByte();\n        // 标识当前H.264码流的profile。\n        // 我们知道，H.264中定义了三种常用的档次profile： 基准档次：baseline profile;主要档次：main profile; 扩展档次：extended profile;\n\n        let profile_idc = gb.readByte();  // profile_idc\n        gb.readByte();  // constraint_set_flags[5] + reserved_zero[3]\n        // 标识当前码流的Level。编码的Level定义了某种条件下的最大视频分辨率、最大视频帧率等参数，码流所遵从的level由level_idc指定。\n        let level_idc = gb.readByte();  // level_idc\n        // 表示当前的序列参数集的id。通过该id值，图像参数集pps可以引用其代表的sps中的参数。\n        gb.readUEG();  // seq_parameter_set_id\n\n        let profile_string = SPSParser.getProfileString(profile_idc);\n        let level_string = SPSParser.getLevelString(level_idc);\n        let chroma_format_idc = 1;\n        let chroma_format = 420;\n        let chroma_format_table = [0, 420, 422, 444];\n        let bit_depth = 8;\n\n        //\n        if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\n            profile_idc === 138 || profile_idc === 144) {\n            //\n            chroma_format_idc = gb.readUEG();\n\n            if (chroma_format_idc === 3) {\n                gb.readBits(1);  // separate_colour_plane_flag\n            }\n            if (chroma_format_idc <= 3) {\n                chroma_format = chroma_format_table[chroma_format_idc];\n            }\n\n            bit_depth = gb.readUEG() + 8;  // bit_depth_luma_minus8\n            gb.readUEG();  // bit_depth_chroma_minus8\n            gb.readBits(1);  // qpprime_y_zero_transform_bypass_flag\n            if (gb.readBool()) {  // seq_scaling_matrix_present_flag\n                let scaling_list_count = (chroma_format_idc !== 3) ? 8 : 12;\n                for (let i = 0; i < scaling_list_count; i++) {\n                    if (gb.readBool()) {  // seq_scaling_list_present_flag\n                        if (i < 6) {\n                            SPSParser._skipScalingList(gb, 16);\n                        } else {\n                            SPSParser._skipScalingList(gb, 64);\n                        }\n                    }\n                }\n            }\n        }\n        // 用于计算MaxFrameNum的值。计算公式为MaxFrameNum = 2^(log2_max_frame_num_minus4 +\n        gb.readUEG();  // log2_max_frame_num_minus4\n        // 表示解码picture order count(POC)的方法。POC是另一种计量图像序号的方式，与frame_num有着不同的计算方法。该语法元素的取值为0、1或2。\n        let pic_order_cnt_type = gb.readUEG();\n        if (pic_order_cnt_type === 0) {\n            gb.readUEG();  // log2_max_pic_order_cnt_lsb_minus_4\n        } else if (pic_order_cnt_type === 1) {\n            gb.readBits(1);  // delta_pic_order_always_zero_flag\n            gb.readSEG();  // offset_for_non_ref_pic\n            gb.readSEG();  // offset_for_top_to_bottom_field\n            let num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n            for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                gb.readSEG();  // offset_for_ref_frame\n            }\n        }\n        // 用于表示参考帧的最大数目。\n        let ref_frames = gb.readUEG();  // max_num_ref_frames\n        // 标识位，说明frame_num中是否允许不连续的值。\n        gb.readBits(1);  // gaps_in_frame_num_value_allowed_flag\n        // 用于计算图像的宽度。单位为宏块个数，因此图像的实际宽度为:\n        let pic_width_in_mbs_minus1 = gb.readUEG();\n        // 使用PicHeightInMapUnits来度量视频中一帧图像的高度。\n        // PicHeightInMapUnits并非图像明确的以像素或宏块为单位的高度，而需要考虑该宏块是帧编码或场编码。PicHeightInMapUnits的计算方式为：\n        let pic_height_in_map_units_minus1 = gb.readUEG();\n        // 标识位，说明宏块的编码方式。当该标识位为0时，宏块可能为帧编码或场编码；\n        // 该标识位为1时，所有宏块都采用帧编码。根据该标识位取值不同，PicHeightInMapUnits的含义也不同，\n        // 为0时表示一场数据按宏块计算的高度，为1时表示一帧数据按宏块计算的高度。\n        let frame_mbs_only_flag = gb.readBits(1);\n        if (frame_mbs_only_flag === 0) {\n            // 标识位，说明是否采用了宏块级的帧场自适应编码。当该标识位为0时，不存在帧编码和场编码之间的切换；当标识位为1时，宏块可能在帧编码和场编码模式之间进行选择。\n            gb.readBits(1);  // mb_adaptive_frame_field_flag\n        }\n        // 标识位，用于B_Skip、B_Direct模式运动矢量的推导计算。\n        gb.readBits(1);  // direct_8x8_inference_flag\n\n        let frame_crop_left_offset = 0;\n        let frame_crop_right_offset = 0;\n        let frame_crop_top_offset = 0;\n        let frame_crop_bottom_offset = 0;\n\n        let frame_cropping_flag = gb.readBool();\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = gb.readUEG();\n            frame_crop_right_offset = gb.readUEG();\n            frame_crop_top_offset = gb.readUEG();\n            frame_crop_bottom_offset = gb.readUEG();\n        }\n\n        let sar_width = 1, sar_height = 1;\n        let fps = 0, fps_fixed = true, fps_num = 0, fps_den = 0;\n        // 标识位，说明SPS中是否存在VUI信息。\n        let vui_parameters_present_flag = gb.readBool();\n        if (vui_parameters_present_flag) {\n            if (gb.readBool()) {  // aspect_ratio_info_present_flag\n                let aspect_ratio_idc = gb.readByte();\n                let sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                let sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\n\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\n                } else if (aspect_ratio_idc === 255) {\n                    sar_width = gb.readByte() << 8 | gb.readByte();\n                    sar_height = gb.readByte() << 8 | gb.readByte();\n                }\n            }\n\n            if (gb.readBool()) {  // overscan_info_present_flag\n                gb.readBool();  // overscan_appropriate_flag\n            }\n            if (gb.readBool()) {  // video_signal_type_present_flag\n                gb.readBits(4);  // video_format & video_full_range_flag\n                if (gb.readBool()) {  // colour_description_present_flag\n                    gb.readBits(24);  // colour_primaries & transfer_characteristics & matrix_coefficients\n                }\n            }\n            if (gb.readBool()) {  // chroma_loc_info_present_flag\n                gb.readUEG();  // chroma_sample_loc_type_top_field\n                gb.readUEG();  // chroma_sample_loc_type_bottom_field\n            }\n            if (gb.readBool()) {  // timing_info_present_flag\n                let num_units_in_tick = gb.readBits(32);\n                let time_scale = gb.readBits(32);\n                fps_fixed = gb.readBool();  // fixed_frame_rate_flag\n\n                fps_num = time_scale;\n                fps_den = num_units_in_tick * 2;\n                fps = fps_num / fps_den;\n            }\n        }\n\n        let sarScale = 1;\n        if (sar_width !== 1 || sar_height !== 1) {\n            sarScale = sar_width / sar_height;\n        }\n\n        let crop_unit_x = 0, crop_unit_y = 0;\n        if (chroma_format_idc === 0) {\n            crop_unit_x = 1;\n            crop_unit_y = 2 - frame_mbs_only_flag;\n        } else {\n            let sub_wc = (chroma_format_idc === 3) ? 1 : 2;\n            let sub_hc = (chroma_format_idc === 1) ? 2 : 1;\n            crop_unit_x = sub_wc;\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n        }\n\n        let codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n        let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n        let present_width = Math.ceil(codec_width * sarScale);\n\n        gb.destroy();\n        gb = null;\n\n\n        // 解析出来的SPS 内容。\n        return {\n            profile_string: profile_string,  // baseline, high, high10, ...\n            level_string: level_string,  // 3, 3.1, 4, 4.1, 5, 5.1, ...\n            bit_depth: bit_depth,  // 8bit, 10bit, ...\n            ref_frames: ref_frames,\n            chroma_format: chroma_format,  // 4:2:0, 4:2:2, ...\n            chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n            frame_rate: {\n                fixed: fps_fixed,\n                fps: fps,\n                fps_den: fps_den,\n                fps_num: fps_num\n            },\n\n            sar_ratio: {\n                width: sar_width,\n                height: sar_height\n            },\n\n            codec_size: {\n                width: codec_width,\n                height: codec_height\n            },\n\n            present_size: {\n                width: present_width,\n                height: codec_height\n            }\n        };\n    }\n\n    static parseSPS$2(uint8array){\n        let codec_array = uint8array.subarray(1, 4);\n        let codec_mimetype = 'avc1.';\n        for (let j = 0; j < 3; j++) {\n            let h = codec_array[j].toString(16);\n            if (h.length < 2) {\n                h = '0' + h;\n            }\n            codec_mimetype += h;\n        }\n\n        let rbsp = SPSParser._ebsp2rbsp(uint8array);\n        let gb = new ExpGolomb(rbsp);\n\n        gb.readByte();\n        let profile_idc = gb.readByte();  // profile_idc\n        gb.readByte();  // constraint_set_flags[5] + reserved_zero[3]\n        let level_idc = gb.readByte();  // level_idc\n        gb.readUEG();  // seq_parameter_set_id\n\n        let profile_string = SPSParser.getProfileString(profile_idc);\n        let level_string = SPSParser.getLevelString(level_idc);\n        let chroma_format_idc = 1;\n        let chroma_format = 420;\n        let chroma_format_table = [0, 420, 422, 444];\n        let bit_depth_luma = 8;\n        let bit_depth_chroma = 8;\n\n        if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\n            profile_idc === 138 || profile_idc === 144) {\n\n            chroma_format_idc = gb.readUEG();\n            if (chroma_format_idc === 3) {\n                gb.readBits(1);  // separate_colour_plane_flag\n            }\n            if (chroma_format_idc <= 3) {\n                chroma_format = chroma_format_table[chroma_format_idc];\n            }\n\n            bit_depth_luma = gb.readUEG() + 8;  // bit_depth_luma_minus8\n            bit_depth_chroma = gb.readUEG() + 8;  // bit_depth_chroma_minus8\n            gb.readBits(1);  // qpprime_y_zero_transform_bypass_flag\n            if (gb.readBool()) {  // seq_scaling_matrix_present_flag\n                let scaling_list_count = (chroma_format_idc !== 3) ? 8 : 12;\n                for (let i = 0; i < scaling_list_count; i++) {\n                    if (gb.readBool()) {  // seq_scaling_list_present_flag\n                        if (i < 6) {\n                            SPSParser._skipScalingList(gb, 16);\n                        } else {\n                            SPSParser._skipScalingList(gb, 64);\n                        }\n                    }\n                }\n            }\n        }\n        gb.readUEG();  // log2_max_frame_num_minus4\n        let pic_order_cnt_type = gb.readUEG();\n        if (pic_order_cnt_type === 0) {\n            gb.readUEG();  // log2_max_pic_order_cnt_lsb_minus_4\n        } else if (pic_order_cnt_type === 1) {\n            gb.readBits(1);  // delta_pic_order_always_zero_flag\n            gb.readSEG();  // offset_for_non_ref_pic\n            gb.readSEG();  // offset_for_top_to_bottom_field\n            let num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n            for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                gb.readSEG();  // offset_for_ref_frame\n            }\n        }\n        let ref_frames = gb.readUEG();  // max_num_ref_frames\n        gb.readBits(1);  // gaps_in_frame_num_value_allowed_flag\n\n        let pic_width_in_mbs_minus1 = gb.readUEG();\n        let pic_height_in_map_units_minus1 = gb.readUEG();\n\n        let frame_mbs_only_flag = gb.readBits(1);\n        if (frame_mbs_only_flag === 0) {\n            gb.readBits(1);  // mb_adaptive_frame_field_flag\n        }\n        gb.readBits(1);  // direct_8x8_inference_flag\n\n        let frame_crop_left_offset = 0;\n        let frame_crop_right_offset = 0;\n        let frame_crop_top_offset = 0;\n        let frame_crop_bottom_offset = 0;\n\n        let frame_cropping_flag = gb.readBool();\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = gb.readUEG();\n            frame_crop_right_offset = gb.readUEG();\n            frame_crop_top_offset = gb.readUEG();\n            frame_crop_bottom_offset = gb.readUEG();\n        }\n\n        let sar_width = 1, sar_height = 1;\n        let fps = 0, fps_fixed = true, fps_num = 0, fps_den = 0;\n\n        let vui_parameters_present_flag = gb.readBool();\n        if (vui_parameters_present_flag) {\n            if (gb.readBool()) {  // aspect_ratio_info_present_flag\n                let aspect_ratio_idc = gb.readByte();\n                let sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                let sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\n\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\n                } else if (aspect_ratio_idc === 255) {\n                    sar_width = gb.readByte() << 8 | gb.readByte();\n                    sar_height = gb.readByte() << 8 | gb.readByte();\n                }\n            }\n\n            if (gb.readBool()) {  // overscan_info_present_flag\n                gb.readBool();  // overscan_appropriate_flag\n            }\n            if (gb.readBool()) {  // video_signal_type_present_flag\n                gb.readBits(4);  // video_format & video_full_range_flag\n                if (gb.readBool()) {  // colour_description_present_flag\n                    gb.readBits(24);  // colour_primaries & transfer_characteristics & matrix_coefficients\n                }\n            }\n            if (gb.readBool()) {  // chroma_loc_info_present_flag\n                gb.readUEG();  // chroma_sample_loc_type_top_field\n                gb.readUEG();  // chroma_sample_loc_type_bottom_field\n            }\n            if (gb.readBool()) {  // timing_info_present_flag\n                let num_units_in_tick = gb.readBits(32);\n                let time_scale = gb.readBits(32);\n                fps_fixed = gb.readBool();  // fixed_frame_rate_flag\n\n                fps_num = time_scale;\n                fps_den = num_units_in_tick * 2;\n                fps = fps_num / fps_den;\n            }\n        }\n\n        let sarScale = 1;\n        if (sar_width !== 1 || sar_height !== 1) {\n            sarScale = sar_width / sar_height;\n        }\n\n        let crop_unit_x = 0, crop_unit_y = 0;\n        if (chroma_format_idc === 0) {\n            crop_unit_x = 1;\n            crop_unit_y = 2 - frame_mbs_only_flag;\n        } else {\n            let sub_wc = (chroma_format_idc === 3) ? 1 : 2;\n            let sub_hc = (chroma_format_idc === 1) ? 2 : 1;\n            crop_unit_x = sub_wc;\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n        }\n\n        let codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n        let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n        let present_width = Math.ceil(codec_width * sarScale);\n\n        gb.destroy();\n        gb = null;\n\n        return {\n            codec_mimetype,\n            profile_idc,\n            level_idc,\n            profile_string,  // baseline, high, high10, ...\n            level_string,  // 3, 3.1, 4, 4.1, 5, 5.1, ...\n            chroma_format_idc,\n            bit_depth: bit_depth_luma,  // 8bit, 10bit, ...\n            bit_depth_luma,\n            bit_depth_chroma,\n            ref_frames,\n            chroma_format,  // 4:2:0, 4:2:2, ...\n            chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n            frame_rate: {\n                fixed: fps_fixed,\n                fps: fps,\n                fps_den: fps_den,\n                fps_num: fps_num\n            },\n\n            sar_ratio: {\n                width: sar_width,\n                height: sar_height\n            },\n\n            codec_size: {\n                width: codec_width,\n                height: codec_height\n            },\n\n            present_size: {\n                width: present_width,\n                height: codec_height\n            }\n        };\n    }\n\n    static _skipScalingList(gb, count) {\n        let last_scale = 8, next_scale = 8;\n        let delta_scale = 0;\n        for (let i = 0; i < count; i++) {\n            if (next_scale !== 0) {\n                delta_scale = gb.readSEG();\n                next_scale = (last_scale + delta_scale + 256) % 256;\n            }\n            last_scale = (next_scale === 0) ? last_scale : next_scale;\n        }\n    }\n\n    // profile_idc = 66 → baseline profile;\n    // profile_idc = 77 → main profile;\n    // profile_idc = 88 → extended profile;\n    // 在新版的标准中，还包括了High、High 10、High 4:2:2、High 4:4:4、High 10 Intra、High\n    // 4:2:2 Intra、High 4:4:4 Intra、CAVLC 4:4:4 Intra\n    static getProfileString(profile_idc) {\n        switch (profile_idc) {\n            case 66:\n                return 'Baseline';\n            case 77:\n                return 'Main';\n            case 88:\n                return 'Extended';\n            case 100:\n                return 'High';\n            case 110:\n                return 'High10';\n            case 122:\n                return 'High422';\n            case 244:\n                return 'High444';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    static getLevelString(level_idc) {\n        return (level_idc / 10).toFixed(1);\n    }\n\n    static getChromaFormatString(chroma) {\n        switch (chroma) {\n            case 420:\n                return '4:2:0';\n            case 422:\n                return '4:2:2';\n            case 444:\n                return '4:4:4';\n            default:\n                return 'Unknown';\n        }\n    }\n\n}\n\nexport default SPSParser;\n","import SPSParser from './h264-sps-parser.js';\nimport Bitop from \"./bitop\";\nimport {H264_NAL_TYPE, VIDEO_ENCODE_TYPE} from \"../constant\";\n\n//\nexport function parseAVCDecoderConfigurationRecord(arrayBuffer) {\n    const meta = {}\n    const v = new DataView(arrayBuffer.buffer);\n    let version = v.getUint8(0);  // configurationVersion\n    let avcProfile = v.getUint8(1);  // avcProfileIndication\n    let profileCompatibility = v.getUint8(2);  // profile_compatibil\n    let avcLevel = v.getUint8(3);  // AVCLevelIndication\n\n    if (version !== 1 || avcProfile === 0) {\n        // this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord');\n\n        return {};\n    }\n\n    const _naluLengthSize = (v.getUint8(4) & 3) + 1;  // lengthSizeMinusOne\n\n    if (_naluLengthSize !== 3 && _naluLengthSize !== 4) {  // holy shit!!!\n        // this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Strange NaluLengthSizeMinusOne: ${_naluLengthSize - 1}`);\n        return {};\n    }\n    let spsCount = v.getUint8(5) & 31;  // numOfSequenceParameterSets\n\n    if (spsCount === 0) {\n        // this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No SPS');\n        return {};\n    } else if (spsCount > 1) {\n        // Log.w(this.TAG, `Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ${spsCount}`);\n    }\n\n    let offset = 6;\n    for (let i = 0; i < spsCount; i++) {\n        let len = v.getUint16(offset, false);  // sequenceParameterSetLength\n        offset += 2;\n\n        if (len === 0) {\n            continue;\n        }\n\n        // Notice: Nalu without startcode header (00 00 00 01)\n        let sps = new Uint8Array(arrayBuffer.buffer, offset, len);\n        offset += len;\n        // flv.js作者选择了自己来解析这个数据结构，也是迫不得已，因为JS环境下没有ffmpeg，解析这个结构主要是为了提取 sps和pps。虽然理论上sps允许有多个，但其实一般就一个。\n        // packetTtype 为 1 表示 NALU，NALU= network abstract layer unit，这是H.264的概念，网络抽象层数据单元，其实简单理解就是一帧视频数据。\n        // pps的信息没什么用，所以作者只实现了sps的分析器，说明作者下了很大功夫去学习264的标准，其中的Golomb解码还是挺复杂的，能解对不容易，我在PC和手机平台都是用ffmpeg去解析的。\n        // SPS里面包括了视频分辨率，帧率，profile level等视频重要信息。\n        let config = SPSParser.parseSPS(sps);\n        // console.log('h264 sps config',config)\n        if (i !== 0) {\n            // ignore other sps's config\n            continue;\n        }\n        meta.sps = sps;\n        meta.timescale = 1000;\n        meta.codecWidth = config.codec_size.width;\n        meta.codecHeight = config.codec_size.height;\n        meta.presentWidth = config.present_size.width;\n        meta.presentHeight = config.present_size.height;\n\n        meta.profile = config.profile_string;\n        meta.level = config.level_string;\n        meta.bitDepth = config.bit_depth;\n        meta.chromaFormat = config.chroma_format;\n        meta.sarRatio = config.sar_ratio;\n        meta.frameRate = config.frame_rate;\n\n        if (config.frame_rate.fixed === false ||\n            config.frame_rate.fps_num === 0 ||\n            config.frame_rate.fps_den === 0) {\n            meta.frameRate = {\n                fixed: true,\n                fps: 23.976,\n                fps_num: 23976,\n                fps_den: 1000\n            };\n        }\n\n        let fps_den = meta.frameRate.fps_den;\n        let fps_num = meta.frameRate.fps_num;\n\n        meta.refSampleDuration = meta.timescale * (fps_den / fps_num);\n\n        let codecArray = sps.subarray(1, 4);\n\n        let codecString = 'avc1.';\n        for (let j = 0; j < 3; j++) {\n            let h = codecArray[j].toString(16);\n            if (h.length < 2) {\n                h = '0' + h;\n            }\n            codecString += h;\n        }\n        // codec\n        meta.codec = codecString;\n    }\n\n    let ppsCount = v.getUint8(offset);  // numOfPictureParameterSets\n    if (ppsCount === 0) {\n        // this._onError(DemuxErrors.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No PPS');\n        return {};\n    } else if (ppsCount > 1) {\n        // Log.w(this.TAG, `Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ${ppsCount}`);\n    }\n\n    offset++;\n    for (let i = 0; i < ppsCount; i++) {\n        let len = v.getUint16(offset, false);  // pictureParameterSetLength\n        offset += 2;\n\n        if (len === 0) {\n            continue;\n        }\n        let pps = new Uint8Array(arrayBuffer.buffer, offset, len);\n\n        // pps is useless for extracting video information\n        offset += len;\n        meta.pps = pps;\n    }\n\n    meta.videoType = 'avc';\n\n    if (meta.sps) {\n        const spsLength = meta.sps.byteLength;\n        const spsFlag = new Uint8Array([\n            (spsLength >>> 24) & 0xFF,\n            (spsLength >>> 16) & 0xFF,\n            (spsLength >>> 8) & 0xFF,\n            (spsLength) & 0xFF\n        ])\n        const sps = new Uint8Array(spsLength + 4);\n        sps.set(spsFlag, 0);\n        sps.set(meta.sps, 4);\n        meta.sps = sps;\n    }\n\n    if (meta.pps) {\n        const ppsLength = meta.pps.byteLength;\n        const ppsFlag = new Uint8Array([\n            (ppsLength >>> 24) & 0xFF,\n            (ppsLength >>> 16) & 0xFF,\n            (ppsLength >>> 8) & 0xFF,\n            (ppsLength) & 0xFF\n        ]);\n        const pps = new Uint8Array(ppsLength + 4);\n        pps.set(ppsFlag, 0);\n        pps.set(meta.pps, 4);\n        meta.pps = pps;\n    }\n\n\n    // meta.avcc = arrayBuffer;\n    return meta;\n}\n\n/**\n *\n * @param arrayBuffer\n * @returns {{}}\n */\nexport function parseAVCDecoderConfigurationRecord$2(arrayBuffer) {\n    let info = {};\n    let profile_idc, width, height, crop_left, crop_right,\n        crop_top, crop_bottom, frame_mbs_only, n, cf_idc,\n        num_ref_frames;\n    let bitop = new Bitop(arrayBuffer);\n    bitop.read(48);\n    info.width = 0;\n    info.height = 0;\n    do {\n        info.profile = bitop.read(8);\n        info.compat = bitop.read(8);\n        info.level = bitop.read(8);\n        info.nalu = (bitop.read(8) & 0x03) + 1;\n        info.nb_sps = bitop.read(8) & 0x1F;\n        if (info.nb_sps == 0) {\n            break;\n        }\n        /* nal size */\n        bitop.read(16);\n\n        /* nal type */\n        if (bitop.read(8) != 0x67) {\n            break;\n        }\n        /* SPS */\n        profile_idc = bitop.read(8);\n\n        /* flags */\n        bitop.read(8);\n\n        /* level idc */\n        bitop.read(8);\n\n        /* SPS id */\n        bitop.read_golomb();\n\n        if (profile_idc == 100 || profile_idc == 110 ||\n            profile_idc == 122 || profile_idc == 244 || profile_idc == 44 ||\n            profile_idc == 83 || profile_idc == 86 || profile_idc == 118) {\n            /* chroma format idc */\n            cf_idc = bitop.read_golomb();\n\n            if (cf_idc == 3) {\n\n                /* separate color plane */\n                bitop.read(1);\n            }\n\n            /* bit depth luma - 8 */\n            bitop.read_golomb();\n\n            /* bit depth chroma - 8 */\n            bitop.read_golomb();\n\n            /* qpprime y zero transform bypass */\n            bitop.read(1);\n\n            /* seq scaling matrix present */\n            if (bitop.read(1)) {\n\n                for (n = 0; n < (cf_idc != 3 ? 8 : 12); n++) {\n\n                    /* seq scaling list present */\n                    if (bitop.read(1)) {\n\n                        /* TODO: scaling_list()\n                        if (n < 6) {\n                        } else {\n                        }\n                        */\n                    }\n                }\n            }\n        }\n\n        /* log2 max frame num */\n        bitop.read_golomb();\n\n        /* pic order cnt type */\n        switch (bitop.read_golomb()) {\n            case 0:\n\n                /* max pic order cnt */\n                bitop.read_golomb();\n                break;\n\n            case 1:\n\n                /* delta pic order alwys zero */\n                bitop.read(1);\n\n                /* offset for non-ref pic */\n                bitop.read_golomb();\n\n                /* offset for top to bottom field */\n                bitop.read_golomb();\n\n                /* num ref frames in pic order */\n                num_ref_frames = bitop.read_golomb();\n\n                for (n = 0; n < num_ref_frames; n++) {\n\n                    /* offset for ref frame */\n                    bitop.read_golomb();\n                }\n        }\n\n        /* num ref frames */\n        info.avc_ref_frames = bitop.read_golomb();\n\n        /* gaps in frame num allowed */\n        bitop.read(1);\n\n        /* pic width in mbs - 1 */\n        width = bitop.read_golomb();\n\n        /* pic height in map units - 1 */\n        height = bitop.read_golomb();\n\n        /* frame mbs only flag */\n        frame_mbs_only = bitop.read(1);\n\n        if (!frame_mbs_only) {\n\n            /* mbs adaprive frame field */\n            bitop.read(1);\n        }\n\n        /* direct 8x8 inference flag */\n        bitop.read(1);\n\n        /* frame cropping */\n        if (bitop.read(1)) {\n\n            crop_left = bitop.read_golomb();\n            crop_right = bitop.read_golomb();\n            crop_top = bitop.read_golomb();\n            crop_bottom = bitop.read_golomb();\n\n        } else {\n            crop_left = 0;\n            crop_right = 0;\n            crop_top = 0;\n            crop_bottom = 0;\n        }\n        info.level = info.level / 10.0;\n        info.width = (width + 1) * 16 - (crop_left + crop_right) * 2;\n        info.height = (2 - frame_mbs_only) * (height + 1) * 16 - (crop_top + crop_bottom) * 2;\n\n    } while (0);\n\n    info.codecWidth = info.width;\n    info.codecHeight = info.height;\n    info.videoType = VIDEO_ENCODE_TYPE.h264\n    return info;\n}\n\n\nexport function parseAVCDecoderSPSAndPPS(arrayBuffer) {\n    const v = new DataView(arrayBuffer.buffer);\n    let version = v.getUint8(0);  // configurationVersion\n    let avcProfile = v.getUint8(1);  // avcProfileIndication\n    let profileCompatibility = v.getUint8(2);  // profile_compatibil\n    let avcLevel = v.getUint8(3);  // AVCLevelIndication\n    let spsArray;\n    let spsLength = 0;\n    let ppsArray;\n    let ppsLength = 0;\n    if (version !== 1 || avcProfile === 0) {\n        return;\n    }\n    const _naluLengthSize = (v.getUint8(4) & 3) + 1;  // lengthSizeMinusOne\n\n    if (_naluLengthSize !== 3 && _naluLengthSize !== 4) {  // holy shit!!!\n        // this._onError(DemuxErrors.FORMAT_ERROR, `Flv: Strange NaluLengthSizeMinusOne: ${_naluLengthSize - 1}`);\n        return;\n    }\n    let spsCount = v.getUint8(5) & 31;  // numOfSequenceParameterSets\n\n    if (spsCount === 0) {\n        return;\n    } else if (spsCount > 1) {\n        return;\n    }\n\n    let offset = 6;\n    for (let i = 0; i < spsCount; i++) {\n        spsLength = v.getUint16(offset, false);  // sequenceParameterSetLength\n        offset += 2;\n\n        if (spsLength === 0) {\n            continue;\n        }\n\n        spsArray = new Uint8Array(arrayBuffer.buffer, offset, spsLength);\n        offset += spsLength;\n    }\n\n    let ppsCount = v.getUint8(offset);  // numOfPictureParameterSets\n    if (ppsCount === 0) {\n        return;\n    } else if (ppsCount > 1) {\n        return;\n    }\n\n    offset++;\n    for (let i = 0; i < ppsCount; i++) {\n        ppsLength = v.getUint16(offset, false);  // pictureParameterSetLength\n        offset += 2;\n\n        if (ppsLength === 0) {\n            continue;\n        }\n        ppsArray = new Uint8Array(arrayBuffer.buffer, offset, ppsLength);\n\n        // pps is useless for extracting video information\n        offset += ppsLength;\n    }\n\n    if (spsLength === 0 || ppsLength === 0) {\n        return;\n    }\n\n    const spsFlag = new Uint8Array([\n        (spsLength >>> 24) & 0xFF,\n        (spsLength >>> 16) & 0xFF,\n        (spsLength >>> 8) & 0xFF,\n        (spsLength) & 0xFF\n    ])\n    const ppsFlag = new Uint8Array([\n        (ppsLength >>> 24) & 0xFF,\n        (ppsLength >>> 16) & 0xFF,\n        (ppsLength >>> 8) & 0xFF,\n        (ppsLength) & 0xFF\n    ]);\n\n    const sps = new Uint8Array(spsLength + 4);\n    sps.set(spsFlag, 0);\n    sps.set(spsArray, 4);\n    const pps = new Uint8Array(ppsLength + 4);\n    pps.set(ppsFlag, 0);\n    pps.set(ppsArray, 4);\n\n    return {\n        sps,\n        pps\n    }\n}\n\n\n/**\n *\n * @param sps\n * @param pps\n * @returns {Uint8Array}\n */\nexport function avcEncoderConfigurationRecord({sps, pps}) {\n//     todo: 1 是 序列帧 2-4cts帧\n    // 从 0x01 开始 表示version。\n    // RTMP_AVC_HEAD\n    // 0x17 keyframe  7:AVC\n    // 0x00 AVC sequence header\n    // 0x00 0x00 0x00\n    // 0x01 configurationVersion\n    // 0x42 AVCProfileIndication\n    // 0x00 profile_compatibility\n    // 0x1E AVCLevelIndication\n    // 0xFF lengthSizeMinusOne\n    const tmp = [\n        0x17, 0x00, 0x00, 0x00, 0x00,\n        0x01,\n        0x42,\n        0x00,\n        0x1E,\n        0xFF];\n    // 是个是私有协议标识，h264的。\n    // 0x17 :23\n    tmp[0] = 0x17\n\n    // 标准的 nale 格式。。。\n    tmp[6] = sps[1];// 0x42 avc profile ( sps[0][1] )\n    tmp[7] = sps[2];// 0x00 avc compatibility ( sps[0][2] )\n    tmp[8] = sps[3];// 0x1E avc level ( sps[0][3] )\n    //tmp[9]  0xFF  6   reserved ( all bits on )\n    // temp 的length 是10  最后的下标就是 9\n\n    // 0xE1 : 225\n    tmp[10] = 0xE1; //\n    // number of SPS NALUs (usually 1)  repeated once per SPS:\n    //\n    tmp[11] = (sps.byteLength >> 8) & 0xff; //\n    // SPS size\n    tmp[12] = sps.byteLength & 0xff; //\n    // variable   SPS NALU data\n    // number of PPS NALUs (usually 1)  　repeated once per PPS\n    // PPS size\n    // variable PPS NALU data\n    tmp.push(...sps, 0x01, (pps.byteLength >> 8) & 0xff, pps.byteLength & 0xff, ...pps);\n    //\n\n    const arrayBuffer = new Uint8Array(tmp)\n    return arrayBuffer;\n}\n\n\nexport function avcEncoderConfigurationRecord$2({sps, pps}) {\n    // require Nalu without 4 byte length-header\n    let length = 6 + 2 + sps.byteLength + 1 + 2 + pps.byteLength;\n    let need_extra_fields = false;\n    const sps_details = SPSParser.parseSPS$2(sps);\n\n    if (sps[3] !== 66 && sps[3] !== 77 && sps[3] !== 88) {\n        need_extra_fields = true;\n        length += 4;\n    }\n    let data = new Uint8Array(length);\n    data[0] = 0x01;    // configurationVersion\n    data[1] = sps[1];  // AVCProfileIndication\n    data[2] = sps[2];  // profile_compatibility\n    data[3] = sps[3];  // AVCLevelIndication\n    data[4] = 0xFF;    // 111111 + lengthSizeMinusOne(3)\n\n    data[5] = 0xE0 | 0x01  // 111 + numOfSequenceParameterSets\n    let sps_length = sps.byteLength;\n    data[6] = sps_length >>> 8;  // sequenceParameterSetLength\n    data[7] = sps_length & 0xFF;\n\n    let offset = 8;\n    data.set(sps, 8);\n    offset += sps_length;\n\n    data[offset] = 1;  // numOfPictureParameterSets\n\n    let pps_length = pps.byteLength;\n    data[offset + 1] = pps_length >>> 8;  // pictureParameterSetLength\n    data[offset + 2] = pps_length & 0xFF;\n\n    data.set(pps, offset + 3);\n    offset += 3 + pps_length;\n\n    if (need_extra_fields) {\n        data[offset] = 0xFC | sps_details.chroma_format_idc;\n        data[offset + 1] = 0xF8 | (sps_details.bit_depth_luma - 8);\n        data[offset + 2] = 0xF8 | (sps_details.bit_depth_chroma - 8);\n        data[offset + 3] = 0x00;  // number of sps ext\n        offset += 4;\n    }\n    const prevData = [0x17, 0x00, 0x00, 0x00, 0x00];\n    const newData = new Uint8Array(prevData.length + data.byteLength);\n    newData.set(prevData, 0);\n    newData.set(data, prevData.length);\n    return newData;\n}\n\n/**\n *\n * @param oneNALBuffer\n * @param isIframe\n * @returns {Uint8Array}\n */\nexport function avcEncoderNalePacket(oneNALBuffer, isIframe) {\n    //     正常发送nal\n    const idrBit = 0x10 | 7\n    const nIdrBit = 0x20 | 7\n    let tmp = [];\n    if (isIframe) {\n        tmp[0] = idrBit;\n    } else {\n        tmp[0] = nIdrBit;\n    }\n    // compositionTime\n    tmp[1] = 1;\n    tmp[2] = 0;\n    tmp[3] = 0;\n    tmp[4] = 0;\n\n    //\n    tmp[5] = (oneNALBuffer.byteLength >> 24) & 0xff;\n    tmp[6] = (oneNALBuffer.byteLength >> 16) & 0xff;\n    tmp[7] = (oneNALBuffer.byteLength >> 8) & 0xff;\n    tmp[8] = (oneNALBuffer.byteLength) & 0xff;\n    const arrayBuffer = new Uint8Array(tmp.length + oneNALBuffer.byteLength);\n    arrayBuffer.set(tmp, 0);\n    arrayBuffer.set(oneNALBuffer, tmp.length);\n    return arrayBuffer;\n}\n\nexport function avcEncoderNalePacketNotLength(oneNALBuffer, isIframe) {\n    //     正常发送nal\n    const idrBit = 0x10 | 7\n    const nIdrBit = 0x20 | 7\n    let tmp = [];\n    if (isIframe) {\n        tmp[0] = idrBit;\n    } else {\n        tmp[0] = nIdrBit;\n    }\n    // compositionTime\n    tmp[1] = 1;\n    tmp[2] = 0;\n    tmp[3] = 0;\n    tmp[4] = 0;\n\n    const arrayBuffer = new Uint8Array(tmp.length + oneNALBuffer.byteLength);\n    arrayBuffer.set(tmp, 0);\n    arrayBuffer.set(oneNALBuffer, tmp.length);\n    return arrayBuffer;\n}\n\n\nexport function addNaleHeaderLength(nalUnit) {\n    const nalUnitLength = nalUnit.byteLength;\n    const header = new Uint8Array(4);\n    header[0] = (nalUnitLength >>> 24) & 0xff;\n    header[1] = (nalUnitLength >>> 16) & 0xff;\n    header[2] = (nalUnitLength >>> 8) & 0xff;\n    header[3] = nalUnitLength & 0xff;\n    const result = new Uint8Array(nalUnitLength + 4);\n    result.set(header, 0);\n    result.set(nalUnit, 4);\n    return result;\n}\n\n/**\n * (NALU类型  & 0001  1111)\n * @param nalu\n * @returns {number}\n */\nexport function getAvcSeqHeadType(nalu) {\n    return nalu[0] & 0b0001_1111\n}\n\n\nexport function isAvcSeqHead(type) {\n    return type === H264_NAL_TYPE.sps || type === H264_NAL_TYPE.pps;\n}\n\nexport function isHvcSEIType(type) {\n    return type === H264_NAL_TYPE.kSliceSEI;\n}\n\nexport function isNotAvcSeqHead(type) {\n    return !isAvcSeqHead(type) && !isHvcSEIType(type);\n}\n\nexport function isAvcNaluIFrame(type) {\n    return type === H264_NAL_TYPE.iFrame\n}\n\n\nexport function isSameAvcNaluType(naluList) {\n    if (naluList.length === 0) {\n        return false;\n    }\n    const type = getAvcSeqHeadType(naluList[0]);\n    for (let i = 1; i < naluList.length; i++) {\n        if (type !== getAvcSeqHeadType(naluList[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n","import ExpGolomb from \"./exp-golomb\";\n\nconst _ebsp2rbsp = (uint8array) => {\n    let src = uint8array;\n    let src_length = src.byteLength;\n    let dst = new Uint8Array(src_length);\n    let dst_idx = 0;\n\n    for (let i = 0; i < src_length; i++) {\n        if (i >= 2) {\n            // Unescape: Skip 0x03 after 00 00\n            if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n                continue;\n            }\n        }\n        dst[dst_idx] = src[i];\n        dst_idx++;\n    }\n\n    return new Uint8Array(dst.buffer, 0, dst_idx);\n}\n\nconst getLevelString = (level_idc) => {\n    return (level_idc / 30).toFixed(1);\n}\n\nconst getChromaFormatString = (chroma_format_idc) => {\n    switch (chroma_format_idc) {\n        case 0: return '4:0:0';\n        case 1: return '4:2:0';\n        case 2: return '4:2:2';\n        case 3: return '4:4:4';\n        default: return 'Unknown';\n    }\n}\n\nexport const parseHevcSPS = (uint8array) => {\n    let rbsp = _ebsp2rbsp(uint8array);\n    let gb = new ExpGolomb(rbsp);\n\n    /* remove NALu Header */\n    gb.readByte();\n    gb.readByte();\n\n    let left_offset = 0, right_offset = 0, top_offset = 0, bottom_offset = 0;\n\n    // SPS\n    let video_paramter_set_id = gb.readBits(4);\n    let max_sub_layers_minus1 = gb.readBits(3);\n    let temporal_id_nesting_flag = gb.readBool();\n\n    // profile_tier_level begin\n    let general_profile_space = gb.readBits(2);\n    let general_tier_flag = gb.readBool();\n    let general_profile_idc = gb.readBits(5);\n    let general_profile_compatibility_flags_1 = gb.readByte();\n    let general_profile_compatibility_flags_2 = gb.readByte();\n    let general_profile_compatibility_flags_3 = gb.readByte();\n    let general_profile_compatibility_flags_4 = gb.readByte();\n    let general_constraint_indicator_flags_1 = gb.readByte();\n    let general_constraint_indicator_flags_2 = gb.readByte();\n    let general_constraint_indicator_flags_3 = gb.readByte();\n    let general_constraint_indicator_flags_4 = gb.readByte();\n    let general_constraint_indicator_flags_5 = gb.readByte();\n    let general_constraint_indicator_flags_6 = gb.readByte();\n    let general_level_idc = gb.readByte();\n    let sub_layer_profile_present_flag = [];\n    let sub_layer_level_present_flag = [];\n    for (let i = 0; i < max_sub_layers_minus1; i++) {\n        sub_layer_profile_present_flag.push(gb.readBool());\n        sub_layer_level_present_flag.push(gb.readBool());\n    }\n    if (max_sub_layers_minus1 > 0) {\n        for (let i = max_sub_layers_minus1; i < 8; i++) { gb.readBits(2); }\n    }\n    for (let i = 0; i < max_sub_layers_minus1; i++) {\n        if (sub_layer_profile_present_flag[i]) {\n            gb.readByte(); // sub_layer_profile_space, sub_layer_tier_flag, sub_layer_profile_idc\n            gb.readByte(); gb.readByte(); gb.readByte(); gb.readByte(); // sub_layer_profile_compatibility_flag\n            gb.readByte(); gb.readByte(); gb.readByte(); gb.readByte(); gb.readByte(); gb.readByte();\n        }\n        if (sub_layer_profile_present_flag[i]) {\n            gb.readByte();\n        }\n    }\n    // profile_tier_level end\n\n    let seq_parameter_set_id = gb.readUEG();\n    let chroma_format_idc = gb.readUEG();\n    if (chroma_format_idc == 3) {\n        gb.readBits(1);  // separate_colour_plane_flag\n    }\n    let pic_width_in_luma_samples = gb.readUEG();\n    let pic_height_in_luma_samples = gb.readUEG();\n    let conformance_window_flag = gb.readBool();\n    if (conformance_window_flag) {\n        left_offset += gb.readUEG();\n        right_offset += gb.readUEG();\n        top_offset += gb.readUEG();\n        bottom_offset += gb.readUEG();\n    }\n    let bit_depth_luma_minus8 = gb.readUEG();\n    let bit_depth_chroma_minus8 = gb.readUEG();\n    let log2_max_pic_order_cnt_lsb_minus4 = gb.readUEG();\n    let sub_layer_ordering_info_present_flag = gb.readBool();\n    for (let i = sub_layer_ordering_info_present_flag ? 0 : max_sub_layers_minus1; i <= max_sub_layers_minus1; i++) {\n        gb.readUEG(); // max_dec_pic_buffering_minus1[i]\n        gb.readUEG(); // max_num_reorder_pics[i]\n        gb.readUEG(); // max_latency_increase_plus1[i]\n    }\n    let log2_min_luma_coding_block_size_minus3 = gb.readUEG();\n    let log2_diff_max_min_luma_coding_block_size = gb.readUEG();\n    let log2_min_transform_block_size_minus2 = gb.readUEG();\n    let log2_diff_max_min_transform_block_size = gb.readUEG();\n    let max_transform_hierarchy_depth_inter = gb.readUEG();\n    let max_transform_hierarchy_depth_intra = gb.readUEG();\n    let scaling_list_enabled_flag = gb.readBool();\n    if (scaling_list_enabled_flag) {\n        let sps_scaling_list_data_present_flag = gb.readBool();\n        if (sps_scaling_list_data_present_flag) {\n            for (let sizeId = 0; sizeId < 4; sizeId++) {\n                for(let matrixId = 0; matrixId < ((sizeId === 3) ? 2 : 6); matrixId++){\n                    let scaling_list_pred_mode_flag = gb.readBool();\n                    if (!scaling_list_pred_mode_flag) {\n                        gb.readUEG(); // scaling_list_pred_matrix_id_delta\n                    } else {\n                        let coefNum = Math.min(64, (1 << (4 + (sizeId << 1))));\n                        if (sizeId > 1) { gb.readSEG() }\n                        for (let i = 0; i < coefNum; i++) { gb.readSEG(); }\n                    }\n                }\n            }\n        }\n    }\n    let amp_enabled_flag = gb.readBool();\n    let sample_adaptive_offset_enabled_flag = gb.readBool();\n    let pcm_enabled_flag = gb.readBool();\n    if (pcm_enabled_flag) {\n        gb.readByte();\n        gb.readUEG();\n        gb.readUEG();\n        gb.readBool();\n    }\n    let num_short_term_ref_pic_sets = gb.readUEG();\n    let num_delta_pocs = 0;\n    for (let i = 0; i < num_short_term_ref_pic_sets; i++) {\n        let inter_ref_pic_set_prediction_flag = false;\n        if (i !== 0) { inter_ref_pic_set_prediction_flag = gb.readBool(); }\n        if (inter_ref_pic_set_prediction_flag) {\n            if (i === num_short_term_ref_pic_sets) { gb.readUEG(); }\n            gb.readBool();\n            gb.readUEG();\n            let next_num_delta_pocs = 0;\n            for (let j = 0; j <= num_delta_pocs; j++) {\n                let used_by_curr_pic_flag = gb.readBool();\n                let use_delta_flag = false;\n                if (!used_by_curr_pic_flag) {\n                    use_delta_flag = gb.readBool();\n                }\n                if (used_by_curr_pic_flag || use_delta_flag) {\n                    next_num_delta_pocs++;\n                }\n            }\n            num_delta_pocs = next_num_delta_pocs;\n        } else {\n            let num_negative_pics = gb.readUEG();\n            let num_positive_pics = gb.readUEG();\n            num_delta_pocs = num_negative_pics + num_positive_pics;\n            for (let j = 0; j < num_negative_pics; j++) {\n                gb.readUEG();\n                gb.readBool();\n            }\n            for (let j = 0; j < num_positive_pics; j++) {\n                gb.readUEG();\n                gb.readBool();\n            }\n        }\n    }\n    let long_term_ref_pics_present_flag = gb.readBool();\n    if (long_term_ref_pics_present_flag) {\n        let num_long_term_ref_pics_sps = gb.readUEG();\n        for (let i = 0; i < num_long_term_ref_pics_sps; i++) {\n            for (let j = 0; j < (log2_max_pic_order_cnt_lsb_minus4 + 4); j++) { gb.readBits(1); }\n            gb.readBits(1);\n        }\n    }\n    //*\n    let default_display_window_flag = false; // for calc offset\n    let min_spatial_segmentation_idc = 0; // for hvcC\n    let sar_width = 1, sar_height = 1;\n    let fps_fixed = false, fps_den = 1, fps_num = 1;\n    //*/\n    let sps_temporal_mvp_enabled_flag = gb.readBool();\n    let strong_intra_smoothing_enabled_flag = gb.readBool();\n    let vui_parameters_present_flag = gb.readBool();\n    if (vui_parameters_present_flag) {\n        let aspect_ratio_info_present_flag = gb.readBool();\n        if (aspect_ratio_info_present_flag) {\n            let aspect_ratio_idc = gb.readByte();\n\n            let sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n            let sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\n\n            if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                sar_width = sar_w_table[aspect_ratio_idc - 1];\n                sar_height = sar_h_table[aspect_ratio_idc - 1];\n            } else if (aspect_ratio_idc === 255) {\n                sar_width = gb.readBits(16);\n                sar_height = gb.readBits(16);\n            }\n        }\n        let overscan_info_present_flag = gb.readBool();\n        if (overscan_info_present_flag) {\n            gb.readBool();\n        }\n        let video_signal_type_present_flag = gb.readBool();\n        if (video_signal_type_present_flag) {\n            gb.readBits(3);\n            gb.readBool();\n            let colour_description_present_flag = gb.readBool();\n            if (colour_description_present_flag) {\n                gb.readByte();\n                gb.readByte();\n                gb.readByte();\n            }\n        }\n        let chroma_loc_info_present_flag = gb.readBool();\n        if (chroma_loc_info_present_flag) {\n            gb.readUEG();\n            gb.readUEG();\n        }\n        let neutral_chroma_indication_flag = gb.readBool();\n        let field_seq_flag = gb.readBool();\n        let frame_field_info_present_flag = gb.readBool();\n        default_display_window_flag = gb.readBool();\n        if (default_display_window_flag) {\n            left_offset += gb.readUEG();\n            right_offset += gb.readUEG();\n            top_offset += gb.readUEG();\n            bottom_offset += gb.readUEG();\n        }\n        let vui_timing_info_present_flag = gb.readBool();\n        if (vui_timing_info_present_flag) {\n            fps_den = gb.readBits(32);\n            fps_num = gb.readBits(32);\n            let vui_poc_proportional_to_timing_flag = gb.readBool();\n            if (vui_poc_proportional_to_timing_flag) {\n                gb.readUEG();\n                let vui_hrd_parameters_present_flag = gb.readBool();\n                if (vui_hrd_parameters_present_flag) {\n                    let commonInfPresentFlag = 1;\n                    let nal_hrd_parameters_present_flag = false;\n                    let vcl_hrd_parameters_present_flag = false;\n                    let sub_pic_hrd_params_present_flag = false;\n                    if (commonInfPresentFlag) {\n                        nal_hrd_parameters_present_flag = gb.readBool();\n                        vcl_hrd_parameters_present_flag = gb.readBool();\n                        if( nal_hrd_parameters_present_flag || vcl_hrd_parameters_present_flag ){\n                            sub_pic_hrd_params_present_flag = gb.readBool();\n                            if (sub_pic_hrd_params_present_flag) {\n                                gb.readByte();\n                                gb.readBits(5);\n                                gb.readBool();\n                                gb.readBits(5);\n                            }\n                            let bit_rate_scale = gb.readBits(4);\n                            let cpb_size_scale = gb.readBits(4);\n                            if (sub_pic_hrd_params_present_flag) {\n                                gb.readBits(4);\n                            }\n                            gb.readBits(5);\n                            gb.readBits(5);\n                            gb.readBits(5);\n                        }\n                    }\n                    for (let i = 0; i <= max_sub_layers_minus1; i++) {\n                        let fixed_pic_rate_general_flag = gb.readBool();\n                        fps_fixed = fixed_pic_rate_general_flag;\n                        let fixed_pic_rate_within_cvs_flag = false;\n                        let cpbCnt = 1;\n                        if (!fixed_pic_rate_general_flag) {\n                            fixed_pic_rate_within_cvs_flag = gb.readBool();\n                        }\n                        let low_delay_hrd_flag = false;\n                        if (fixed_pic_rate_within_cvs_flag) {\n                            gb.readSEG();\n                        } else {\n                            low_delay_hrd_flag = gb.readBool();\n                        }\n                        if (!low_delay_hrd_flag) {\n                            cpbcnt = gb.readUEG() + 1;\n                        }\n                        if (nal_hrd_parameters_present_flag) {\n                            for (let j = 0; j < cpbCnt; j++) {\n                                gb.readUEG(); gb.readUEG();\n                                if (sub_pic_hrd_params_present_flag) {\n                                    gb.readUEG(); gb.readUEG();\n                                }\n                            }\n                        }\n                        if (vcl_hrd_parameters_present_flag) {\n                            for (let j = 0; j < cpbCnt; j++) {\n                                gb.readUEG(); gb.readUEG();\n                                if (sub_pic_hrd_params_present_flag) {\n                                    gb.readUEG(); gb.readUEG();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        let bitstream_restriction_flag = gb.readBool();\n        if (bitstream_restriction_flag) {\n            let tiles_fixed_structure_flag = gb.readBool()\n            let motion_vectors_over_pic_boundaries_flag = gb.readBool()\n            let restricted_ref_pic_lists_flag = gb.readBool();\n            min_spatial_segmentation_idc = gb.readUEG();\n            let max_bytes_per_pic_denom = gb.readUEG();\n            let max_bits_per_min_cu_denom = gb.readUEG();\n            let log2_max_mv_length_horizontal = gb.readUEG();\n            let log2_max_mv_length_vertical = gb.readUEG();\n        }\n    }\n    let sps_extension_flag = gb.readBool(); // ignore...\n\n    // for meta data\n    let codec_mimetype = `hvc1.${general_profile_idc}.1.L${general_level_idc}.B0`;\n    let codec_width = pic_width_in_luma_samples;\n    let codec_height = pic_height_in_luma_samples;\n    let sar_scale = 1;\n    if (sar_width !== 1 && sar_height !== 1) {\n        sar_scale = sar_width / sar_height;\n    }\n\n    gb.destroy();\n    gb = null;\n\n    return {\n        codec_mimetype,\n        level_string: getLevelString(general_level_idc),\n        profile_idc: general_profile_idc,\n        bit_depth: bit_depth_luma_minus8 + 8,\n        ref_frames: 1, // FIXME!!!\n        chroma_format: chroma_format_idc,\n        chroma_format_string: getChromaFormatString(chroma_format_idc),\n\n        general_level_idc,\n        general_profile_space,\n        general_tier_flag,\n        general_profile_idc,\n        general_profile_compatibility_flags_1,\n        general_profile_compatibility_flags_2,\n        general_profile_compatibility_flags_3,\n        general_profile_compatibility_flags_4,\n        general_constraint_indicator_flags_1,\n        general_constraint_indicator_flags_2,\n        general_constraint_indicator_flags_3,\n        general_constraint_indicator_flags_4,\n        general_constraint_indicator_flags_5,\n        general_constraint_indicator_flags_6,\n        min_spatial_segmentation_idc,\n        constant_frame_rate: 0 /* FIXME!! fps_fixed ? 1 : 0? */,\n        chroma_format_idc,\n        bit_depth_luma_minus8,\n        bit_depth_chroma_minus8,\n\n        frame_rate: {\n            fixed: fps_fixed,\n            fps: fps_num / fps_den,\n            fps_den: fps_den,\n            fps_num: fps_num,\n        },\n\n        sar_ratio: {\n            width: sar_width,\n            height: sar_height\n        },\n\n        codec_size: {\n            width: codec_width,\n            height: codec_height\n        },\n\n        present_size: {\n            width: codec_width * sar_scale,\n            height: codec_height\n        }\n    };\n}\n\nexport const parseHevcVPS = (uint8array) => {\n    let rbsp = _ebsp2rbsp(uint8array);\n    let gb = new ExpGolomb(rbsp);\n\n    /* remove NALu Header */\n    gb.readByte();\n    gb.readByte();\n\n    // VPS\n    let video_parameter_set_id = gb.readBits(4);\n    gb.readBits(2);\n    let max_layers_minus1 = gb.readBits(6);\n    let max_sub_layers_minus1 = gb.readBits(3);\n    let temporal_id_nesting_flag = gb.readBool();\n    // and more ...\n\n    return {\n        num_temporal_layers: max_sub_layers_minus1 + 1,\n        temporal_id_nested: temporal_id_nesting_flag\n    }\n}\n\nexport const parseHevcPPS = (uint8array) => {\n    let rbsp = _ebsp2rbsp(uint8array);\n    let gb = new ExpGolomb(rbsp);\n\n    /* remove NALu Header */\n    gb.readByte();\n    gb.readByte();\n\n    let pic_parameter_set_id = gb.readUEG();\n    let seq_parameter_set_id = gb.readUEG();\n    let dependent_slice_segments_enabled_flag = gb.readBool();\n    let output_flag_present_flag = gb.readBool();\n    let num_extra_slice_header_bits = gb.readBits(3);\n    let sign_data_hiding_enabled_flag = gb.readBool();\n    let cabac_init_present_flag = gb.readBool();\n    let num_ref_idx_l0_default_active_minus1 = gb.readUEG();\n    let num_ref_idx_l1_default_active_minus1 = gb.readUEG();\n    let init_qp_minus26 = gb.readSEG();\n    let constrained_intra_pred_flag = gb.readBool();\n    let transform_skip_enabled_flag = gb.readBool();\n    let cu_qp_delta_enabled_flag = gb.readBool();\n    if (cu_qp_delta_enabled_flag) {\n        let diff_cu_qp_delta_depth = gb.readUEG();\n    }\n    let cb_qp_offset = gb.readSEG();\n    let cr_qp_offset = gb.readSEG();\n    let pps_slice_chroma_qp_offsets_present_flag = gb.readBool();\n    let weighted_pred_flag = gb.readBool();\n    let weighted_bipred_flag = gb.readBool();\n    let transquant_bypass_enabled_flag = gb.readBool();\n    let tiles_enabled_flag = gb.readBool();\n    let entropy_coding_sync_enabled_flag = gb.readBool();\n    // and more ...\n\n    // needs hvcC\n    let parallelismType = 1; // slice-based parallel decoding\n    if (entropy_coding_sync_enabled_flag && tiles_enabled_flag) {\n        parallelismType = 0; // mixed-type parallel decoding\n    } else if (entropy_coding_sync_enabled_flag) {\n        parallelismType = 3; // wavefront-based parallel decoding\n    } else if (tiles_enabled_flag) {\n        parallelismType = 2; // tile-based parallel decoding\n    }\n\n    return {\n        parallelismType\n    }\n}\n","import {H265_NAL_TYPE, VIDEO_ENCODE_TYPE} from \"../constant\";\nimport SPSParser from \"./h265-sps-parser\";\nimport Bitop from \"./bitop\";\nimport {parseHevcVPS, parseHevcPPS, parseHevcSPS} from \"./h265-vps-sps-pps-parser\";\n\n/**\n *\n * @param arrayBuffer\n * @returns {{}}\n */\nexport function parseHEVCDecoderConfigurationRecord(arrayBuffer) {\n    const meta = {\n        codecWidth: 0,\n        codecHeight: 0,\n        videoType: VIDEO_ENCODE_TYPE.h265\n    }\n    let offset = 28 - 5;\n    //\n    const vpsTag = arrayBuffer[offset];\n\n    if (vpsTag !== H265_NAL_TYPE.vps) {\n        return meta;\n    }\n\n    offset += 2;\n    offset += 1;\n    const vpsLength = arrayBuffer[offset + 1] | (arrayBuffer[offset] << 8);\n    offset += 2;\n    const vpsData = arrayBuffer.slice(offset, (offset + vpsLength));\n    // console.log('vpsData:', Uint8Array.from(vpsData));\n    offset += vpsLength;\n\n    const spsTag = arrayBuffer[offset]\n    if (spsTag !== H265_NAL_TYPE.sps) {\n        return meta;\n    }\n    offset += 2;\n    offset += 1;\n    const spsLength = arrayBuffer[offset + 1] | (arrayBuffer[offset] << 8);\n\n    offset += 2;\n    const spsData = arrayBuffer.slice(offset, (offset + spsLength))\n    // console.log('spsData:', Uint8Array.from(spsData));\n\n    offset += spsLength;\n\n    const ppsTag = arrayBuffer[offset];\n\n    if (ppsTag !== H265_NAL_TYPE.pps) {\n        return meta;\n    }\n    offset += 2;\n    offset += 1;\n    const ppsLength = arrayBuffer[offset + 1] | (arrayBuffer[offset] << 8);\n    offset += 2;\n    const ppsData = arrayBuffer.slice(offset, (offset + ppsLength))\n    // console.log('ppsData:', Uint8Array.from(ppsData));\n\n    let sps = Uint8Array.from(spsData);\n    let config = SPSParser.parseSPS(sps);\n\n    meta.codecWidth = config.codec_size.width;\n    meta.codecHeight = config.codec_size.height;\n    meta.presentWidth = config.present_size.width;\n    meta.presentHeight = config.present_size.height;\n\n    meta.profile = config.profile_string;\n    meta.level = config.level_string;\n    meta.bitDepth = config.bit_depth;\n    meta.chromaFormat = config.chroma_format;\n    meta.sarRatio = config.sar_ratio;\n\n    return meta;\n}\n\n/**\n *\n * @param arrayBuffer\n */\nexport function parseHEVCDecoderConfigurationRecord$2(arrayBuffer) {\n    let info = {};\n    info.width = 0;\n    info.height = 0;\n    info.profile = 0;\n    info.level = 0;\n\n    arrayBuffer = arrayBuffer.slice(5);\n\n    do {\n        let hevc = {};\n        if (arrayBuffer.length < 23) {\n            break;\n        }\n\n        hevc.configurationVersion = arrayBuffer[0];\n        if (hevc.configurationVersion != 1) {\n            break;\n        }\n        hevc.general_profile_space = (arrayBuffer[1] >> 6) & 0x03;\n        hevc.general_tier_flag = (arrayBuffer[1] >> 5) & 0x01;\n        hevc.general_profile_idc = arrayBuffer[1] & 0x1F;\n        hevc.general_profile_compatibility_flags = (arrayBuffer[2] << 24) | (arrayBuffer[3] << 16) | (arrayBuffer[4] << 8) | arrayBuffer[5];\n        hevc.general_constraint_indicator_flags = ((arrayBuffer[6] << 24) | (arrayBuffer[7] << 16) | (arrayBuffer[8] << 8) | arrayBuffer[9]);\n        hevc.general_constraint_indicator_flags = (hevc.general_constraint_indicator_flags << 16) | (arrayBuffer[10] << 8) | arrayBuffer[11];\n        hevc.general_level_idc = arrayBuffer[12];\n        hevc.min_spatial_segmentation_idc = ((arrayBuffer[13] & 0x0F) << 8) | arrayBuffer[14];\n        hevc.parallelismType = arrayBuffer[15] & 0x03;\n        hevc.chromaFormat = arrayBuffer[16] & 0x03;\n        hevc.bitDepthLumaMinus8 = arrayBuffer[17] & 0x07;\n        hevc.bitDepthChromaMinus8 = arrayBuffer[18] & 0x07;\n        hevc.avgFrameRate = (arrayBuffer[19] << 8) | arrayBuffer[20];\n        hevc.constantFrameRate = (arrayBuffer[21] >> 6) & 0x03;\n        hevc.numTemporalLayers = (arrayBuffer[21] >> 3) & 0x07;\n        hevc.temporalIdNested = (arrayBuffer[21] >> 2) & 0x01;\n        hevc.lengthSizeMinusOne = arrayBuffer[21] & 0x03;\n        let numOfArrays = arrayBuffer[22];\n        let p = arrayBuffer.slice(23);\n        for (let i = 0; i < numOfArrays; i++) {\n            if (p.length < 3) {\n                break;\n            }\n            let nalutype = p[0] & 0x3F;\n            let n = (p[1]) << 8 | p[2];\n            // console.log('nalutype', nalutype,n)\n            p = p.slice(3);\n            for (let j = 0; j < n; j++) {\n                if (p.length < 2) {\n                    break;\n                }\n                let k = (p[0] << 8) | p[1];\n                // console.log('k', k)\n                if (p.length < 2 + k) {\n                    break;\n                }\n                p = p.slice(2);\n                if (nalutype == 33) {\n                    //SPS\n                    let sps = new Uint8Array(k);\n                    sps.set(p.slice(0, k), 0);\n                    hevc.psps = HEVCParseSPS(sps, hevc);\n                    info.profile = hevc.general_profile_idc;\n                    info.level = hevc.general_level_idc / 30.0;\n                    info.width = hevc.psps.pic_width_in_luma_samples - (hevc.psps.conf_win_left_offset + hevc.psps.conf_win_right_offset);\n                    info.height = hevc.psps.pic_height_in_luma_samples - (hevc.psps.conf_win_top_offset + hevc.psps.conf_win_bottom_offset);\n                }\n                p = p.slice(k);\n            }\n        }\n    } while (0);\n\n    info.codecWidth = info.width || 1920;\n    info.codecHeight = info.height || 1080;\n    info.presentHeight = info.codecHeight;\n    info.presentWidth = info.codecWidth;\n    info.timescale = 1000;\n    info.refSampleDuration = 1000 * (1000 / 23976)\n    info.videoType = VIDEO_ENCODE_TYPE.h265\n    return info;\n}\n\nexport function parseHEVCDecoderVPSAndSPSAndPPS(arrayBuffer) {\n    //\n    let offset = 28 - 5; // 23\n    //\n    const vpsTag = arrayBuffer[offset];\n\n    if ((vpsTag & 0x3F) !== H265_NAL_TYPE.vps) {\n        console.warn(`parseHEVCDecoderVPSAndSPSAndPPS and vpsTag is ${vpsTag}`)\n        return {};\n    }\n\n    offset += 2;\n    offset += 1;\n    const vpsLength = arrayBuffer[offset + 1] | (arrayBuffer[offset] << 8);\n    offset += 2;\n    const vpsData = arrayBuffer.slice(offset, (offset + vpsLength));\n    // console.log('vpsData:', Uint8Array.from(vpsData));\n    offset += vpsLength;\n\n    const spsTag = arrayBuffer[offset]\n    if ((spsTag & 0x3F) !== H265_NAL_TYPE.sps) {\n        console.warn(`parseHEVCDecoderVPSAndSPSAndPPS and sps tag is ${spsTag}`)\n        return {};\n    }\n    offset += 2;\n    offset += 1;\n    const spsLength = arrayBuffer[offset + 1] | (arrayBuffer[offset] << 8);\n\n    offset += 2;\n    const spsData = arrayBuffer.slice(offset, (offset + spsLength))\n    // console.log('spsData:', Uint8Array.from(spsData));\n\n    offset += spsLength;\n\n    const ppsTag = arrayBuffer[offset];\n\n    if ((ppsTag & 0x3F) !== H265_NAL_TYPE.pps) {\n        console.warn(`parseHEVCDecoderVPSAndSPSAndPPS and pps tag is ${ppsTag}`)\n        return {};\n    }\n    offset += 2;\n    offset += 1;\n    const ppsLength = arrayBuffer[offset + 1] | (arrayBuffer[offset] << 8);\n    offset += 2;\n    const ppsData = arrayBuffer.slice(offset, (offset + ppsLength))\n    // console.log('ppsData:', Uint8Array.from(ppsData));\n    const spsFlag = new Uint8Array([\n        (spsLength >>> 24) & 0xFF,\n        (spsLength >>> 16) & 0xFF,\n        (spsLength >>> 8) & 0xFF,\n        (spsLength) & 0xFF\n    ])\n    const ppsFlag = new Uint8Array([\n        (ppsLength >>> 24) & 0xFF,\n        (ppsLength >>> 16) & 0xFF,\n        (ppsLength >>> 8) & 0xFF,\n        (ppsLength) & 0xFF\n    ]);\n    const vpsFlag = new Uint8Array([\n        (vpsLength >>> 24) & 0xFF,\n        (vpsLength >>> 16) & 0xFF,\n        (vpsLength >>> 8) & 0xFF,\n        (vpsLength) & 0xFF\n    ]);\n    const sps = new Uint8Array(spsLength + 4);\n    sps.set(spsFlag, 0);\n    sps.set(spsData, 4);\n    const pps = new Uint8Array(ppsLength + 4);\n    pps.set(ppsFlag, 0);\n    pps.set(ppsData, 4);\n    const vps = new Uint8Array(vpsLength + 4);\n    vps.set(vpsFlag, 0);\n    vps.set(vpsData, 4);\n    return {\n        sps,\n        pps,\n        vps\n    }\n}\n\nexport function HEVCParsePtl(bitop, hevc, max_sub_layers_minus1) {\n    let general_ptl = {};\n\n    general_ptl.profile_space = bitop.read(2);\n    general_ptl.tier_flag = bitop.read(1);\n    general_ptl.profile_idc = bitop.read(5);\n    general_ptl.profile_compatibility_flags = bitop.read(32);\n    general_ptl.general_progressive_source_flag = bitop.read(1);\n    general_ptl.general_interlaced_source_flag = bitop.read(1);\n    general_ptl.general_non_packed_constraint_flag = bitop.read(1);\n    general_ptl.general_frame_only_constraint_flag = bitop.read(1);\n    bitop.read(32);\n    bitop.read(12);\n    general_ptl.level_idc = bitop.read(8);\n\n    general_ptl.sub_layer_profile_present_flag = [];\n    general_ptl.sub_layer_level_present_flag = [];\n\n    for (let i = 0; i < max_sub_layers_minus1; i++) {\n        general_ptl.sub_layer_profile_present_flag[i] = bitop.read(1);\n        general_ptl.sub_layer_level_present_flag[i] = bitop.read(1);\n    }\n\n    if (max_sub_layers_minus1 > 0) {\n        for (let i = max_sub_layers_minus1; i < 8; i++) {\n            bitop.read(2);\n        }\n    }\n\n    general_ptl.sub_layer_profile_space = [];\n    general_ptl.sub_layer_tier_flag = [];\n    general_ptl.sub_layer_profile_idc = [];\n    general_ptl.sub_layer_profile_compatibility_flag = [];\n    general_ptl.sub_layer_progressive_source_flag = [];\n    general_ptl.sub_layer_interlaced_source_flag = [];\n    general_ptl.sub_layer_non_packed_constraint_flag = [];\n    general_ptl.sub_layer_frame_only_constraint_flag = [];\n    general_ptl.sub_layer_level_idc = [];\n\n    for (let i = 0; i < max_sub_layers_minus1; i++) {\n        if (general_ptl.sub_layer_profile_present_flag[i]) {\n            general_ptl.sub_layer_profile_space[i] = bitop.read(2);\n            general_ptl.sub_layer_tier_flag[i] = bitop.read(1);\n            general_ptl.sub_layer_profile_idc[i] = bitop.read(5);\n            general_ptl.sub_layer_profile_compatibility_flag[i] = bitop.read(32);\n            general_ptl.sub_layer_progressive_source_flag[i] = bitop.read(1);\n            general_ptl.sub_layer_interlaced_source_flag[i] = bitop.read(1);\n            general_ptl.sub_layer_non_packed_constraint_flag[i] = bitop.read(1);\n            general_ptl.sub_layer_frame_only_constraint_flag[i] = bitop.read(1);\n            bitop.read(32);\n            bitop.read(12);\n        }\n        if (general_ptl.sub_layer_level_present_flag[i]) {\n            general_ptl.sub_layer_level_idc[i] = bitop.read(8);\n        } else {\n            general_ptl.sub_layer_level_idc[i] = 1;\n        }\n    }\n    return general_ptl;\n}\n\nexport function HEVCParseSPS(SPS, hevc) {\n    let psps = {};\n    let NumBytesInNALunit = SPS.length;\n    let NumBytesInRBSP = 0;\n    let rbsp_array = [];\n    let bitop = new Bitop(SPS);\n\n    bitop.read(1);//forbidden_zero_bit\n    bitop.read(6);//nal_unit_type\n    bitop.read(6);//nuh_reserved_zero_6bits\n    bitop.read(3);//nuh_temporal_id_plus1\n\n    for (let i = 2; i < NumBytesInNALunit; i++) {\n        if (i + 2 < NumBytesInNALunit && bitop.look(24) == 0x000003) {\n            rbsp_array.push(bitop.read(8));\n            rbsp_array.push(bitop.read(8));\n            i += 2;\n            let emulation_prevention_three_byte = bitop.read(8); /* equal to 0x03 */\n        } else {\n            rbsp_array.push(bitop.read(8));\n        }\n    }\n    let rbsp = new Uint8Array(rbsp_array);\n    let rbspBitop = new Bitop(rbsp);\n    psps.sps_video_parameter_set_id = rbspBitop.read(4);\n    psps.sps_max_sub_layers_minus1 = rbspBitop.read(3);\n    psps.sps_temporal_id_nesting_flag = rbspBitop.read(1);\n    psps.profile_tier_level = HEVCParsePtl(rbspBitop, hevc, psps.sps_max_sub_layers_minus1);\n    psps.sps_seq_parameter_set_id = rbspBitop.read_golomb();\n    psps.chroma_format_idc = rbspBitop.read_golomb();\n    if (psps.chroma_format_idc == 3) {\n        psps.separate_colour_plane_flag = rbspBitop.read(1);\n    } else {\n        psps.separate_colour_plane_flag = 0;\n    }\n    psps.pic_width_in_luma_samples = rbspBitop.read_golomb();\n    psps.pic_height_in_luma_samples = rbspBitop.read_golomb();\n    psps.conformance_window_flag = rbspBitop.read(1);\n    if (psps.conformance_window_flag) {\n        let vert_mult = 1 + (psps.chroma_format_idc < 2);\n        let horiz_mult = 1 + (psps.chroma_format_idc < 3);\n        psps.conf_win_left_offset = rbspBitop.read_golomb() * horiz_mult;\n        psps.conf_win_right_offset = rbspBitop.read_golomb() * horiz_mult;\n        psps.conf_win_top_offset = rbspBitop.read_golomb() * vert_mult;\n        psps.conf_win_bottom_offset = rbspBitop.read_golomb() * vert_mult;\n    } else {\n        psps.conf_win_left_offset = 0;\n        psps.conf_win_right_offset = 0;\n        psps.conf_win_top_offset = 0;\n        psps.conf_win_bottom_offset = 0;\n    }\n    // Logger.debug(psps);\n    return psps;\n}\n\n/**\n *\n * @param vps\n * @param pps\n * @param sps\n * @returns {Uint8Array}\n */\nexport function hevcEncoderConfigurationRecord({vps, pps, sps}) {\n    // 0x1c & 0x0F 等于 12 刚好是 h265 标准。\n    // seq header 总共需要 43 + vps.length + sps.length + pps.length\n    // 一样的是从 1开始（0x01）\n    // unsigned int(8) configurationVersion = 1;\n    // 0x1c : 28\n    const tmp = [0x1c, 0, 0, 0, 0, 1];\n\n    // unsigned int(8) general_level_idc;\n    // tmp[17] = generalLevelIdc\n\n    // bit(4) reserved = ‘1111’b;\n    // unsigned int(12) min_spatial_segmentation_idc;\n    // bit(6) reserved = ‘111111’b;\n    // unsigned int(2) parallelismType;\n    // tmp[20] = 0xfc\n\n\n    // bit(6) reserved = ‘111111’b;\n    // unsigned int(2) chromaFormat;\n    // tmp[21] = chromaFormat | 0xfc\n\n    // bit(5) reserved = ‘11111’b;\n    // unsigned int(3) bitDepthLumaMinus8;\n    // tmp[22] = bitDepthLumaMinus8 | 0xf8\n\n    // bit(5) reserved = ‘11111’b;\n    // unsigned int(3) bitDepthChromaMinus8;\n    // tmp[23] = bitDepthChromaMinus8 | 0xf8\n\n    // bit(2) constantFrameRate;\n    // bit(3) numTemporalLayers;\n    // bit(1) temporalIdNested;\n    // unsigned int(2) lengthSizeMinusOne;\n    tmp[26] = (0 << 6) | (1 << 3) | (1 << 2) | 3\n    // num of vps sps pps\n    tmp[27] = 0x03;\n\n    // 28下标之后\n    // vps\n    // num of vps\n    tmp.push(H265_NAL_TYPE.vps, 0, 1);\n    tmp.push((vps.byteLength >> 8) & 0xff, (vps.byteLength) & 0xff);\n    // 33下标之后\n    tmp.push(...vps);\n    // sps\n    tmp.push(H265_NAL_TYPE.sps, 0, 1);\n    tmp.push((sps.byteLength >> 8) & 0xff, (sps.byteLength) & 0xff);\n    tmp.push(...sps);\n    // pps\n    tmp.push(H265_NAL_TYPE.pps, 0, 1);\n    tmp.push((pps.byteLength >> 8) & 0xff, (pps.byteLength) & 0xff);\n    tmp.push(...pps);\n\n    const arrayBuffer = new Uint8Array(tmp);\n\n    return arrayBuffer;\n}\n\nexport function hevcEncoderConfigurationRecord$2({vps, pps, sps}) {\n\n    let detail = {\n        configurationVersion: 1,\n    }\n    const vpsDetail = parseHevcVPS(vps);\n    const spsDetail = parseHevcSPS(sps);\n    const ppsDetail = parseHevcPPS(pps);\n    detail = Object.assign(detail, vpsDetail, spsDetail, ppsDetail);\n\n    let length = 23 + (3 + 2 + vps.byteLength) + (3 + 2 + sps.byteLength) + (3 + 2 + pps.byteLength);\n    let data = new Uint8Array(length);\n\n    data[0] = 0x01; // configurationVersion\n    data[1] = ((detail.general_profile_space & 0x03) << 6) | ((detail.general_tier_flag ? 1 : 0) << 5) | ((detail.general_profile_idc & 0x1F));\n    data[2] = detail.general_profile_compatibility_flags_1 || 0;\n    data[3] = detail.general_profile_compatibility_flags_2 || 0;\n    data[4] = detail.general_profile_compatibility_flags_3 || 0;\n    data[5] = detail.general_profile_compatibility_flags_4 || 0;\n    data[6] = detail.general_constraint_indicator_flags_1 || 0;\n    data[7] = detail.general_constraint_indicator_flags_2 || 0;\n    data[8] = detail.general_constraint_indicator_flags_3 || 0;\n    data[9] = detail.general_constraint_indicator_flags_4 || 0;\n    data[10] = detail.general_constraint_indicator_flags_5 || 0;\n    data[11] = detail.general_constraint_indicator_flags_6 || 0;\n    data[12] = 0x3C;\n    data[13] = 0xF0 | ((detail.min_spatial_segmentation_idc & 0x0F00) >> 8)\n    data[14] = (detail.min_spatial_segmentation_idc & 0xFF);\n    data[15] = 0xFC | (detail.parallelismType & 0x03);\n    data[16] = 0xFC | (detail.chroma_format_idc & 0x03);\n    data[17] = 0xF8 | (detail.bit_depth_luma_minus8 & 0x07);\n    data[18] = 0xF8 | (detail.bit_depth_chroma_minus8 & 0x07);\n    data[19] = 0;\n    data[20] = 0;\n    data[21] = ((detail.constant_frame_rate & 0x03) << 6) | ((detail.num_temporal_layers & 0x07) << 3) | ((detail.temporal_id_nested ? 1 : 0) << 2) | 3;\n    data[22] = 3;\n    data[23 + 0 + 0] = 0x80 | H265_NAL_TYPE.vps;\n    data[23 + 0 + 1] = 0;\n    data[23 + 0 + 2] = 1;\n    data[23 + 0 + 3] = (vps.byteLength & 0xFF00) >> 8;\n    data[23 + 0 + 4] = (vps.byteLength & 0x00FF) >> 0;\n    data.set(vps, 23 + 0 + 5);\n    data[23 + (5 + vps.byteLength) + 0] = 0x80 | H265_NAL_TYPE.sps;\n    data[23 + (5 + vps.byteLength) + 1] = 0;\n    data[23 + (5 + vps.byteLength) + 2] = 1;\n    data[23 + (5 + vps.byteLength) + 3] = (sps.byteLength & 0xFF00) >> 8;\n    data[23 + (5 + vps.byteLength) + 4] = (sps.byteLength & 0x00FF) >> 0;\n    data.set(sps, 23 + (5 + vps.byteLength) + 5);\n    data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 0] = 0x80 | H265_NAL_TYPE.pps;\n    data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 1] = 0;\n    data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 2] = 1;\n    data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 3] = (pps.byteLength & 0xFF00) >> 8;\n    data[23 + (5 + vps.byteLength + 5 + sps.byteLength) + 4] = (pps.byteLength & 0x00FF) >> 0;\n    data.set(pps, 23 + (5 + vps.byteLength + 5 + sps.byteLength) + 5);\n    const prevData = [0x1c, 0, 0, 0, 0]\n    const newData = new Uint8Array(prevData.length + data.byteLength)\n    newData.set(prevData, 0)\n    newData.set(data, prevData.length)\n    return newData;\n}\n\n/**\n *\n * @param oneNALBuffer\n * @param isIframe\n * @returns {Uint8Array}\n */\nexport function hevcEncoderNalePacket(oneNALBuffer, isIframe) {\n    //     正常发送nal\n    // 这边增加 是否i帧， 然后前面封装了1 + 8 个字节的数据。\n    const idrBit = 0x10 | 12\n    const nIdrBit = 0x20 | 12\n    let tmp = [];\n    if (isIframe) {\n        tmp[0] = idrBit;\n    } else {\n        tmp[0] = nIdrBit;\n    }\n    tmp[1] = 1;\n    //\n    tmp[2] = 0;\n    tmp[3] = 0;\n    tmp[4] = 0;\n    // 真正开始的地方。。。\n    tmp[5] = (oneNALBuffer.byteLength >> 24) & 0xff;\n    tmp[6] = (oneNALBuffer.byteLength >> 16) & 0xff;\n    tmp[7] = (oneNALBuffer.byteLength >> 8) & 0xff;\n    tmp[8] = (oneNALBuffer.byteLength) & 0xff;\n\n    const arrayBuffer = new Uint8Array(tmp.length + oneNALBuffer.byteLength);\n    arrayBuffer.set(tmp, 0);\n    arrayBuffer.set(oneNALBuffer, tmp.length);\n    return arrayBuffer;\n}\n\nexport function getHevcSeqHeadType(nalu) {\n    return (nalu[0] & 0x7E) >> 1\n}\n\n\nexport function isHevcSEIType(type) {\n    return type === H265_NAL_TYPE.sei\n}\n\n// 32-40是VPS SPS PPS SUFFIX_SEI_NUT等\nexport function isHevcSeqHead(type) {\n    return type >= 32 && type <= 40\n}\n\nexport function isNotHevcSeqHead(type) {\n    return !isHevcSeqHead(type)\n}\n\n// 16-21是关键(I)帧\nexport function isHevcNalIFrame(type) {\n    return type >= 16 && type <= 21\n}\n\n// 0-9是P帧\nexport function isHevcNalPFrame(type) {\n    return type >= 0 && type <= 9\n}\n","function checkInt(value) {\n    return (parseInt(value) === value);\n}\n\nfunction checkInts(arrayish) {\n    if (!checkInt(arrayish.length)) { return false; }\n\n    for (var i = 0; i < arrayish.length; i++) {\n        if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction coerceArray(arg, copy) {\n\n    // ArrayBuffer view\n    if (arg.buffer && arg.name === 'Uint8Array') {\n\n        if (copy) {\n            if (arg.slice) {\n                arg = arg.slice();\n            } else {\n                arg = Array.prototype.slice.call(arg);\n            }\n        }\n\n        return arg;\n    }\n\n    // It's an array; check it is a valid representation of a byte\n    if (Array.isArray(arg)) {\n        if (!checkInts(arg)) {\n            throw new Error('Array contains invalid value: ' + arg);\n        }\n\n        return new Uint8Array(arg);\n    }\n\n    // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n    if (checkInt(arg.length) && checkInts(arg)) {\n        return new Uint8Array(arg);\n    }\n\n    throw new Error('unsupported array-like object');\n}\n\nfunction createArray(length) {\n    return new Uint8Array(length);\n}\n\nfunction copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n    if (sourceStart != null || sourceEnd != null) {\n        if (sourceArray.slice) {\n            sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n        } else {\n            sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n        }\n    }\n    targetArray.set(sourceArray, targetStart);\n}\n\n\n\nvar convertUtf8 = (function() {\n    function toBytes(text) {\n        var result = [], i = 0;\n        text = encodeURI(text);\n        while (i < text.length) {\n            var c = text.charCodeAt(i++);\n\n            // if it is a % sign, encode the following 2 bytes as a hex value\n            if (c === 37) {\n                result.push(parseInt(text.substr(i, 2), 16))\n                i += 2;\n\n                // otherwise, just the actual byte\n            } else {\n                result.push(c)\n            }\n        }\n\n        return coerceArray(result);\n    }\n\n    function fromBytes(bytes) {\n        var result = [], i = 0;\n\n        while (i < bytes.length) {\n            var c = bytes[i];\n\n            if (c < 128) {\n                result.push(String.fromCharCode(c));\n                i++;\n            } else if (c > 191 && c < 224) {\n                result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                i += 2;\n            } else {\n                result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                i += 3;\n            }\n        }\n\n        return result.join('');\n    }\n\n    return {\n        toBytes: toBytes,\n        fromBytes: fromBytes,\n    }\n})();\n\nvar convertHex = (function() {\n    function toBytes(text) {\n        var result = [];\n        for (var i = 0; i < text.length; i += 2) {\n            result.push(parseInt(text.substr(i, 2), 16));\n        }\n\n        return result;\n    }\n\n    // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n    var Hex = '0123456789abcdef';\n\n    function fromBytes(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i++) {\n            var v = bytes[i];\n            result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n        }\n        return result.join('');\n    }\n\n    return {\n        toBytes: toBytes,\n        fromBytes: fromBytes,\n    }\n})();\n\n\n// Number of rounds by keysize\nvar numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n// Round constant words\nvar rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n// S-box and Inverse S-box (S is for Substitution)\nvar S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nvar Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n// Transformations for encryption\nvar T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nvar T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nvar T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nvar T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n// Transformations for decryption\nvar T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nvar T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nvar T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nvar T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n// Transformations for decryption key expansion\nvar U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nvar U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nvar U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nvar U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\nfunction convertToInt32(bytes) {\n    var result = [];\n    for (var i = 0; i < bytes.length; i += 4) {\n        result.push(\n            (bytes[i    ] << 24) |\n            (bytes[i + 1] << 16) |\n            (bytes[i + 2] <<  8) |\n            bytes[i + 3]\n        );\n    }\n    return result;\n}\n\nvar AesJs = function(key) {\n    if (!(this instanceof AesJs)) {\n        throw Error('AES must be instanitated with `new`');\n    }\n\n    Object.defineProperty(this, 'key', {\n        value: coerceArray(key, true)\n    });\n\n    this._prepare();\n}\n\n\nAesJs.prototype._prepare = function() {\n\n    var rounds = numberOfRounds[this.key.length];\n    if (rounds == null) {\n        throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n    }\n\n    // encryption round keys\n    this._Ke = [];\n\n    // decryption round keys\n    this._Kd = [];\n\n    for (var i = 0; i <= rounds; i++) {\n        this._Ke.push([0, 0, 0, 0]);\n        this._Kd.push([0, 0, 0, 0]);\n    }\n\n    var roundKeyCount = (rounds + 1) * 4;\n    var KC = this.key.length / 4;\n\n    // convert the key into ints\n    var tk = convertToInt32(this.key);\n\n    // copy values into round key arrays\n    var index;\n    for (var i = 0; i < KC; i++) {\n        index = i >> 2;\n        this._Ke[index][i % 4] = tk[i];\n        this._Kd[rounds - index][i % 4] = tk[i];\n    }\n\n    // key expansion (fips-197 section 5.2)\n    var rconpointer = 0;\n    var t = KC, tt;\n    while (t < roundKeyCount) {\n        tt = tk[KC - 1];\n        tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n            (S[(tt >>  8) & 0xFF] << 16) ^\n            (S[ tt        & 0xFF] <<  8) ^\n            S[(tt >> 24) & 0xFF]        ^\n            (rcon[rconpointer] << 24));\n        rconpointer += 1;\n\n        // key expansion (for non-256 bit)\n        if (KC != 8) {\n            for (var i = 1; i < KC; i++) {\n                tk[i] ^= tk[i - 1];\n            }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n        } else {\n            for (var i = 1; i < (KC / 2); i++) {\n                tk[i] ^= tk[i - 1];\n            }\n            tt = tk[(KC / 2) - 1];\n\n            tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                (S[(tt >>  8) & 0xFF] <<  8) ^\n                (S[(tt >> 16) & 0xFF] << 16) ^\n                (S[(tt >> 24) & 0xFF] << 24));\n\n            for (var i = (KC / 2) + 1; i < KC; i++) {\n                tk[i] ^= tk[i - 1];\n            }\n        }\n\n        // copy values into round key arrays\n        var i = 0, r, c;\n        while (i < KC && t < roundKeyCount) {\n            r = t >> 2;\n            c = t % 4;\n            this._Ke[r][c] = tk[i];\n            this._Kd[rounds - r][c] = tk[i++];\n            t++;\n        }\n    }\n\n    // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n    for (var r = 1; r < rounds; r++) {\n        for (var c = 0; c < 4; c++) {\n            tt = this._Kd[r][c];\n            this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                U2[(tt >> 16) & 0xFF] ^\n                U3[(tt >>  8) & 0xFF] ^\n                U4[ tt        & 0xFF]);\n        }\n    }\n}\n\nAesJs.prototype.encrypt = function(plaintext) {\n    if (plaintext.length != 16) {\n        throw new Error('invalid plaintext size (must be 16 bytes)');\n    }\n\n    var rounds = this._Ke.length - 1;\n    var a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    var t = convertToInt32(plaintext);\n    for (var i = 0; i < 4; i++) {\n        t[i] ^= this._Ke[0][i];\n    }\n\n    // apply round transforms\n    for (var r = 1; r < rounds; r++) {\n        for (var i = 0; i < 4; i++) {\n            a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T4[ t[(i + 3) % 4]        & 0xff] ^\n                this._Ke[r][i]);\n        }\n        t = a.slice();\n    }\n\n    // the last round is special\n    var result = createArray(16), tt;\n    for (var i = 0; i < 4; i++) {\n        tt = this._Ke[rounds][i];\n        result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n        result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n        result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n        result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n}\n\nAesJs.prototype.decrypt = function(ciphertext) {\n    if (ciphertext.length != 16) {\n        throw new Error('invalid ciphertext size (must be 16 bytes)');\n    }\n\n    var rounds = this._Kd.length - 1;\n    var a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    var t = convertToInt32(ciphertext);\n    for (var i = 0; i < 4; i++) {\n        t[i] ^= this._Kd[0][i];\n    }\n\n    // apply round transforms\n    for (var r = 1; r < rounds; r++) {\n        for (var i = 0; i < 4; i++) {\n            a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T8[ t[(i + 1) % 4]        & 0xff] ^\n                this._Kd[r][i]);\n        }\n        t = a.slice();\n    }\n\n    // the last round is special\n    var result = createArray(16), tt;\n    for (var i = 0; i < 4; i++) {\n        tt = this._Kd[rounds][i];\n        result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n        result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n        result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n        result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n}\n\n\n/**\n *  Mode Of Operation - Electonic Codebook (ECB)\n */\nvar ModeOfOperationECB = function(key) {\n    if (!(this instanceof ModeOfOperationECB)) {\n        throw Error('AES must be instanitated with `new`');\n    }\n\n    this.description = \"Electronic Code Block\";\n    this.name = \"ecb\";\n\n    this._aes = new AesJs(key);\n}\n\nModeOfOperationECB.prototype.encrypt = function(plaintext) {\n    plaintext = coerceArray(plaintext);\n\n    if ((plaintext.length % 16) !== 0) {\n        throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n    }\n\n    var ciphertext = createArray(plaintext.length);\n    var block = createArray(16);\n\n    for (var i = 0; i < plaintext.length; i += 16) {\n        copyArray(plaintext, block, 0, i, i + 16);\n        block = this._aes.encrypt(block);\n        copyArray(block, ciphertext, i);\n    }\n\n    return ciphertext;\n}\n\nModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n    ciphertext = coerceArray(ciphertext);\n\n    if ((ciphertext.length % 16) !== 0) {\n        throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n    }\n\n    var plaintext = createArray(ciphertext.length);\n    var block = createArray(16);\n\n    for (var i = 0; i < ciphertext.length; i += 16) {\n        copyArray(ciphertext, block, 0, i, i + 16);\n        block = this._aes.decrypt(block);\n        copyArray(block, plaintext, i);\n    }\n\n    return plaintext;\n}\n\n\n/**\n *  Mode Of Operation - Cipher Block Chaining (CBC)\n */\nvar ModeOfOperationCBC = function(key, iv) {\n    if (!(this instanceof ModeOfOperationCBC)) {\n        throw Error('AES must be instanitated with `new`');\n    }\n\n    this.description = \"Cipher Block Chaining\";\n    this.name = \"cbc\";\n\n    if (!iv) {\n        iv = createArray(16);\n\n    } else if (iv.length != 16) {\n        throw new Error('invalid initialation vector size (must be 16 bytes)');\n    }\n\n    this._lastCipherblock = coerceArray(iv, true);\n\n    this._aes = new AesJs(key);\n}\n\nModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n    plaintext = coerceArray(plaintext);\n\n    if ((plaintext.length % 16) !== 0) {\n        throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n    }\n\n    var ciphertext = createArray(plaintext.length);\n    var block = createArray(16);\n\n    for (var i = 0; i < plaintext.length; i += 16) {\n        copyArray(plaintext, block, 0, i, i + 16);\n\n        for (var j = 0; j < 16; j++) {\n            block[j] ^= this._lastCipherblock[j];\n        }\n\n        this._lastCipherblock = this._aes.encrypt(block);\n        copyArray(this._lastCipherblock, ciphertext, i);\n    }\n\n    return ciphertext;\n}\n\nModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n    ciphertext = coerceArray(ciphertext);\n\n    if ((ciphertext.length % 16) !== 0) {\n        throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n    }\n\n    var plaintext = createArray(ciphertext.length);\n    var block = createArray(16);\n\n    for (var i = 0; i < ciphertext.length; i += 16) {\n        copyArray(ciphertext, block, 0, i, i + 16);\n        block = this._aes.decrypt(block);\n\n        for (var j = 0; j < 16; j++) {\n            plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n        }\n\n        copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n    }\n\n    return plaintext;\n}\n\n\n/**\n *  Mode Of Operation - Cipher Feedback (CFB)\n */\nvar ModeOfOperationCFB = function(key, iv, segmentSize) {\n    if (!(this instanceof ModeOfOperationCFB)) {\n        throw Error('AES must be instanitated with `new`');\n    }\n\n    this.description = \"Cipher Feedback\";\n    this.name = \"cfb\";\n\n    if (!iv) {\n        iv = createArray(16);\n\n    } else if (iv.length != 16) {\n        throw new Error('invalid initialation vector size (must be 16 size)');\n    }\n\n    if (!segmentSize) { segmentSize = 1; }\n\n    this.segmentSize = segmentSize;\n\n    this._shiftRegister = coerceArray(iv, true);\n\n    this._aes = new AesJs(key);\n}\n\nModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n    if ((plaintext.length % this.segmentSize) != 0) {\n        throw new Error('invalid plaintext size (must be segmentSize bytes)');\n    }\n\n    var encrypted = coerceArray(plaintext, true);\n\n    var xorSegment;\n    for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n        xorSegment = this._aes.encrypt(this._shiftRegister);\n        for (var j = 0; j < this.segmentSize; j++) {\n            encrypted[i + j] ^= xorSegment[j];\n        }\n\n        // Shift the register\n        copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n        copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n    }\n\n    return encrypted;\n}\n\nModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n    if ((ciphertext.length % this.segmentSize) != 0) {\n        throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n    }\n\n    var plaintext = coerceArray(ciphertext, true);\n\n    var xorSegment;\n    for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n        xorSegment = this._aes.encrypt(this._shiftRegister);\n\n        for (var j = 0; j < this.segmentSize; j++) {\n            plaintext[i + j] ^= xorSegment[j];\n        }\n\n        // Shift the register\n        copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n        copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n    }\n\n    return plaintext;\n}\n\n/**\n *  Mode Of Operation - Output Feedback (OFB)\n */\nvar ModeOfOperationOFB = function(key, iv) {\n    if (!(this instanceof ModeOfOperationOFB)) {\n        throw Error('AES must be instanitated with `new`');\n    }\n\n    this.description = \"Output Feedback\";\n    this.name = \"ofb\";\n\n    if (!iv) {\n        iv = createArray(16);\n\n    } else if (iv.length != 16) {\n        throw new Error('invalid initialation vector size (must be 16 bytes)');\n    }\n\n    this._lastPrecipher = coerceArray(iv, true);\n    this._lastPrecipherIndex = 16;\n\n    this._aes = new AesJs(key);\n}\n\nModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n    var encrypted = coerceArray(plaintext, true);\n\n    for (var i = 0; i < encrypted.length; i++) {\n        if (this._lastPrecipherIndex === 16) {\n            this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n            this._lastPrecipherIndex = 0;\n        }\n        encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n    }\n\n    return encrypted;\n}\n\n// Decryption is symetric\nModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n/**\n *  Counter object for CTR common mode of operation\n */\nvar Counter = function(initialValue) {\n    if (!(this instanceof Counter)) {\n        throw Error('Counter must be instanitated with `new`');\n    }\n\n    // We allow 0, but anything false-ish uses the default 1\n    if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n    if (typeof(initialValue) === 'number') {\n        this._counter = createArray(16);\n        this.setValue(initialValue);\n\n    } else {\n        this.setBytes(initialValue);\n    }\n}\n\nCounter.prototype.setValue = function(value) {\n    if (typeof(value) !== 'number' || parseInt(value) != value) {\n        throw new Error('invalid counter value (must be an integer)');\n    }\n\n    // We cannot safely handle numbers beyond the safe range for integers\n    if (value > Number.MAX_SAFE_INTEGER) {\n        throw new Error('integer value out of safe range');\n    }\n\n    for (var index = 15; index >= 0; --index) {\n        this._counter[index] = value % 256;\n        value = parseInt(value / 256);\n    }\n}\n\nCounter.prototype.setBytes = function(bytes) {\n    bytes = coerceArray(bytes, true);\n\n    if (bytes.length != 16) {\n        throw new Error('invalid counter bytes size (must be 16 bytes)');\n    }\n\n    this._counter = bytes;\n};\n\nCounter.prototype.increment = function() {\n    for (var i = 15; i >= 0; i--) {\n        if (this._counter[i] === 255) {\n            this._counter[i] = 0;\n        } else {\n            this._counter[i]++;\n            break;\n        }\n    }\n}\n\n\n/**\n *  Mode Of Operation - Counter (CTR)\n */\nvar ModeOfOperationCTR = function(key, counter) {\n    if (!(this instanceof ModeOfOperationCTR)) {\n        throw Error('AES must be instanitated with `new`');\n    }\n\n    this.description = \"Counter\";\n    this.name = \"ctr\";\n\n    if (!(counter instanceof Counter)) {\n        counter = new Counter(counter)\n    }\n\n    this._counter = counter;\n\n    this._remainingCounter = null;\n    this._remainingCounterIndex = 16;\n\n    this._aes = new AesJs(key);\n}\n\nModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n    var encrypted = coerceArray(plaintext, true);\n\n    for (var i = 0; i < encrypted.length; i++) {\n        if (this._remainingCounterIndex === 16) {\n            this._remainingCounter = this._aes.encrypt(this._counter._counter);\n            this._remainingCounterIndex = 0;\n            this._counter.increment();\n        }\n        encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n    }\n\n    return encrypted;\n}\n\n// Decryption is symetric\nModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n///////////////////////\n// Padding\n\n// See:https://tools.ietf.org/html/rfc2315\nfunction pkcs7pad(data) {\n    data = coerceArray(data, true);\n    var padder = 16 - (data.length % 16);\n    var result = createArray(data.length + padder);\n    copyArray(data, result);\n    for (var i = data.length; i < result.length; i++) {\n        result[i] = padder;\n    }\n    return result;\n}\n\nfunction pkcs7strip(data) {\n    data = coerceArray(data, true);\n    if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n    var padder = data[data.length - 1];\n    if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n    var length = data.length - padder;\n    for (var i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n            throw new Error('PKCS#7 invalid padding byte');\n        }\n    }\n\n    var result = createArray(length);\n    copyArray(data, result, 0, 0, length);\n    return result;\n}\n\n///////////////////////\n// Exporting\n\n\n// The block cipher\nconst aesjs = {\n    AES: AesJs,\n    Counter: Counter,\n\n    ModeOfOperation: {\n        ecb: ModeOfOperationECB,\n        cbc: ModeOfOperationCBC,\n        cfb: ModeOfOperationCFB,\n        ofb: ModeOfOperationOFB,\n        ctr: ModeOfOperationCTR\n    },\n\n    utils: {\n        hex: convertHex,\n        utf8: convertUtf8\n    },\n\n    padding: {\n        pkcs7: {\n            pad: pkcs7pad,\n            strip: pkcs7strip\n        }\n    },\n\n    _arrayTest: {\n        coerceArray: coerceArray,\n        createArray: createArray,\n        copyArray: copyArray,\n    }\n};\n\nexport default aesjs;\n","import ajax from './ajax';\nimport aesjs from './aes-js';\n\n\nfunction getNaluLength(data) {\n    let length = data[3] | (data[2] << 8) | (data[1] << 16) | (data[0] << 24)\n    return length;\n}\n\n// aes-256-ctr 解密\nexport function aes256ctrDecrypt(arrayBuffer, key, iv) {\n    key = new Uint8Array(key);\n    iv = new Uint8Array(iv);\n    const totalLength = arrayBuffer.byteLength;\n    let startIndex = 5;\n    while (startIndex < totalLength) {\n        let tempNaluLength = getNaluLength(arrayBuffer.slice(startIndex, startIndex + 4));\n        if (tempNaluLength > totalLength) {\n            break;\n        }\n        let naluType = arrayBuffer[startIndex + 4];\n        naluType = naluType & 0x1f;\n        if (naluType === 1 || naluType === 5) {\n            const tempNalu = arrayBuffer.slice(startIndex + 4 + 2, startIndex + 4 + tempNaluLength);\n            let aesCtr = new aesjs.ModeOfOperation.ctr(key, new aesjs.Counter(iv));\n            const decryptMsg = aesCtr.decrypt(tempNalu);\n            // release memory\n            aesCtr = null;\n            arrayBuffer.set(decryptMsg, startIndex + 4 + 2);\n        }\n        startIndex = startIndex + 4 + tempNaluLength;\n    }\n\n    return arrayBuffer;\n}\n\nexport function getM7SCryptoStreamKey(path) {\n    return new Promise((resolve, reject) => {\n        ajax.get(path).then((res) => {\n            resolve(res);\n        }).catch((e) => {\n            reject(e);\n        })\n    })\n}\n","import createWebGL from './utils/webglV2';\nimport {\n    WORKER_CMD_TYPE,\n    MEDIA_TYPE,\n    WORKER_SEND_TYPE,\n    ENCODED_VIDEO_TYPE,\n    PLAYER_PLAY_PROTOCOL,\n    PLAY_TYPE,\n    FLV_MEDIA_TYPE,\n    EVENTS,\n    EVENTS_ERROR,\n    AUDIO_ENC_TYPE,\n    VIDEO_ENC_CODE,\n    AUDIO_ENC_CODE,\n    FRAME_TYPE,\n    AVC_PACKET_TYPE,\n    FILE_SUFFIX,\n    VIDEO_ENC_TYPE_SHOW,\n    H264_NAL_TYPE,\n    H265_NAL_TYPE,\n    FETCH_ERROR,\n    DOCUMENT_ONE_SECOND_BUFFER_LENGTH,\n    WASM_DECODE_MAX_DIFF_TIMESTAMP,\n    WEBSOCKET_STATUS_CODE,\n    FRAME_TS_MAX_DIFF,\n    SIMD_H264_DECODE_MAX_WIDTH\n} from \"./constant\";\nimport {\n    calcStreamFpsByBufferList,\n    calculationRate,\n    checkNaluType,\n    formatVideoDecoderConfigure, getDefaultPlayerOptions, isEmpty, isFetchSuccess,\n    isFunction,\n    isGreenYUV,\n    now,\n    supportWritableStream\n} from \"./utils\";\nimport OPut from \"oput\";\nimport Debug from \"./utils/debug\";\nimport {isAacCodecPacket} from \"./utils/aac\";\nimport {\n    addNaleHeaderLength,\n    avcEncoderConfigurationRecord,\n    avcEncoderNalePacket, avcEncoderNalePacketNotLength,\n    getAvcSeqHeadType,\n    isAvcNaluIFrame, isHvcSEIType, isNotAvcSeqHead, isSameAvcNaluType, parseAVCDecoderConfigurationRecord\n} from \"./utils/h264\";\nimport {\n    getHevcSeqHeadType,\n    hevcEncoderConfigurationRecord,\n    hevcEncoderConfigurationRecord$2,\n    hevcEncoderNalePacket,\n    isHevcNalIFrame, isHevcSEIType, isHevcSeqHead, isNotHevcSeqHead\n} from \"./utils/h265\";\nimport {aes256ctrDecrypt} from \"./utils/crypto\";\n\nif (!Date.now) Date.now = function () {\n    return new Date().getTime();\n};\n\nexport default function (Module) {\n    let bufferList = []\n    let tempAudioBuffer = [];\n    let wcsVideoDecoder = {};\n    let abortController = new AbortController();\n    let socket = null;\n    let streamRate = null;\n    let currentStreamRate = 0;\n    let streamRateAndStatsInterval = null;\n    let input = null;\n    let videoWidth = null;\n    let videoHeight = null;\n    let hasInitVideoCodec = false;\n    let hasInitAudioCodec = false;\n    let isVideoFirstIFrame = false;\n    // let lastDecodeVideoFrameTimestamp = 0;\n    // let lastDecodeVideoFrameLocalTimestamp = 0;\n    // let lastDecodeAudioFrameTimestamp = 0;\n    // let newDecodedVideoFrameTimestamp = 0;\n    // let newDecodedVideoFrameLocalTimestamp = 0;\n    // let newDecodedAudioFrameTimestamp = 0;\n    let isStreamTimeDiffMoreThanLocalTimeDiff = false;\n    let preLoopTimestamp = null;\n    let bufferStartDts = null;\n    let bufferStartLocalTs = null;\n    let audioOutputArray = [];\n    let audioRemain = 0\n    let audioChannels = 0;\n    let preIframeTs = null;\n    let preTimestamp = null;\n    let getDefaultOpt = () => {\n        const defaultOptions = getDefaultPlayerOptions()\n        return {\n            debug: defaultOptions.debug,\n            debugLevel: defaultOptions.debugLevel,\n            debugUuid: defaultOptions.debugUuid,\n            useOffscreen: defaultOptions.useOffscreen,\n            useWCS: defaultOptions.useWCS,\n            videoBuffer: defaultOptions.videoBuffer,\n            videoBufferDelay: defaultOptions.videoBufferDelay,\n            openWebglAlignment: defaultOptions.openWebglAlignment,\n            playType: defaultOptions.playType,\n            hasAudio: defaultOptions.hasAudio,\n            hasVideo: defaultOptions.hasVideo,\n            playbackRate: 1,\n            playbackForwardMaxRateDecodeIFrame: defaultOptions.playbackForwardMaxRateDecodeIFrame,\n            playbackIsCacheBeforeDecodeForFpsRender: defaultOptions.playbackConfig.isCacheBeforeDecodeForFpsRender,\n            sampleRate: 0,\n            networkDelay: defaultOptions.networkDelay,\n            visibility: true,\n            useSIMD: defaultOptions.useSIMD,\n            isRecording: false,\n            recordType: defaultOptions.recordType,\n            isNakedFlow: defaultOptions.isNakedFlow,\n            checkFirstIFrame: defaultOptions.checkFirstIFrame,\n            audioBufferSize: 1024,\n            isCrypto: defaultOptions.isCrypto,\n            cryptoKey: defaultOptions.cryptoKey,\n            cryptoIV: defaultOptions.cryptoIV,\n        }\n    }\n    if (\"VideoEncoder\" in self) {\n        wcsVideoDecoder = {\n            hasInit: false,\n            isEmitInfo: false,\n            offscreenCanvas: null,\n            offscreenCanvasCtx: null,\n            decoder: new VideoDecoder({\n                output: function (videoFrame) {\n                    if (!wcsVideoDecoder.isEmitInfo) {\n                        decoder.debug.log('worker', 'Webcodecs Video Decoder initSize');\n                        postMessage({\n                            cmd: WORKER_CMD_TYPE.initVideo,\n                            w: videoFrame.codedWidth,\n                            h: videoFrame.codedHeight\n                        })\n                        wcsVideoDecoder.isEmitInfo = true;\n                        wcsVideoDecoder.offscreenCanvas = new OffscreenCanvas(videoFrame.codedWidth, videoFrame.codedHeight);\n                        wcsVideoDecoder.offscreenCanvasCtx = wcsVideoDecoder.offscreenCanvas.getContext(\"2d\");\n                    }\n\n                    if (isFunction(videoFrame.createImageBitmap)) {\n                        videoFrame.createImageBitmap().then((image) => {\n                            wcsVideoDecoder.offscreenCanvasCtx.drawImage(image, 0, 0, videoFrame.codedWidth, videoFrame.codedHeight);\n                            let image_bitmap = wcsVideoDecoder.offscreenCanvas.transferToImageBitmap();\n                            postMessage({\n                                cmd: WORKER_CMD_TYPE.render,\n                                buffer: image_bitmap,\n                                delay: decoder.delay,\n                                ts: 0\n                            }, [image_bitmap])\n                            setTimeout(function () {\n                                if (videoFrame.close) {\n                                    videoFrame.close()\n                                } else {\n                                    videoFrame.destroy()\n                                }\n                            }, 100)\n                        })\n                    } else {\n                        wcsVideoDecoder.offscreenCanvasCtx.drawImage(videoFrame, 0, 0, videoFrame.codedWidth, videoFrame.codedHeight);\n                        let image_bitmap = wcsVideoDecoder.offscreenCanvas.transferToImageBitmap();\n                        postMessage({\n                            cmd: WORKER_CMD_TYPE.render,\n                            buffer: image_bitmap,\n                            delay: decoder.delay,\n                            ts: 0\n                        }, [image_bitmap])\n\n                        setTimeout(function () {\n                            if (videoFrame.close) {\n                                videoFrame.close()\n                            } else {\n                                videoFrame.destroy()\n                            }\n                        }, 100)\n                    }\n\n                },\n                error: function (error) {\n                    decoder.debug.error('worker', 'VideoDecoder error', error);\n                }\n            }),\n            decode: function (payload, ts, cts) {\n                const isIFrame = payload[0] >> 4 === 1;\n                if (!wcsVideoDecoder.hasInit) {\n                    if (isIFrame && payload[1] === 0) {\n                        const videoCodec = (payload[0] & 0x0F);\n                        postMessage({cmd: WORKER_CMD_TYPE.videoCode, code: videoCodec})\n                        const extraData = payload.slice(5)\n                        const config = formatVideoDecoderConfigure(extraData);\n                        postMessage({\n                            cmd: WORKER_CMD_TYPE.videoCodec,\n                            buffer: payload,\n                            codecId: videoCodec\n                        }, [payload.buffer])\n                        wcsVideoDecoder.decoder.configure(config);\n                        wcsVideoDecoder.hasInit = true;\n                    }\n                } else {\n                    const chunk = new EncodedVideoChunk({\n                        data: payload.slice(5),\n                        timestamp: ts,\n                        type: isIFrame ? ENCODED_VIDEO_TYPE.key : ENCODED_VIDEO_TYPE.delta\n                    })\n                    wcsVideoDecoder.decoder.decode(chunk);\n                }\n            },\n            reset() {\n                wcsVideoDecoder.hasInit = false;\n                wcsVideoDecoder.isEmitInfo = false;\n                wcsVideoDecoder.offscreenCanvas = null;\n                wcsVideoDecoder.offscreenCanvasCtx = null;\n            }\n        }\n    }\n    let abort = function () {\n        if (abortController) {\n            abortController.abort();\n            abortController = null;\n        }\n    }\n    let nakedFlowDemuxer = {\n        init() {\n            nakedFlowDemuxer.lastBuf = null;\n            nakedFlowDemuxer.vps = null;\n            nakedFlowDemuxer.sps = null;\n            nakedFlowDemuxer.pps = null;\n            nakedFlowDemuxer.streamType = null;\n            nakedFlowDemuxer.localDts = 0;\n            nakedFlowDemuxer.isSendSeqHeader = false;\n        },\n        destroy() {\n            nakedFlowDemuxer.lastBuf = null;\n            nakedFlowDemuxer.vps = null;\n            nakedFlowDemuxer.sps = null;\n            nakedFlowDemuxer.pps = null;\n            nakedFlowDemuxer.streamType = null;\n            nakedFlowDemuxer.localDts = 0;\n            nakedFlowDemuxer.isSendSeqHeader = false;\n        },\n        //\n        dispatch(data) {\n            const uint8Array = new Uint8Array(data);\n            // decoder.debug.log('worker', 'nakedFlowDemuxer dispatch', uint8Array.byteLength);\n            nakedFlowDemuxer.extractNALu$2(uint8Array);\n            // nakedFlowDemuxer.handleNALu(uint8Array);\n        },\n\n        getNaluDts() {\n            let resul = nakedFlowDemuxer.localDts;\n            nakedFlowDemuxer.localDts = nakedFlowDemuxer.localDts + (1000 / 25);\n            return resul;\n        },\n\n        getNaluAudioDts() {\n            const audioContextSampleRate = decoder._opt.sampleRate;\n            const audioBufferSize = decoder._opt.audioBufferSize;\n            return nakedFlowDemuxer.localDts + parseInt((audioBufferSize / audioContextSampleRate) * 1000);\n        },\n\n        extractNALu(buffer) {\n            let i = 0,\n                length = buffer.byteLength,\n                value,\n                state = 0,\n                result = [],\n                lastIndex;\n\n            while (i < length) {\n                value = buffer[i++];\n                // Annex-B格式使用start code进行分割，start code为0x000001或0x00000001，SPS/PPS作为一般NALU单元以start code作为分隔符的方式放在文件或者直播流的头部。\n                // finding 3 or 4-byte start codes (00 00 01 OR 00 00 00 01)\n                switch (state) {\n                    case 0:\n                        if (value === 0) {\n                            state = 1;\n                        }\n                        break;\n                    case 1:\n                        if (value === 0) {\n                            state = 2;\n                        } else {\n                            state = 0;\n                        }\n                        break;\n                    case 2:\n                    case 3:\n                        if (value === 0) {\n                            state = 3;\n                        } else if (value === 1 && i < length) {\n                            if (lastIndex) {\n                                result.push(buffer.subarray(lastIndex, i - state - 1));\n                            }\n                            lastIndex = i;\n                            state = 0;\n                        } else {\n                            state = 0;\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            if (lastIndex) {\n                result.push(buffer.subarray(lastIndex, length));\n            }\n            return result;\n        },\n\n        extractNALu$2(buffer) {\n            let typedArray = null;\n            if (!buffer || buffer.byteLength < 1) return;\n            if (nakedFlowDemuxer.lastBuf) {\n                typedArray = new Uint8Array(buffer.byteLength + nakedFlowDemuxer.lastBuf.length);\n                typedArray.set(nakedFlowDemuxer.lastBuf);\n                typedArray.set(new Uint8Array(buffer), nakedFlowDemuxer.lastBuf.length);\n            } else {\n                typedArray = new Uint8Array(buffer);\n            }\n            let lastNalEndPos = 0;\n            let b1 = -1; // byte before one\n            let b2 = -2; // byte before two\n            const nalStartPos = new Array();\n            for (let i = 0; i < typedArray.length; i += 2) {\n                const b_0 = typedArray[i];\n                const b_1 = typedArray[i + 1];\n                if (b1 == 0 && b_0 == 0 && b_1 == 0) {\n                    nalStartPos.push(i - 1);\n                } else if (b_1 == 1 && b_0 == 0 && b1 == 0 && b2 == 0) {\n                    nalStartPos.push(i - 2);\n                }\n                b2 = b_0;\n                b1 = b_1;\n            }\n            if (nalStartPos.length > 1) {\n                for (let i = 0; i < nalStartPos.length - 1; ++i) {\n                    const naluItem = typedArray.subarray(nalStartPos[i], nalStartPos[i + 1] + 1);\n                    nakedFlowDemuxer.handleNALu(naluItem);\n                    //console.log('nakedFlowDemuxer.lastBuf nalType', nakedFlowDemuxer.lastBuf.byteLength);\n                    lastNalEndPos = nalStartPos[i + 1];\n                }\n            } else {\n                lastNalEndPos = nalStartPos[0];\n            }\n            if (lastNalEndPos != 0 && lastNalEndPos < typedArray.length) {\n                nakedFlowDemuxer.lastBuf = typedArray.subarray(lastNalEndPos);\n            } else {\n                if (!!!nakedFlowDemuxer.lastBuf) {\n                    nakedFlowDemuxer.lastBuf = typedArray;\n                }\n                const _newBuf = new Uint8Array(nakedFlowDemuxer.lastBuf.length + buffer.byteLength);\n                _newBuf.set(nakedFlowDemuxer.lastBuf);\n                _newBuf.set(new Uint8Array(buffer), nakedFlowDemuxer.lastBuf.length);\n                nakedFlowDemuxer.lastBuf = _newBuf;\n            }\n\n        },\n\n        handleNALu(nalu) {\n            if (nalu.length <= 4) {\n                decoder.debug.error('worker', 'handleNALu', 'nalu.length <= 4');\n                return;\n            }\n            // 0001 去掉前4个字节（start code）\n            nalu = nalu.slice(4);\n            nakedFlowDemuxer.handleVideoNalu(nalu);\n        },\n\n\n        handleVideoNalu(nalu) {\n            // decoder.debug.log('worker', 'handleVideoNalu', nalu);\n            if (!nakedFlowDemuxer.streamType) {\n                nakedFlowDemuxer.streamType = checkNaluType(nalu);\n            }\n\n            if (nakedFlowDemuxer.streamType === VIDEO_ENC_TYPE_SHOW.h264) {\n                // const nalType = getAvcSeqHeadType(nalu);\n                // if (nalType === H264_NAL_TYPE.pps) {\n                //     nakedFlowDemuxer.extractH264PPS(nalu);\n                // } else {\n                //     nakedFlowDemuxer.handleVideoH264Nalu(nalu);\n                // }\n                const tempNalu = nakedFlowDemuxer.handleAddNaluStartCode(nalu);\n                const naluList = nakedFlowDemuxer.extractNALu(tempNalu);\n                if (naluList.length === 0) {\n                    decoder.debug.warn('worker', 'handleVideoNalu', 'naluList.length === 0');\n                    return;\n                }\n\n                const newNaluList = [];\n                naluList.forEach((naluItem) => {\n                    const nalType = getAvcSeqHeadType(naluItem);\n                    if (nalType === H264_NAL_TYPE.pps || nalType === H264_NAL_TYPE.sps) {\n                        nakedFlowDemuxer.handleVideoH264Nalu(naluItem);\n                    } else {\n                        if (isNotAvcSeqHead(nalType)) {\n                            newNaluList.push(naluItem);\n                        }\n                    }\n                })\n\n                if (newNaluList.length === 1) {\n                    nakedFlowDemuxer.handleVideoH264Nalu(newNaluList[0]);\n                } else {\n                    const isSameNaluType = isSameAvcNaluType(newNaluList);\n                    if (isSameNaluType) {\n                        const naluType = getAvcSeqHeadType(newNaluList[0]);\n                        const isIFrame = isAvcNaluIFrame(naluType);\n                        nakedFlowDemuxer.handleVideoH264NaluList(newNaluList, isIFrame, naluType);\n                    } else {\n                        newNaluList.forEach((naluItem) => {\n                            nakedFlowDemuxer.handleVideoH264Nalu(naluItem);\n                        })\n                    }\n                }\n            } else if (nakedFlowDemuxer.streamType === VIDEO_ENC_TYPE_SHOW.h265) {\n                const naluType = getHevcSeqHeadType(nalu);\n                if (naluType === H265_NAL_TYPE.pps) {\n                    nakedFlowDemuxer.extractH265PPS(nalu);\n                } else {\n                    nakedFlowDemuxer.handleVideoH265Nalu(nalu);\n                }\n\n            }\n        },\n\n        extractH264PPS(nalu) {\n            const tempNalu = nakedFlowDemuxer.handleAddNaluStartCode(nalu);\n            const naluList = nakedFlowDemuxer.extractNALu(tempNalu);\n            naluList.forEach((naluItem) => {\n                const nalType = getAvcSeqHeadType(naluItem);\n                if (isHvcSEIType(nalType)) {\n                    nakedFlowDemuxer.extractH264SEI(naluItem);\n                } else {\n                    nakedFlowDemuxer.handleVideoH264Nalu(naluItem);\n                }\n\n            })\n        },\n\n        extractH265PPS(nalu) {\n            const tempNalu = nakedFlowDemuxer.handleAddNaluStartCode(nalu);\n            const naluList = nakedFlowDemuxer.extractNALu(tempNalu);\n            naluList.forEach((naluItem) => {\n                const nalType = getHevcSeqHeadType(naluItem);\n                if (isHevcSEIType(nalType)) {\n                    nakedFlowDemuxer.extractH265SEI(naluItem);\n                } else {\n                    nakedFlowDemuxer.handleVideoH265Nalu(naluItem);\n                }\n\n            })\n        },\n        extractH264SEI(nalu) {\n            const tempNalu = nakedFlowDemuxer.handleAddNaluStartCode(nalu);\n            const naluList = nakedFlowDemuxer.extractNALu(tempNalu);\n            naluList.forEach((naluItem) => {\n                nakedFlowDemuxer.handleVideoH264Nalu(naluItem);\n            })\n        },\n\n        extractH265SEI(nalu) {\n            const tempNalu = nakedFlowDemuxer.handleAddNaluStartCode(nalu);\n            const naluList = nakedFlowDemuxer.extractNALu(tempNalu);\n            //console.log('extractH265SEI', naluList);\n            naluList.forEach((naluItem) => {\n                nakedFlowDemuxer.handleVideoH265Nalu(naluItem);\n            })\n        },\n\n        handleAddNaluStartCode(nalu) {\n            const prefix = [0, 0, 0, 1];\n            const newNalu = new Uint8Array(nalu.length + prefix.length);\n            newNalu.set(prefix);\n            newNalu.set(nalu, prefix.length);\n            return newNalu;\n        },\n\n        handleVideoH264Nalu(nalu) {\n            const nalType = getAvcSeqHeadType(nalu);\n            // decoder.debug.log('worker', `handleVideoH264Nalu nalType is ${nalu[0]} , nalu[0] is ${nalType}`);\n            switch (nalType) {\n                case H264_NAL_TYPE.sps:\n                    nakedFlowDemuxer.sps = nalu;\n                    // console.log('handleVideoH264Nalu sps', nalu);\n                    break;\n                case H264_NAL_TYPE.pps:\n                    nakedFlowDemuxer.pps = nalu;\n                    // console.log('handleVideoH264Nalu pps', nalu);\n                    break;\n                default:\n                    break;\n            }\n            if (!nakedFlowDemuxer.isSendSeqHeader) {\n                if (nakedFlowDemuxer.sps && nakedFlowDemuxer.pps) {\n                    nakedFlowDemuxer.isSendSeqHeader = true;\n                    const seqHeader = avcEncoderConfigurationRecord({\n                        sps: nakedFlowDemuxer.sps,\n                        pps: nakedFlowDemuxer.pps\n                    });\n                    // console.log('handleVideoH264Nalu seqHeader', seqHeader);\n                    // decoder.decodeVideo(seqHeader, 0, true, 0);\n                    decoder.decode(seqHeader, {\n                        type: MEDIA_TYPE.video,\n                        ts: 0,\n                        isIFrame: true,\n                        cts: 0\n                    });\n                }\n            } else {\n                if (isNotAvcSeqHead(nalType)) {\n                    const isIFrame = isAvcNaluIFrame(nalType);\n                    const dts = nakedFlowDemuxer.getNaluDts();\n                    if (isIFrame) {\n                        decoder.calcIframeIntervalTimestamp(dts)\n                    }\n                    decoder.calcNetworkDelay(dts);\n                    const packet = avcEncoderNalePacket(nalu, isIFrame);\n                    decoder.decode(packet, {\n                        type: MEDIA_TYPE.video,\n                        ts: dts,\n                        isIFrame: isIFrame,\n                        cts: 0\n                    });\n                    // decoder.decodeVideo(packet, dts, isIFrame, 0);\n\n                } else {\n                    decoder.debug.warn('work', `handleVideoH264Nalu Avc Seq Head is ${nalType}`);\n                }\n                // console.log('handleVideoH264Nalu packet', packet);\n            }\n        },\n\n        handleVideoH264NaluList(naluList, isIFrame, naluType) {\n            if (nakedFlowDemuxer.isSendSeqHeader) {\n                const dts = nakedFlowDemuxer.getNaluDts();\n                decoder.calcNetworkDelay(dts);\n                const newNalu = naluList.reduce((pre, cur) => {\n                    const nalu2 = addNaleHeaderLength(pre);\n                    const nalu3 = addNaleHeaderLength(cur);\n                    const nalu4 = new Uint8Array(nalu2.byteLength + nalu3.byteLength);\n                    nalu4.set(nalu2, 0);\n                    nalu4.set(nalu3, nalu2.byteLength);\n                    return nalu4;\n                })\n                const packet = avcEncoderNalePacketNotLength(newNalu, isIFrame);\n                decoder.decode(packet, {\n                    type: MEDIA_TYPE.video,\n                    ts: dts,\n                    isIFrame: isIFrame,\n                    cts: 0\n                });\n                decoder.debug.log('worker', `handleVideoH264NaluList list size is ${naluList.length} package length is ${packet.byteLength} isIFrame is ${isIFrame},nalu type is ${naluType}, dts is ${dts}`);\n\n            } else {\n                decoder.debug.warn('worker', 'handleVideoH264NaluList isSendSeqHeader is false')\n            }\n        },\n\n        handleVideoH265Nalu(nalu) {\n            const nalType = getHevcSeqHeadType(nalu);\n            // decoder.debug.log('worker', `handleVideoH265Nalu nalType is ${nalType} , isHevcNalIFrame ${isHevcNalIFrame(nalType)} ,nalu[0] is ${nalu[0]} ,nalu.bytelength is ${nalu.byteLength}`);\n            switch (nalType) {\n                case H265_NAL_TYPE.vps:\n                    nakedFlowDemuxer.vps = nalu;\n                    // console.log('handleVideoH265Nalu vps', nalu);\n                    break;\n                case H265_NAL_TYPE.sps:\n                    nakedFlowDemuxer.sps = nalu;\n                    // console.log('handleVideoH265Nalu sps', nalu);\n                    break;\n                case H265_NAL_TYPE.pps:\n                    nakedFlowDemuxer.pps = nalu;\n                    // console.log('handleVideoH265Nalu pps', nalu);\n                    break;\n                default:\n                    break;\n            }\n            if (!nakedFlowDemuxer.isSendSeqHeader) {\n                if (nakedFlowDemuxer.vps && nakedFlowDemuxer.sps && nakedFlowDemuxer.pps) {\n                    nakedFlowDemuxer.isSendSeqHeader = true;\n                    const seqHeader = hevcEncoderConfigurationRecord$2({\n                        vps: nakedFlowDemuxer.vps,\n                        sps: nakedFlowDemuxer.sps,\n                        pps: nakedFlowDemuxer.pps\n                    });\n                    // console.log('handleVideoH265Nalu seqHeader', seqHeader, seqHeader.byteLength);\n                    // decoder.decodeVideo(seqHeader, 0, true, 0);\n                    decoder.decode(seqHeader, {\n                        type: MEDIA_TYPE.video,\n                        ts: 0,\n                        isIFrame: true,\n                        cts: 0\n                    });\n                }\n            } else {\n                if (isNotHevcSeqHead(nalType)) {\n                    const isIFrame = isHevcNalIFrame(nalType);\n                    const dts = nakedFlowDemuxer.getNaluDts();\n                    decoder.calcNetworkDelay(dts);\n                    const packet = hevcEncoderNalePacket(nalu, isIFrame);\n                    if (isIFrame) {\n                        decoder.calcIframeIntervalTimestamp(dts)\n                    }\n                    // console.log('handleVideoH265Nalu packet', nalu, packet.byteLength, dts, isIFrame);\n                    // decoder.decodeVideo(packet, dts, isIFrame, 0);\n                    decoder.decode(packet, {\n                        type: MEDIA_TYPE.video,\n                        ts: dts,\n                        isIFrame: isIFrame,\n                        cts: 0\n                    });\n                } else {\n                    decoder.debug.warn('work', `handleVideoH265Nalu HevcSeqHead is ${nalType}`);\n                }\n            }\n        }\n    }\n    let decoder = {\n        isPlayer: true,\n        isPushDropping: false,\n        _opt: getDefaultOpt(),\n        startStreamRateAndStatsInterval: function () {\n            // decoder.debug.log('worker', 'startStreamRateAndStatsInterval');\n            decoder.stopStreamRateAndStatsInterval();\n            streamRateAndStatsInterval = setInterval(() => {\n                streamRate && streamRate(0);\n                const streamStats = JSON.stringify({\n                    demuxBufferDelay: decoder.getVideoBufferLength(),\n                    audioDemuxBufferDelay: decoder.getAudioBufferLength(),\n                    flvBufferByteLength: decoder.getFlvBufferLength(),\n                    netBuf: decoder.networkDelay || 0,\n                    pushLatestDelay: decoder.pushLatestDelay || 0,\n                    isDropping: decoder.dropping === true || decoder.isPushDropping === true,\n                    isStreamTsMoreThanLocal: isStreamTimeDiffMoreThanLocalTimeDiff\n                })\n                postMessage({\n                    cmd: WORKER_CMD_TYPE.workerFetch,\n                    type: EVENTS.streamStats,\n                    value: streamStats\n                })\n            }, 1000)\n        },\n        stopStreamRateAndStatsInterval: function () {\n            // decoder.debug.log('worker', `stopStreamRateAndStatsInterval`);\n            if (streamRateAndStatsInterval) {\n                clearInterval(streamRateAndStatsInterval);\n                streamRateAndStatsInterval = null;\n            }\n        },\n        useOffscreen: function () {\n            return decoder._opt.useOffscreen && typeof OffscreenCanvas != 'undefined';\n        },\n        getDelay: function (timestamp) {\n            if (!timestamp || (decoder._opt.hasVideo && !isVideoFirstIFrame)) {\n                return -1\n            }\n            if (decoder.preDelayTimestamp && decoder.preDelayTimestamp > timestamp) {\n                if (decoder.preDelayTimestamp - timestamp > 1000) {\n                    decoder.debug.warn('worker', `getDelay() and preDelayTimestamp is ${decoder.preDelayTimestamp} > timestamp is ${timestamp} more than ${decoder.preDelayTimestamp - timestamp}ms`);\n                }\n                decoder.preDelayTimestamp = timestamp;\n                return decoder.delay;\n            }\n\n            if (!decoder.firstTimestamp) {\n                decoder.firstTimestamp = timestamp\n                decoder.startTimestamp = Date.now()\n                decoder.delay = -1;\n            } else {\n                if (timestamp) {\n                    const localTimestamp = (Date.now() - decoder.startTimestamp);\n                    const timeTimestamp = (timestamp - decoder.firstTimestamp);\n                    if (localTimestamp >= timeTimestamp) {\n                        isStreamTimeDiffMoreThanLocalTimeDiff = false;\n                        decoder.delay = localTimestamp - timeTimestamp;\n                    } else {\n                        // if stream ts more than local ts, support stream rate is more than 1 rate\n                        isStreamTimeDiffMoreThanLocalTimeDiff = true;\n                        decoder.delay = timeTimestamp - localTimestamp;\n                    }\n                }\n            }\n            decoder.preDelayTimestamp = timestamp;\n            return decoder.delay\n        },\n        getDelayNotUpdateDelay: function (timestamp) {\n            if (!timestamp || (decoder._opt.hasVideo && !isVideoFirstIFrame)) {\n                return -1\n            }\n\n            if (decoder.preDelayTimestamp && (decoder.preDelayTimestamp - timestamp > 1000)) {\n                decoder.debug.warn('worker', `getDelayNotUpdateDelay and preDelayTimestamp is ${decoder.preDelayTimestamp} > timestamp is ${timestamp} more than ${decoder.preDelayTimestamp - timestamp}ms`);\n                return -1;\n            }\n\n            if (!decoder.firstTimestamp) {\n                return -1;\n            } else {\n                let delay = -1;\n                if (timestamp) {\n                    const localTimestamp = (Date.now() - decoder.startTimestamp);\n                    const timeTimestamp = (timestamp - decoder.firstTimestamp);\n                    if (localTimestamp >= timeTimestamp) {\n                        isStreamTimeDiffMoreThanLocalTimeDiff = false;\n                        delay = localTimestamp - timeTimestamp;\n                    } else {\n                        isStreamTimeDiffMoreThanLocalTimeDiff = true;\n                        delay = timeTimestamp - localTimestamp;\n                    }\n                }\n\n                return delay;\n            }\n        },\n        resetDelay: function () {\n            decoder.firstTimestamp = null;\n            decoder.startTimestamp = null;\n            decoder.delay = -1;\n        },\n        resetAllDelay: function () {\n            decoder.resetDelay();\n            decoder.preDelayTimestamp = null;\n        },\n        doDecode: function (data) {\n            if (decoder._opt.useWCS && decoder.useOffscreen() && data.type === MEDIA_TYPE.video && wcsVideoDecoder.decode) {\n                wcsVideoDecoder.decode(data.payload, data.ts, data.cts)\n            } else {\n                data.decoder.decode(data.payload, data.ts, data.isIFrame, data.cts)\n            }\n        },\n        init: function () {\n            decoder.debug.log('worker', 'init and opt is', decoder._opt);\n            const isPlayer = decoder._opt.playType === PLAY_TYPE.player;\n            nakedFlowDemuxer.init();\n            decoder.isPlayer = isPlayer;\n            // player || (playback && not cache before decode for fps render)\n            if (!decoder.isPlaybackCacheBeforeDecodeForFpsRender()) {\n                // default loop\n                const loop = () => {\n                    let data = null;\n                    if (bufferList.length) {\n                        if (decoder.isPushDropping) {\n                            decoder.debug.warn('worker', `loop() isPushDropping is true and bufferList length is ${this.bufferList.length}`);\n                            return;\n                        }\n\n                        if (decoder.dropping) {\n                            // // dropping\n                            data = bufferList.shift();\n                            decoder.debug.warn('worker', `loop() dropBuffer is dropping and isIFrame ${data.isIFrame} and delay is ${decoder.delay} and bufferlist is ${bufferList.length}`);\n                            //\n                            while (!data.isIFrame && bufferList.length) {\n                                // decoder.debug.log('worker', 'loop is dropping = true, isIFrame is', data.isIFrame);\n                                // dropping\n                                data = bufferList.shift();\n                            }\n                            const tempDelay = decoder.getDelayNotUpdateDelay(data.ts);\n                            if (data.isIFrame && tempDelay <= decoder.getNotDroppingDelayTs()) {\n                                decoder.debug.log('worker', 'loop() is dropping = false, is iFrame');\n                                decoder.dropping = false;\n                                decoder.doDecode(data);\n                            }\n                        } else {\n                            data = bufferList[0]\n                            if (decoder.getDelay(data.ts) === -1 || !decoder.isPlayer) {\n                                if (decoder.isPlayer) {\n                                    decoder.debug.log('worker', 'loop() common dumex delay is -1 ,data.ts is', data.ts);\n                                }\n                                bufferList.shift()\n                                decoder.doDecode(data);\n                            } else if ((decoder.delay > (decoder._opt.videoBuffer + decoder._opt.videoBufferDelay)) && isPlayer) {\n                                if (decoder.hasIframeInBufferList()) {\n                                    decoder.debug.log('worker', `delay is ${decoder.delay}, set dropping is true`);\n                                    decoder.resetAllDelay();\n                                    decoder.dropping = true\n                                } else {\n                                    bufferList.shift()\n                                    decoder.doDecode(data);\n                                }\n                            } else {\n                                // 持续解码\n                                while (bufferList.length) {\n                                    data = bufferList[0]\n                                    if (decoder.getDelay(data.ts) > decoder._opt.videoBuffer) {\n                                        bufferList.shift()\n                                        decoder.doDecode(data);\n                                    } else {\n                                        if (decoder.delay < 0) {\n                                            decoder.debug.warn('worker', `loop() do not decode and delay is ${decoder.delay}, bufferList is ${bufferList.length}`);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        if (decoder.delay !== -1) {\n                            decoder.debug.log('worker', 'loop() bufferList is empty and reset delay');\n                        }\n                        decoder.resetAllDelay()\n                    }\n                }\n                decoder.stopId = setInterval(() => {\n                    let nowTime = new Date().getTime()\n                    if (!preLoopTimestamp) {\n                        preLoopTimestamp = nowTime;\n                    }\n                    const diffTime = nowTime - preLoopTimestamp;\n                    if (diffTime > 100) {\n                        decoder.debug.warn('worker', `loop demux diff time is ${diffTime}`);\n                    }\n                    loop();\n                    preLoopTimestamp = new Date().getTime();\n                }, 10);\n            } else {\n                decoder.debug.log('worker', 'playback and playbackIsCacheBeforeDecodeForFpsRender is true');\n            }\n            // if not check first frame is iframe, will set isVideoFirstIFrame = true\n            if (!decoder._opt.checkFirstIFrame) {\n                isVideoFirstIFrame = true;\n            }\n        },\n        playbackCacheLoop: function () {\n\n            if (decoder.stopId) {\n                clearInterval(decoder.stopId);\n                decoder.stopId = null;\n            }\n\n            const loop = () => {\n                let data = null;\n                if (bufferList.length) {\n                    data = bufferList.shift();\n                    decoder.doDecode(data);\n                }\n            }\n\n            loop();\n\n            const fragDuration = Math.ceil(1000 / (decoder.streamFps * decoder._opt.playbackRate));\n            decoder.debug.log('worker', `playbackCacheLoop fragDuration is ${fragDuration}, streamFps is ${decoder.streamFps}, playbackRate is ${decoder._opt.playbackRate}`);\n            decoder.stopId = setInterval(loop, fragDuration);\n        },\n        close: function () {\n            decoder.debug.log('worker', 'close');\n            decoder.stopStreamRateAndStatsInterval();\n            clearInterval(decoder.stopId);\n            decoder.stopId = null;\n            audioDecoder.clear && audioDecoder.clear();\n            videoDecoder.clear && videoDecoder.clear();\n            audioDecoder = null;\n            videoDecoder = null;\n            streamRate = null;\n            currentStreamRate = 0;\n            preLoopTimestamp = null;\n            isStreamTimeDiffMoreThanLocalTimeDiff = false;\n            // lastDecodeVideoFrameTimestamp = 0;\n            // lastDecodeVideoFrameLocalTimestamp = 0;\n            // lastDecodeAudioFrameTimestamp = 0;\n            // newDecodedVideoFrameTimestamp = 0;\n            // newDecodedVideoFrameLocalTimestamp = 0;\n            // newDecodedAudioFrameTimestamp = 0;\n            wcsVideoDecoder.reset && wcsVideoDecoder.reset();\n            decoder.firstTimestamp = null;\n            decoder.startTimestamp = null;\n            decoder.networkDelay = 0;\n            decoder.streamFps = null; // audio + video all fps\n            decoder.streamAudioFps = null; //\n            decoder.streamVideoFps = null;\n            decoder.delay = -1;\n            decoder.pushLatestDelay = -1;\n            decoder.preDelayTimestamp = null;\n            decoder.dropping = false;\n            decoder.isPushDropping = false;\n            decoder.isPlayer = true;\n            decoder._opt = getDefaultOpt();\n            if (decoder.webglObj) {\n                decoder.webglObj.destroy();\n                decoder.offscreenCanvas = null;\n                decoder.offscreenCanvasGL = null;\n                decoder.offscreenCanvasCtx = null;\n            }\n            bufferList = [];\n            tempAudioBuffer = [];\n            abort();\n            input = null;\n            if (socket) {\n                socket.close();\n                socket = null;\n            }\n            videoWidth = null;\n            videoHeight = null;\n            hasInitVideoCodec = false;\n            hasInitAudioCodec = false;\n            isVideoFirstIFrame = false;\n            audioOutputArray = [];\n            audioRemain = 0\n            audioChannels = 0;\n            bufferStartDts = null;\n            bufferStartLocalTs = null;\n            preIframeTs = null;\n            preTimestamp = null;\n            nakedFlowDemuxer.destroy();\n            postMessage({\n                cmd: WORKER_CMD_TYPE.closeEnd\n            })\n        },\n        pushBuffer: function (bufferData, options) {\n            if (options.type === MEDIA_TYPE.audio && isAacCodecPacket(bufferData)) {\n                decoder.decodeAudio(bufferData, options.ts);\n                return;\n            }\n\n            if (decoder.isPlayer\n                && preTimestamp > 0\n                && options.type === MEDIA_TYPE.video\n                && options.ts < preTimestamp\n                && preTimestamp - options.ts > FRAME_TS_MAX_DIFF) {\n                decoder.debug.warn('worker', `pushBuffer, preTimestamp is ${preTimestamp}, options.ts is ${options.ts}, diff is ${preTimestamp - options.ts} more than ${FRAME_TS_MAX_DIFF}, resetAllDelay`);\n                decoder.resetAllDelay();\n            }\n\n            if (decoder.isPlayer && options.ts <= preTimestamp && preTimestamp > 0 && options.type === MEDIA_TYPE.video) {\n                decoder.debug.warn('worker', `pushBuffer, options.ts is ${options.ts} less than (or equal) preTimestamp is ${preTimestamp} and type is ${options.type}`);\n            }\n\n            // decoder.debug.error('worker', `pushBuffer and type is ${options.type}, isIframe is ${options.isIFrame}, ts is ${options.ts}`);\n\n            if (decoder.isPlayer && isVideoFirstIFrame) {\n                const maxDelay = decoder._opt.videoBuffer + decoder._opt.videoBufferDelay\n                const pushLatestDelay = decoder.getDelayNotUpdateDelay(options.ts)\n                // update push latest delay\n                decoder.pushLatestDelay = pushLatestDelay;\n                if (pushLatestDelay > maxDelay && decoder.delay < maxDelay && decoder.delay > 0) {\n                    if (decoder.hasIframeInBufferList() && decoder.isPushDropping === false) {\n                        decoder.debug.log('worker', `pushBuffer, pushLatestDelay is ${pushLatestDelay} more than ${maxDelay} and decoder.delay is ${decoder.delay} and has iIframe and next decoder.dropBuffer$2()`);\n                        decoder.dropBuffer$2();\n                    }\n                }\n            }\n            if (options.type === MEDIA_TYPE.video) {\n                preTimestamp = options.ts;\n            }\n            // 音频\n            if (options.type === MEDIA_TYPE.audio) {\n                bufferList.push({\n                    ts: options.ts,\n                    payload: bufferData,\n                    decoder: {\n                        decode: decoder.decodeAudio\n                    },\n                    type: MEDIA_TYPE.audio,\n                    isIFrame: false\n                })\n            } else if (options.type === MEDIA_TYPE.video) {\n                bufferList.push({\n                    ts: options.ts,\n                    cts: options.cts,\n                    payload: bufferData,\n                    decoder: {\n                        decode: decoder.decodeVideo\n                    },\n                    type: MEDIA_TYPE.video,\n                    isIFrame: options.isIFrame\n                })\n            }\n\n            if (decoder.isPlaybackCacheBeforeDecodeForFpsRender()) {\n                if (isEmpty(decoder.streamVideoFps) || isEmpty(decoder.streamAudioFps)) {\n                    let streamVideoFps = decoder.streamVideoFps;\n                    let streamAudioFps = decoder.streamAudioFps;\n\n                    if (isEmpty(decoder.streamVideoFps)) {\n                        streamVideoFps = calcStreamFpsByBufferList(bufferList, MEDIA_TYPE.video);\n                        if (streamVideoFps) {\n                            decoder.streamVideoFps = streamVideoFps;\n                            postMessage({\n                                cmd: WORKER_CMD_TYPE.playbackStreamVideoFps,\n                                value: decoder.streamVideoFps\n                            })\n\n                            if (streamAudioFps) {\n                                decoder.streamFps = streamVideoFps + streamAudioFps\n                            } else {\n                                decoder.streamFps = streamVideoFps\n                            }\n                            decoder.playbackCacheLoop();\n                        } else {\n                        }\n                    }\n\n                    if (isEmpty(decoder.streamAudioFps)) {\n                        streamAudioFps = calcStreamFpsByBufferList(bufferList, MEDIA_TYPE.audio);\n                        if (streamAudioFps) {\n                            decoder.streamAudioFps = streamAudioFps;\n\n                            if (streamVideoFps) {\n                                decoder.streamFps = streamVideoFps + streamAudioFps\n                            } else {\n                                decoder.streamFps = streamAudioFps\n                            }\n                            decoder.playbackCacheLoop();\n                        } else {\n\n                        }\n                    }\n\n                    if (isEmpty(decoder.streamVideoFps) && isEmpty(decoder.streamAudioFps)) {\n                        decoder.debug.log('worker', `playbackCacheBeforeDecodeForFpsRender, calc streamAudioFps is ${streamAudioFps}, streamVideoFps is ${streamVideoFps}, bufferListLength  is ${bufferList.length}`);\n                    }\n                }\n            }\n\n        },\n        // video buffer length\n        getVideoBufferLength() {\n            let result = 0;\n            bufferList.forEach((item) => {\n                if (item.type === MEDIA_TYPE.video) {\n                    result += 1;\n                }\n            })\n            return result;\n        },\n        hasIframeInBufferList() {\n            return bufferList.some((item) => {\n                return item.type === MEDIA_TYPE.video && item.isIFrame\n            })\n        },\n        getNotDroppingDelayTs() {\n            return decoder._opt.videoBuffer + decoder._opt.videoBufferDelay / 2\n        },\n        getAudioBufferLength() {\n            let result = 0;\n            bufferList.forEach((item) => {\n                if (item.type === MEDIA_TYPE.audio) {\n                    result += 1;\n                }\n            })\n            return result;\n        },\n        getFlvBufferLength() {\n            let result = 0;\n            if (input && input.buffer) {\n                result = input.buffer.byteLength;\n            }\n            if (decoder._opt.isNakedFlow) {\n                if (nakedFlowDemuxer.lastBuf) {\n                    result = nakedFlowDemuxer.lastBuf.byteLength;\n                }\n            }\n\n            return result;\n        },\n        fetchStream: function (url, options) {\n            decoder.debug.log('worker', 'fetchStream, url is ' + url, 'options:', JSON.stringify(options));\n            streamRate = calculationRate(rate => {\n                // decoder.debug.log('worker','calculationRate');\n                currentStreamRate = rate;\n                postMessage({\n                    cmd: WORKER_CMD_TYPE.workerFetch,\n                    type: EVENTS.streamRate,\n                    value: rate\n                })\n            });\n            decoder.startStreamRateAndStatsInterval();\n            if (options.protocol === PLAYER_PLAY_PROTOCOL.fetch) {\n                input = new OPut(decoder.demuxFlv());\n                fetch(url, {signal: abortController.signal}).then((res) => {\n\n                    if (!isFetchSuccess(res)) {\n                        decoder.debug.error('worker', `fetch response status is ${res.status} and ok is ${res.ok} and emit error and next abort()`);\n                        abort();\n                        postMessage({\n                            cmd: WORKER_CMD_TYPE.workerFetch,\n                            type: EVENTS_ERROR.fetchError,\n                            value: `fetch response status is ${res.status} and ok is ${res.ok}`\n                        })\n                        return;\n                    }\n\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS.streamSuccess,\n                    })\n                    if (supportWritableStream()) {\n                        res.body.pipeTo(new WritableStream({\n                            write: (value) => {\n                                streamRate(value.byteLength);\n                                input.write(value);\n                            },\n                            close: () => {\n                                input = null;\n                            },\n                            abort: (e) => {\n                                input = null;\n                                if (e.name === FETCH_ERROR.abort) {\n                                    return;\n                                }\n                                abort();\n                                postMessage({\n                                    cmd: WORKER_CMD_TYPE.workerFetch,\n                                    type: EVENTS_ERROR.fetchError,\n                                    value: e.toString()\n                                })\n                            }\n                        }))\n                    } else {\n                        const reader = res.body.getReader();\n                        const fetchNext = () => {\n                            reader.read().then(({done, value}) => {\n                                if (done) {\n                                    input = null;\n                                    return;\n                                }\n                                streamRate(value.byteLength);\n                                input.write(value);\n                                fetchNext();\n                            }).catch((e) => {\n                                input = null;\n                                if (e.name === FETCH_ERROR.abort) {\n                                    return;\n                                }\n                                abort();\n                                postMessage({\n                                    cmd: WORKER_CMD_TYPE.workerFetch,\n                                    type: EVENTS_ERROR.fetchError,\n                                    value: e.toString()\n                                })\n                            })\n                        }\n                        fetchNext();\n                    }\n\n                }).catch((e) => {\n                    if (e.name === FETCH_ERROR.abort) {\n                        return;\n                    }\n                    abort();\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS_ERROR.fetchError,\n                        value: e.toString()\n                    })\n                    input = null;\n                })\n            } else if (options.protocol === PLAYER_PLAY_PROTOCOL.websocket) {\n                if (options.isFlv) {\n                    input = new OPut(decoder.demuxFlv());\n                }\n                socket = new WebSocket(url);\n                socket.binaryType = 'arraybuffer';\n                socket.onopen = () => {\n                    decoder.debug.log('worker', 'fetchStream, WebsocketStream  socket open');\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS.streamSuccess,\n                    })\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS.websocketOpen,\n                    })\n                }\n                socket.onclose = () => {\n                    decoder.debug.log('worker', 'fetchStream, WebsocketStream socket close');\n                    input = null;\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS.streamEnd,\n                    })\n                }\n                socket.onerror = (error) => {\n                    decoder.debug.error('worker', 'fetchStream, WebsocketStream socket error', error.toString());\n                    input = null;\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS_ERROR.websocketError,\n                        value: error.toString()\n                    })\n                }\n                socket.onmessage = (event) => {\n                    streamRate(event.data.byteLength);\n                    // decoder.debug.log('worker',` socket on message isFlv is ${options.isFlv}`);\n\n                    if (options.isFlv) {\n                        input.write(event.data);\n                        // decoder.debug.log('worker',` input.bufferList.length is ${input.buffer.length},byteLength is ${input.buffer.byteLength}`);\n                    } else if (decoder._opt.isNakedFlow) {\n                        decoder.demuxNakedFlow(event.data);\n                    } else {\n                        decoder.demuxM7s(event.data);\n                    }\n                }\n            }\n        },\n        demuxFlv: function* () {\n            yield 9;\n            const tmp = new ArrayBuffer(4);\n            const tmp8 = new Uint8Array(tmp);\n            const tmp32 = new Uint32Array(tmp);\n            while (true) {\n                tmp8[3] = 0;\n                const t = yield 15;\n                const type = t[4];\n                tmp8[0] = t[7];\n                tmp8[1] = t[6];\n                tmp8[2] = t[5];\n                const length = tmp32[0];\n                tmp8[0] = t[10];\n                tmp8[1] = t[9];\n                tmp8[2] = t[8];\n                tmp8[3] = t[11];\n                let ts = tmp32[0];\n\n                const payload = (yield length).slice();\n                // console.log('demuxFlv type is', type);\n                switch (type) {\n                    case FLV_MEDIA_TYPE.audio:\n                        decoder.decode(payload, {\n                            type: MEDIA_TYPE.audio,\n                            ts,\n                        })\n                        break;\n                    case FLV_MEDIA_TYPE.video:\n                        if (payload.byteLength > 0) {\n                            const isIFrame = payload[0] >> 4 === 1;\n                            // just for player\n                            if (decoder.isPlayer) {\n                                decoder.calcNetworkDelay(ts)\n                                if (isIFrame) {\n                                    decoder.calcIframeIntervalTimestamp(ts);\n                                }\n                            }\n\n                            tmp32[0] = payload[4]\n                            tmp32[1] = payload[3]\n                            tmp32[2] = payload[2]\n                            tmp32[3] = 0\n                            let cts = tmp32[0]\n\n                            let payloadBuffer = payload;\n                            if (decoder._opt.isCrypto) {\n                                if ((decoder._opt.cryptoIV && decoder._opt.cryptoIV.byteLength > 0) && (decoder._opt.cryptoKey && decoder._opt.cryptoKey.byteLength > 0)) {\n                                    payloadBuffer = aes256ctrDecrypt(payload, decoder._opt.cryptoKey, decoder._opt.cryptoIV);\n                                } else {\n                                    decoder.debug.error('worker', `cryptoKey.length is ${decoder._opt.cryptoKey && decoder._opt.cryptoKey.byteLength} or cryptoIV.length is ${decoder._opt.cryptoIV && decoder._opt.cryptoIV.byteLength} null`);\n                                }\n                            }\n\n                            // decoder.debug.log('worker',`demuxFlv dts:${ts},isIFrame:${isIFrame}`);\n                            decoder.decode(payloadBuffer, {\n                                type: MEDIA_TYPE.video,\n                                ts,\n                                isIFrame,\n                                cts\n                            })\n                        }\n                        break;\n                    default:\n                        decoder.debug.log('worker', `demuxFlv() type is ${type}`);\n                        break;\n                }\n            }\n        },\n        decode: function (payload, options) {\n            let playType = decoder._opt.playType;\n            if (options.type === MEDIA_TYPE.audio) {\n                if (decoder._opt.hasAudio) {\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS.streamAbps,\n                        value: payload.byteLength\n                    })\n\n                    if (playType === PLAY_TYPE.player) {\n                        decoder.pushBuffer(payload, {\n                            type: options.type,\n                            ts: options.ts,\n                            cts: options.cts\n                        })\n                    } else if (playType === PLAY_TYPE.playbackTF) {\n                        if (decoder.isPlaybackCacheBeforeDecodeForFpsRender()) {\n                            decoder.pushBuffer(payload, {\n                                type: options.type,\n                                ts: options.ts,\n                                cts: options.cts\n                            })\n                        } else {\n                            if (decoder._opt.playbackRate === 1) {\n                                decoder.pushBuffer(payload, {\n                                    type: options.type,\n                                    ts: options.ts,\n                                    cts: options.cts\n                                })\n                            } else {\n                                decoder.decodeAudio(payload, options.ts);\n                            }\n                        }\n                    }\n                }\n            } else if (options.type === MEDIA_TYPE.video) {\n                if (decoder._opt.hasVideo) {\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS.streamVbps,\n                        value: payload.byteLength\n                    })\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.workerFetch,\n                        type: EVENTS.streamDts,\n                        value: options.ts\n                    })\n                    if (playType === PLAY_TYPE.player) {\n                        // decoder.debug.log('worker','fetchStream, decode video isIFrame is', options.isIFrame);\n                        decoder.pushBuffer(payload, {\n                            type: options.type,\n                            ts: options.ts,\n                            isIFrame: options.isIFrame,\n                            cts: options.cts\n                        })\n                    } else if (playType === PLAY_TYPE.playbackTF) {\n                        if (decoder.isPlaybackOnlyDecodeIFrame()) {\n                            if (options.isIFrame) {\n                                decoder.pushBuffer(payload, {\n                                    type: options.type,\n                                    ts: options.ts,\n                                    cts: options.cts,\n                                    isIFrame: options.isIFrame\n                                })\n                            }\n                        } else {\n                            if (decoder.isPlaybackCacheBeforeDecodeForFpsRender()) {\n                                decoder.pushBuffer(payload, {\n                                    type: options.type,\n                                    ts: options.ts,\n                                    cts: options.cts,\n                                    isIFrame: options.isIFrame\n                                })\n                            } else {\n                                decoder.pushBuffer(payload, {\n                                    type: options.type,\n                                    ts: options.ts,\n                                    cts: options.cts,\n                                    isIFrame: options.isIFrame\n                                })\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        setCodecAudio: function (payload) {\n            const codecId = payload[0] >> 4;\n            if (isAacCodecPacket(payload) ||\n                codecId === AUDIO_ENC_CODE.ALAW ||\n                codecId === AUDIO_ENC_CODE.MULAW) {\n                decoder.debug.log('worker', `setCodecAudio: init audio codec, codeId is ${codecId}`);\n                const extraData = codecId === AUDIO_ENC_CODE.AAC ? payload.slice(2) : payload.slice(1)\n                audioDecoder.setCodec(codecId, decoder._opt.sampleRate, extraData)\n                hasInitAudioCodec = true;\n            } else {\n                decoder.debug.warn('worker', 'setCodecAudio: hasInitAudioCodec is false, codecId is ', codecId);\n            }\n        },\n        decodeAudio: function (payload, ts) {\n            const codecId = payload[0] >> 4;\n            if (!hasInitAudioCodec) {\n                decoder.setCodecAudio(payload);\n            } else {\n                // lastDecodeAudioFrameTimestamp = ts;\n                audioDecoder.decode(codecId === AUDIO_ENC_CODE.AAC ? payload.slice(2) : payload.slice(1), ts);\n            }\n        },\n        setCodecVideo: function (payload) {\n            const codecId = payload[0] & 0x0F\n\n            if ((payload[0] >> 4) === FRAME_TYPE.keyFrame && payload[1] === AVC_PACKET_TYPE.sequenceHeader) {\n                if (codecId === VIDEO_ENC_CODE.h264 || codecId === VIDEO_ENC_CODE.h265) {\n                    decoder.debug.log('worker', `setCodecVideo: init video codec , codecId is ${codecId}`);\n                    const extraData = payload.slice(5)\n                    if (codecId === VIDEO_ENC_CODE.h264 && decoder._opt.useSIMD) {\n                        // need check width and height is more than 4080。\n                        const avcConfig = parseAVCDecoderConfigurationRecord(extraData);\n                        if (avcConfig.codecWidth > SIMD_H264_DECODE_MAX_WIDTH || avcConfig.codecHeight > SIMD_H264_DECODE_MAX_WIDTH) {\n                            postMessage({\n                                cmd: WORKER_CMD_TYPE.simdH264DecodeVideoWidthIsTooLarge,\n                            })\n                            decoder.debug.warn('worker', `setCodecVideo: SIMD H264 decode video width is too large, width is ${avcConfig.codecWidth}, height is ${avcConfig.codecHeight}`);\n                            return;\n                        }\n                    }\n\n                    hasInitVideoCodec = true;\n                    videoDecoder.setCodec(codecId, extraData);\n                    if (decoder._opt.recordType === FILE_SUFFIX.mp4) {\n                        postMessage({\n                            cmd: WORKER_CMD_TYPE.videoCodec,\n                            buffer: payload,\n                            codecId\n                        }, [payload.buffer])\n                    }\n                } else {\n                    decoder.debug.warn('worker', `setCodecVideo: hasInitVideoCodec is false, codecId is ${codecId} is not H264 or H265`);\n                }\n            } else {\n                decoder.debug.warn('worker', `decodeVideo: hasInitVideoCodec is false, codecId is ${codecId} and frameType is ${(payload[0] >> 4)} and packetType is ${payload[1]}`);\n            }\n        },\n        decodeVideo: function (payload, ts, isIFrame, cts) {\n            if (!hasInitVideoCodec) {\n                decoder.setCodecVideo(payload);\n            } else {\n                if (!isVideoFirstIFrame && isIFrame) {\n                    isVideoFirstIFrame = true;\n                }\n\n                if (isVideoFirstIFrame) {\n                    const buffer = payload.slice(5)\n                    // lastDecodeVideoFrameTimestamp = ts;\n                    // lastDecodeVideoFrameLocalTimestamp = now();\n                    videoDecoder.decode(buffer, isIFrame ? 1 : 0, ts);\n                    if (decoder._opt.isRecording && decoder._opt.recordType === FILE_SUFFIX.mp4) {\n                        postMessage({\n                            cmd: WORKER_CMD_TYPE.videoNalu,\n                            buffer: buffer,\n                            isIFrame,\n                            ts,\n                            cts\n                        }, [payload.buffer])\n                    }\n                } else {\n                    decoder.debug.warn('worker', 'decodeVideo: first frame is not iframe');\n                }\n            }\n        },\n        clearBuffer: function (needClear = false) {\n            decoder.debug.log('worker', `clearBuffer,bufferList length is ${bufferList.length}, need clear is ${needClear}`);\n            if (needClear) {\n                bufferList = [];\n            }\n            decoder.resetAllDelay();\n            decoder.dropping = true;\n        },\n        dropBuffer$2: function () {\n            if (bufferList.length > 0) {\n                decoder.isPushDropping = true;\n                const iFrameIndex = bufferList.findIndex((bufferItem) => {\n                    return bufferItem.isIFrame === true && bufferItem.type === MEDIA_TYPE.video;\n                })\n\n                if (iFrameIndex >= 0) {\n                    //\n                    bufferList = bufferList.slice(iFrameIndex);\n                    const iFrameItem = bufferList.shift();\n                    const tempDelay = decoder.getDelayNotUpdateDelay(iFrameItem.ts);\n                    decoder.doDecode(iFrameItem);\n                    decoder.isPushDropping = false;\n                    decoder.debug.log('worker', `dropBuffer$2() iFrameIndex is ${iFrameIndex},and bufferList length is ${bufferList.length} and tempDelay is ${tempDelay} ,delay is ${decoder.delay} `)\n                } else {\n                    decoder.isPushDropping = false;\n                }\n            }\n            if (bufferList.length === 0) {\n                decoder.isPushDropping = false;\n            }\n        },\n        demuxM7s: function (arrayBuffer) {\n            const dv = new DataView(arrayBuffer);\n            const ts = dv.getUint32(1, false);\n            const type = dv.getUint8(0);\n            // decoder.debug.log('worker', `demuxM7s , type is ${type}`);\n            switch (type) {\n                case MEDIA_TYPE.audio:\n                    decoder.decode(new Uint8Array(arrayBuffer, 5), {\n                        type: MEDIA_TYPE.audio,\n                        ts,\n                    })\n                    break;\n                case MEDIA_TYPE.video:\n                    if (dv.byteLength > 5) {\n                        const isIFrame = dv.getUint8(5) >> 4 === 1;\n\n                        if (decoder.isPlayer) {\n                            decoder.calcNetworkDelay(ts)\n                            if (isIFrame) {\n                                decoder.calcIframeIntervalTimestamp(ts);\n                            }\n                        }\n\n                        decoder.decode(new Uint8Array(arrayBuffer, 5), {\n                            type: MEDIA_TYPE.video,\n                            ts,\n                            isIFrame,\n                        })\n                    }\n                    break;\n                default:\n                    break;\n            }\n        },\n        demuxNakedFlow: function (arrayBuffer) {\n            // decoder.debug.log('worker', `demuxNakedFlow, arrayBuffer length is ${arrayBuffer.byteLength}`);\n            // console.log('demuxNakedFlow', arrayBuffer);\n            nakedFlowDemuxer.dispatch(arrayBuffer);\n        },\n        calcNetworkDelay: function (dts) {\n            if (!(isVideoFirstIFrame && dts > 0)) {\n                return;\n            }\n            if (bufferStartDts === null) {\n                bufferStartDts = dts;\n                bufferStartLocalTs = now();\n            } else {\n                if (dts < bufferStartDts) {\n                    decoder.debug.warn('worker', `calcNetworkDelay, dts is ${dts} less than bufferStartDts is ${bufferStartDts}`);\n                    bufferStartDts = dts;\n                    bufferStartLocalTs = now();\n                }\n            }\n            const diff1 = dts - bufferStartDts;\n            const localDiff = now() - bufferStartLocalTs;\n            const delay = localDiff > diff1 ? localDiff - diff1 : 0;\n            decoder.networkDelay = delay;\n            if (delay > decoder._opt.networkDelay && decoder._opt.playType === PLAY_TYPE.player) {\n                decoder.debug.warn('worker', `calcNetworkDelay now dts:${dts}, start dts is ${bufferStartDts} vs start is ${diff1},local diff is ${localDiff} ,delay is ${delay}`);\n                postMessage({\n                    cmd: WORKER_CMD_TYPE.workerFetch,\n                    type: EVENTS.networkDelayTimeout,\n                    value: delay\n                })\n            }\n        },\n        calcIframeIntervalTimestamp: function (ts) {\n            if (preIframeTs === null) {\n                preIframeTs = ts;\n            } else {\n                if (preIframeTs < ts) {\n                    const intervalTimestamp = ts - preIframeTs;\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.iframeIntervalTs,\n                        value: intervalTimestamp\n                    })\n                    // post 到主线程里面去。\n                    preIframeTs = ts;\n                }\n            }\n        },\n        canVisibilityDecodeNotDrop: function () {\n            return decoder._opt.visibility && (videoWidth * videoHeight) <= 1920 * 1080;\n        },\n        isPlaybackCacheBeforeDecodeForFpsRender: function () {\n            return !decoder.isPlayer && decoder._opt.playbackIsCacheBeforeDecodeForFpsRender;\n        },\n        isPlaybackOnlyDecodeIFrame: function () {\n            return decoder._opt.playbackRate >= decoder._opt.playbackForwardMaxRateDecodeIFrame;\n        },\n\n        playbackUpdatePlaybackRate: function () {\n            decoder.clearBuffer(true);\n        },\n\n        videoInfo: function (videoCode, width, height) {\n            postMessage({cmd: WORKER_CMD_TYPE.videoCode, code: videoCode})\n            postMessage({cmd: WORKER_CMD_TYPE.initVideo, w: width, h: height})\n            videoWidth = width;\n            videoHeight = height;\n            if (decoder.useOffscreen()) {\n                decoder.offscreenCanvas = new OffscreenCanvas(width, height);\n                decoder.offscreenCanvasGL = decoder.offscreenCanvas.getContext(\"webgl\");\n                decoder.webglObj = createWebGL(decoder.offscreenCanvasGL, decoder._opt.openWebglAlignment)\n            }\n        },\n        audioInfo: function (audioCode, sampleRate, channels) {\n            postMessage({cmd: WORKER_CMD_TYPE.audioCode, code: audioCode})\n            postMessage({cmd: WORKER_CMD_TYPE.initAudio, sampleRate: sampleRate, channels: channels})\n            audioChannels = channels;\n        },\n        yuvData: function (yuv, ts) {\n            const size = videoWidth * videoHeight * 3 / 2;\n            let out = Module.HEAPU8.subarray(yuv, yuv + size);\n            let data = new Uint8Array(out)\n            // newDecodedVideoFrameTimestamp = ts;\n            // newDecodedVideoFrameLocalTimestamp = now();\n            if (decoder.useOffscreen()) {\n                decoder.webglObj.renderYUV(videoWidth, videoHeight, data);\n                let image_bitmap = decoder.offscreenCanvas.transferToImageBitmap();\n                postMessage({\n                    cmd: WORKER_CMD_TYPE.render,\n                    buffer: image_bitmap,\n                    delay: decoder.delay,\n                    ts\n                }, [image_bitmap])\n            } else {\n                postMessage({\n                    cmd: WORKER_CMD_TYPE.render,\n                    output: data,\n                    delay: decoder.delay,\n                    ts\n                }, [data.buffer])\n            }\n        },\n        pcmData: function (data, len, ts) {\n            let frameCount = len;\n            let origin = []\n            let start = 0\n            let audioBufferSize = decoder._opt.audioBufferSize;\n            for (let channel = 0; channel < 2; channel++) {\n                let fp = Module.HEAPU32[(data >> 2) + channel] >> 2;\n                origin[channel] = Module.HEAPF32.subarray(fp, fp + frameCount);\n            }\n            if (audioRemain) {\n                len = audioBufferSize - audioRemain\n                if (frameCount >= len) {\n                    audioOutputArray[0] = Float32Array.of(...tempAudioBuffer[0], ...origin[0].subarray(0, len))\n                    if (audioChannels == 2) {\n                        audioOutputArray[1] = Float32Array.of(...tempAudioBuffer[1], ...origin[1].subarray(0, len))\n                    }\n                    // newDecodedAudioFrameTimestamp = ts;\n                    postMessage({\n                        cmd: WORKER_CMD_TYPE.playAudio,\n                        buffer: audioOutputArray,\n                        ts\n                    }, audioOutputArray.map(x => x.buffer))\n                    start = len\n                    frameCount -= len\n                } else {\n                    audioRemain += frameCount\n                    tempAudioBuffer[0] = Float32Array.of(...tempAudioBuffer[0], ...origin[0])\n                    if (audioChannels == 2) {\n                        tempAudioBuffer[1] = Float32Array.of(...tempAudioBuffer[1], ...origin[1])\n                    }\n                    return\n                }\n            }\n            for (audioRemain = frameCount; audioRemain >= audioBufferSize; audioRemain -= audioBufferSize) {\n                audioOutputArray[0] = origin[0].slice(start, start += audioBufferSize)\n                if (audioChannels == 2) {\n                    audioOutputArray[1] = origin[1].slice(start - audioBufferSize, start)\n                }\n                // newDecodedAudioFrameTimestamp = ts;\n                postMessage({\n                    cmd: WORKER_CMD_TYPE.playAudio,\n                    buffer: audioOutputArray,\n                    ts\n                }, audioOutputArray.map(x => x.buffer))\n            }\n            if (audioRemain) {\n                tempAudioBuffer[0] = origin[0].slice(start)\n                if (audioChannels == 2) {\n                    tempAudioBuffer[1] = origin[1].slice(start)\n                }\n            }\n        },\n        sendWebsocketMessage: function (message) {\n            if (socket) {\n                if (socket.readyState === WEBSOCKET_STATUS_CODE.open) {\n                    socket.send(message)\n                } else {\n                    decoder.debug.error('worker', 'socket is not open')\n                }\n            } else {\n                decoder.debug.error('worker', 'socket is null')\n            }\n        },\n        timeEnd: function () {\n            postMessage({\n                cmd: WORKER_CMD_TYPE.workerEnd,\n            })\n        }\n    }\n    decoder.debug = new Debug(decoder);\n    let audioDecoder = new Module.AudioDecoder(decoder)\n    let videoDecoder = new Module.VideoDecoder(decoder)\n    postMessage({cmd: WORKER_CMD_TYPE.init})\n    self.onmessage = function (event) {\n        let msg = event.data\n        switch (msg.cmd) {\n            case WORKER_SEND_TYPE.init:\n                try {\n                    decoder._opt = Object.assign(decoder._opt, JSON.parse(msg.opt))\n                } catch (e) {\n\n                }\n                decoder.init();\n                break\n            case WORKER_SEND_TYPE.decode:\n                decoder.pushBuffer(msg.buffer, msg.options)\n                break\n            case WORKER_SEND_TYPE.audioDecode:\n                decoder.decodeAudio(msg.buffer, msg.ts)\n                break;\n            case WORKER_SEND_TYPE.videoDecode:\n                decoder.decodeVideo(msg.buffer, msg.ts, msg.isIFrame)\n                break;\n            case WORKER_SEND_TYPE.clearBuffer:\n                decoder.clearBuffer(msg.needClear);\n                break;\n            case WORKER_SEND_TYPE.fetchStream:\n                decoder.fetchStream(msg.url, JSON.parse(msg.opt))\n                break;\n            case WORKER_SEND_TYPE.close:\n                decoder.close()\n                break\n            case WORKER_SEND_TYPE.updateConfig:\n                decoder.debug.log('worker', 'updateConfig', msg.key, msg.value)\n                decoder._opt[msg.key] = msg.value;\n\n                if (msg.key === 'playbackRate') {\n                    decoder.playbackUpdatePlaybackRate();\n                    if (decoder.isPlaybackCacheBeforeDecodeForFpsRender()) {\n                        decoder.playbackCacheLoop();\n                    }\n                }\n                break\n            case WORKER_SEND_TYPE.sendWsMessage:\n                decoder.sendWebsocketMessage(msg.message);\n                break;\n            default:\n                break;\n        }\n    }\n\n}\n","import Module from './decoder/decoder-pro'\nimport workerPostRun from './worker-run';\n\n\nModule.postRun = function () {\n    workerPostRun(Module);\n}\n"],"names":["Module","moduleOverrides","Object","assign","thisProgram","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","scriptDirectory","locateFile","path","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","require$$0","dirname","__dirname","require$$1","shell_read","filename","binary","readFileSync","undefined","ret","buffer","Uint8Array","onload","onerror","readFile","err","data","length","replace","slice","module","ex","ExitStatus","reason","self","location","href","document","currentScript","src","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","status","out","console","log","bind","warn","wasmBinary","WebAssembly","abort","wasmMemory","ABORT","assert","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","subarray","str","u0","String","fromCharCode","u1","u2","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","UTF16Decoder","UTF16ToString","maxIdx","HEAPU16","codeUnit","HEAP16","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","HEAP32","stringToUTF32","trailSurrogate","lengthBytesUTF32","writeAsciiToMemory","dontAddNull","HEAP8","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","FS","init","initialized","ignorePermissions","postRun","addOnPostRun","cb","unshift","addOnInit","runDependencies","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","callback","what","e","RuntimeError","dataURIPrefix","isDataURI","startsWith","isFileURI","wasmBinaryFile","getBinary","file","getBinaryPromise","fetch","credentials","then","catch","Promise","resolve","reject","createWasm","info","asmLibraryArg","receiveInstance","instance","exports","receiveInstantiationResult","result","instantiateArrayBuffer","receiver","instantiate","instantiateAsync","instantiateStreaming","tempDouble","tempI64","callbacks","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","get","___cxa_allocate_exception","size","_malloc","ExceptionInfo","excPtr","set_type","type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","add_ref","value","release_ref","prev","adjustedPtr","get_adjusted_ptr","get_exception_ptr","isPointer","___cxa_is_pointer_type","adjusted","___cxa_throw","setErrNo","___errno_location","PATH","isAbs","charAt","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","split","filter","p","join","root","dir","basename","lastSlash","paths","Array","prototype","call","arguments","join2","l","r","getRandomDevice","crypto","randomBuffer","getRandomValues","crypto_module","require$$2","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","read","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","BUFSIZE","Buffer","alloc","readSync","stdin","fd","toString","includes","prompt","readline","intArrayFromString","val","default_tty1_ops","zeroMemory","address","fill","alignMemory","alignment","ceil","mmapAlloc","_emscripten_builtin_memalign","MEMFS","ops_table","mount","createNode","parent","name","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","max","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","hasOwnProperty","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","asyncLoad","noRunDep","dep","arrayBuffer","event","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","shared","object","isRead","isWrite","isAppend","function","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","apply","syncfs","populate","completed","doCallback","done","errored","forEach","pseudo","mountRoot","unmount","keys","next","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","encoding","writeFile","actualNumBytes","ArrayBuffer","isView","byteLength","chdir","createDefaultDirectories","createDefaultDevices","random_device","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","message","constructor","code","stack","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","LazyUint8Array_get","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","LazyUint8Array_setDataGetter","cacheLength","LazyUint8Array_cacheLength","datalength","Number","getResponseHeader","header","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","lazyArray","_length","_chunkSize","defineProperties","fn","forceLoadLazyFile","writeChunks","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","Browser","handledByPreloadPlugin","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","db","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","getRequest","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","doStat","abs","floor","getTime","doMsync","addr","varargs","getStr","getStreamFromFD","___syscall_fcntl64","newStream","___syscall_openat","__embind_register_bigint","primitiveType","minRange","maxRange","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","f","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","destructors","o","pointer","destructorFunction","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","shallowCopyInternalPointer","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","getInstanceTypeName","handle","finalizationRegistry","detachFinalizer","runDestructor","rawDestructor","releaseClassHandle","toDelete","downcastPointer","ptrClass","desiredClass","rv","downcast","registeredPointers","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","deletionQueue","flushPendingDeletes","delayFunction","setDelayFunction","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","hasSmartPtrType","hasSmartPtr","attachFinalizer","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","isSmartPointer","instancePrototype","pointeeType","actualType","getActualType","registeredPointerRecord","toType","isConst","constPointerType","pointerType","dp","FinalizationRegistry","unregister","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","ClassHandle_deleteLater","init_ClassHandle","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","pureVirtualFunctions","upcastPointer","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","rawConstructor","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","dynCallLegacy","sig","args","dynCall","getDynCaller","argCache","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","map","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","array","runDestructors","del","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","classType","argTypes","craftInvokerFunction","new_","argumentList","dummy","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","invokerFunction","__embind_register_class_function","rawInvoker","context","isPureVirtual","Symbol","substring","unboundTypesHandler","method","className","memberFunction","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","toValue","__embind_register_emval","v","t","floatReadValueFromPointer","__embind_register_float","integerReadValueFromPointer","signed","readS8FromPointer","readU8FromPointer","readS16FromPointer","readU16FromPointer","readS32FromPointer","readU32FromPointer","__embind_register_integer","fromWireType","bitshift","isUnsignedType","checkAssertions","toTypeName","toWireType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","maxRead","stringSegment","a","getLength","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","maxReadBytes","__embind_register_void","isVoid","__emscripten_date_now","emval_symbols","getStringOrSymbol","symbol","emval_methodCallers","__emval_call_void_method","caller","__emval_addMethodCaller","requireRegisteredType","impl","__emval_lookupTypes","emval_registeredMethods","__emval_get_method_caller","retType","signatureName","returnId","params","functionName","functionBody","_abort","_emscripten_memcpy_big","dest","num","copyWithin","abortOnCannotGrowMemory","requestedSize","_emscripten_resize_heap","ENV","getExecutableName","getEnvStrings","strings","lang","navigator","languages","env","x","_environ_get","__environ","environ_buf","bufSize","string","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_fdstat_get","pbuf","doReadv","iov","iovcnt","curr","_fd_read","pnum","convertI32PairToI53Checked","lo","hi","NaN","_fd_seek","offset_low","offset_high","newOffset","isNaN","doWritev","_fd_write","_setTempRet0","readMode","writeMode","stringy","u8array","numBytesWritten","calledRun","runCaller","run","doRun","setTimeout","glMatrix.ARRAY_TYPE","glMatrix.EPSILON","gl","openWebglAlignment","vertexShaderScript","fragmentShaderScript","pixelStorei","UNPACK_ALIGNMENT","shaderProgram","_initShaderProgram","_programInfo","program","attribLocations","vertexPosition","getAttribLocation","texturePosition","uniformLocations","projectionMatrix","getUniformLocation","modelMatrix","viewMatrix","rgbatexture","ytexture","utexture","vtexture","isyuv","_buffers","_initBuffers","_rgbatexture","_createTexture","_ytexture","_utexture","_vtexture","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","STATIC_DRAW","facePos","texturePos","texpositionBuffer","indexBuffer","ELEMENT_ARRAY_BUFFER","indices","texPosition","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","_loadShader","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","_drawScene","w","h","viewport","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","zNear","zFar","mat4","vec3","numComponents","FLOAT","stride","vertexAttribPointer","enableVertexAttribArray","rgbatextunit","ytextunit","utextunit","vtextunit","activeTexture","TEXTURE0","useProgram","uniformMatrix4fv","uniform1i","vertexCount","UNSIGNED_SHORT","drawElements","TRIANGLES","render","width","height","y","texImage2D","LUMINANCE","UNSIGNED_BYTE","TEXTURE1","TEXTURE2","renderYUV","destroy","deleteProgram","deleteBuffer","deleteTexture","PLAYER_PLAY_PROTOCOL","websocket","hls","webrtc","webTransport","PLAY_TYPE","player","playbackTF","FILE_SUFFIX","mp4","webm","DEMUX_TYPE","flv","m7s","nakedFlow","DEBUG_LEVEL","debug","PTZ_ACTIVE_EVENT_TYPE","click","mouseDownAndUp","DEFAULT_PLAYBACK_FORWARD_MAX_RATE_DECODE_IFRAME","FRAME_TS_MAX_DIFF","SIMD_H264_DECODE_MAX_WIDTH","DEFAULT_PLAYER_OPTIONS","playType","container","videoBuffer","videoBufferDelay","networkDelay","isResize","isFullResize","isFlv","isHls","isWebrtc","isWebrtcForZLM","isNakedFlow","debugLevel","debugUuid","isMulti","hotKey","loadingTimeout","heartTimeout","timeout","pageVisibilityHiddenTimeout","loadingTimeoutReplay","heartTimeoutReplay","loadingTimeoutReplayTimes","heartTimeoutReplayTimes","heartTimeoutReplayUseLastFrameShow","supportDblclickFullscreen","showBandwidth","showPerformance","keepScreenOn","isNotMute","hasAudio","hasVideo","operateBtns","fullscreen","screenshot","play","audio","ptz","quality","zoom","scale","performance","aiFace","aiObject","fullscreenFn","fullscreenExitFn","screenshotFn","playFn","pauseFn","recordFn","recordStopFn","extendOperateBtns","contextmenuBtns","watermarkConfig","controlAutoHide","hasControl","loadingIcon","loadingText","background","backgroundLoadingShow","loadingBackground","decoder","decoderWASM","rotate","mirrorRotate","playbackConfig","playList","fps","showControl","showRateBtn","rateConfig","isCacheBeforeDecodeForFpsRender","uiUsePlaybackPause","isPlaybackPauseClearCache","isUseFpsRender","isUseLocalCalculateTime","localOneFrameTimestamp","supportWheel","qualityConfig","defaultStreamQuality","scaleConfig","forceNoOffscreen","hiddenAutoPause","protocol","demuxType","useWasm","useWCS","useSIMD","wcsUseVideoRender","wasmUseVideoRender","mseUseCanvasRender","hlsUseCanvasRender","useMSE","useOffscreen","mseDecodeErrorReplay","wcsDecodeErrorReplay","wasmDecodeErrorReplay","autoWasm","webglAlignmentErrorReplay","syncAudioAndVideo","playbackDelayTime","playbackFps","playbackForwardMaxRateDecodeIFrame","playbackCurrentTimeMove","useVideoRender","useCanvasRender","networkDelayTimeoutReplay","recordType","checkFirstIFrame","nakedFlowFps","audioEngine","isShowRecordingUI","isShowZoomingUI","useFaceDetector","useObjectDetector","ptzClickType","weiXinInAndroidAudioBufferSize","isCrypto","cryptoKey","cryptoIV","cryptoKeyUrl","autoResize","useWebFullScreen","ptsMaxDiff","aiFaceDetectWidth","aiObjectDetectWidth","videoRenderSupportScale","mediaSourceTsIsMaxDiffReplay","WORKER_CMD_TYPE","initVideo","playAudio","initAudio","kBps","audioCode","videoCode","videoCodec","videoNalu","wasmError","workerFetch","iframeIntervalTs","workerEnd","playbackStreamVideoFps","wasmDecodeVideoNoResponseError","simdH264DecodeVideoWidthIsTooLarge","websocketOpen","closeEnd","MEDIA_TYPE","video","FLV_MEDIA_TYPE","scriptData","WORKER_SEND_TYPE","audioDecode","videoDecode","initAudioCodec","initVideoCodec","updateConfig","resetDecode","clearBuffer","resetAudioDecode","resetVideoDecode","fetchStream","sendWsMessage","EVENTS","webFullscreen","decoderWorkerInit","playing","pause","mute","load","loading","zooming","videoInfo","timeUpdate","audioInfo","delayTimeout","delayTimeoutRetryEnd","loadingTimeoutRetryEnd","stats","faceDetectActive","objectDetectActive","recording","recordingTimestamp","recordStart","recordEnd","recordCreateError","recordBlob","videoFrame","metadata","resize","volumechange","beforeDestroy","streamEnd","streamRate","streamAbps","streamVbps","streamDts","streamSuccess","streamMessage","streamError","streamStats","mseSourceOpen","mseSourceClose","mseSourceended","mseSourceBufferError","mseSourceBufferBusy","mseSourceBufferFull","videoWaiting","videoTimeUpdate","videoSyncAudio","playToRenderTimes","playbackTime","playbackTimestamp","playbackPrecision","playbackJustTime","playbackStats","playbackSeek","playbackPause","playbackPauseOrResume","playbackRateChange","playbackPreRateChange","streamQualityChange","visibilityChange","netBuf","networkDelayTimeout","togglePerformancePanel","viewResizeChange","flvDemuxBufferSizeTooLarge","talkGetUserMediaSuccess","talkGetUserMediaFail","talkGetUserMediaTimeout","talkStreamStart","talkStreamOpen","talkStreamClose","talkStreamError","talkStreamInactive","webrtcDisconnect","webrtcFailed","webrtcClosed","crashLog","focus","blur","visibilityHiddenTimeout","websocketClose","websocketError","websocketMessage","aiObjectDetectorInfo","aiFaceDetector","playFailedAndPaused","EVENTS_ERROR","playError","fetchError","webcodecsH265NotSupport","webcodecsDecodeError","mediaSourceH265NotSupport","mediaSourceDecoderConfigurationError","mediaSourceFull","mediaSourceAppendBufferError","mediaSourceBufferListLarge","mediaSourceAppendBufferEndTimeout","mediaSourceTsIsMaxDiff","wasmDecodeError","hlsError","webrtcError","webglAlignmentError","webcodecsWidthOrHeightChange","tallWebsocketClosedByError","audioChannelError","WEBSOCKET_STATUS_CODE","connecting","closing","closed","VIDEO_ENC_CODE","h264","h265","VIDEO_ENC_TYPE_SHOW","AUDIO_ENC_CODE","AAC","ALAW","MULAW","MP3","H264_NAL_TYPE","sps","pps","iFrame","kUnspecified","kSliceNonIDR","kSliceDPA","kSliceDPB","kSliceDPC","kSliceIDR","kSliceSEI","kSliceSPS","kSlicePPS","kSliceAUD","kEndOfSequence","kEndOfStream","kFiller","kSPSExt","kReserved0","H265_NAL_TYPE","vps","sei","ENCODED_VIDEO_TYPE","delta","FETCH_ERROR","abortError","abortError2","AVC_PACKET_TYPE","sequenceHeader","nalu","FRAME_TYPE","keyFrame","interFrame","isAacCodecPacket","payload","of","Instance","getNowTime","calculationRate","totalSize","lastTime","isNumber","thisTime","diffTime","formatVideoDecoderConfigure","avcC","codecArray","codecString","j","codec","description","isEmpty","isFunction","checkNaluType","naluBuffer","supportWritableStream","WritableStream","calcStreamFpsByBufferList","bufferList","item","firstItem","oneSecondLength","nextIndex","nextItem","ts","tempItem","diff","prevTempItem","diff2","isFetchSuccess","res","JSON","stringify","parse","getDefaultPlayerOptions","this","Debug","master","_opt","prefix","ExpGolomb","uint8array","_buffer","_buffer_index","_total_bytes","_total_bits","_current_word","_current_word_bits_left","_fillCurrentWord","buffer_bytes_left","bytes_read","word","DataView","getUint32","readBits","bits","bits_need_left","bits_read_next","result2","readBool","readByte","_skipLeadingZero","zero_count","readUEG","leading_zeros","readSEG","SPSParser","_ebsp2rbsp","src_length","dst","dst_idx","parseSPS","rbsp","gb","profile_idc","level_idc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","scaling_list_count","_skipScalingList","pic_order_cnt_type","num_ref_frames_in_pic_order_cnt_cycle","ref_frames","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","frame_cropping_flag","sar_width","sar_height","fps_fixed","fps_num","fps_den","vui_parameters_present_flag","aspect_ratio_idc","sar_w_table","sar_h_table","num_units_in_tick","time_scale","sarScale","crop_unit_x","crop_unit_y","sub_wc","sub_hc","codec_width","codec_height","present_width","chroma_format_string","getChromaFormatString","frame_rate","fixed","sar_ratio","codec_size","present_size","parseSPS$2","codec_array","codec_mimetype","bit_depth_luma","bit_depth_chroma","last_scale","next_scale","delta_scale","toFixed","chroma","parseAVCDecoderConfigurationRecord","meta","version","getUint8","avcProfile","_naluLengthSize","spsCount","getUint16","config","timescale","codecWidth","codecHeight","presentWidth","presentHeight","profile","level","bitDepth","chromaFormat","sarRatio","frameRate","refSampleDuration","ppsCount","videoType","spsLength","spsFlag","ppsLength","ppsFlag","avcEncoderConfigurationRecord","tmp","avcEncoderNalePacket","oneNALBuffer","isIframe","idrBit","nIdrBit","avcEncoderNalePacketNotLength","addNaleHeaderLength","nalUnit","nalUnitLength","getAvcSeqHeadType","isAvcSeqHead","isHvcSEIType","isNotAvcSeqHead","isAvcNaluIFrame","isSameAvcNaluType","naluList","parseHevcSPS","left_offset","right_offset","top_offset","bottom_offset","max_sub_layers_minus1","general_profile_space","general_tier_flag","general_profile_idc","general_profile_compatibility_flags_1","general_profile_compatibility_flags_2","general_profile_compatibility_flags_3","general_profile_compatibility_flags_4","general_constraint_indicator_flags_1","general_constraint_indicator_flags_2","general_constraint_indicator_flags_3","general_constraint_indicator_flags_4","general_constraint_indicator_flags_5","general_constraint_indicator_flags_6","general_level_idc","sub_layer_profile_present_flag","sub_layer_level_present_flag","pic_width_in_luma_samples","pic_height_in_luma_samples","conformance_window_flag","bit_depth_luma_minus8","bit_depth_chroma_minus8","log2_max_pic_order_cnt_lsb_minus4","sub_layer_ordering_info_present_flag","scaling_list_enabled_flag","sps_scaling_list_data_present_flag","sizeId","matrixId","scaling_list_pred_mode_flag","coefNum","pcm_enabled_flag","num_short_term_ref_pic_sets","num_delta_pocs","inter_ref_pic_set_prediction_flag","next_num_delta_pocs","used_by_curr_pic_flag","use_delta_flag","num_negative_pics","num_positive_pics","long_term_ref_pics_present_flag","num_long_term_ref_pics_sps","default_display_window_flag","min_spatial_segmentation_idc","aspect_ratio_info_present_flag","overscan_info_present_flag","video_signal_type_present_flag","colour_description_present_flag","chroma_loc_info_present_flag","vui_timing_info_present_flag","vui_poc_proportional_to_timing_flag","vui_hrd_parameters_present_flag","nal_hrd_parameters_present_flag","vcl_hrd_parameters_present_flag","sub_pic_hrd_params_present_flag","fixed_pic_rate_general_flag","fixed_pic_rate_within_cvs_flag","cpbCnt","low_delay_hrd_flag","cpbcnt","bitstream_restriction_flag","sar_scale","constant_frame_rate","parseHevcVPS","temporal_id_nesting_flag","num_temporal_layers","temporal_id_nested","parseHevcPPS","cu_qp_delta_enabled_flag","tiles_enabled_flag","entropy_coding_sync_enabled_flag","parallelismType","hevcEncoderConfigurationRecord$2","detail","configurationVersion","vpsDetail","spsDetail","ppsDetail","prevData","newData","hevcEncoderNalePacket","getHevcSeqHeadType","isHevcSEIType","isHevcSeqHead","isNotHevcSeqHead","isHevcNalIFrame","checkInt","parseInt","checkInts","arrayish","coerceArray","copy","isArray","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","encodeURI","fromBytes","bytes","convertHex","Hex","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AesJs","defineProperty","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","index","rconpointer","tt","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","encrypted","xorSegment","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","MAX_SAFE_INTEGER","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","pkcs7pad","padder","pkcs7strip","aesjs","AES","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","strip","_arrayTest","getNaluLength","aes256ctrDecrypt","totalLength","startIndex","tempNaluLength","naluType","tempNalu","aesCtr","decryptMsg","tempAudioBuffer","wcsVideoDecoder","abortController","AbortController","socket","streamRateAndStatsInterval","videoWidth","videoHeight","hasInitVideoCodec","hasInitAudioCodec","isVideoFirstIFrame","isStreamTimeDiffMoreThanLocalTimeDiff","preLoopTimestamp","bufferStartDts","bufferStartLocalTs","audioOutputArray","audioRemain","audioChannels","preIframeTs","preTimestamp","getDefaultOpt","defaultOptions","playbackRate","playbackIsCacheBeforeDecodeForFpsRender","sampleRate","visibility","isRecording","audioBufferSize","hasInit","isEmitInfo","offscreenCanvas","offscreenCanvasCtx","VideoDecoder","postMessage","codedWidth","codedHeight","OffscreenCanvas","getContext","createImageBitmap","image","drawImage","image_bitmap","transferToImageBitmap","delay","cts","isIFrame","extraData","codecId","configure","chunk","EncodedVideoChunk","reset","nakedFlowDemuxer","lastBuf","streamType","localDts","isSendSeqHeader","dispatch","uint8Array","extractNALu$2","getNaluDts","resul","getNaluAudioDts","audioContextSampleRate","extractNALu","state","lastIndex","typedArray","lastNalEndPos","b1","b2","nalStartPos","b_0","b_1","naluItem","handleNALu","_newBuf","handleVideoNalu","handleAddNaluStartCode","newNaluList","nalType","handleVideoH264Nalu","isSameNaluType","handleVideoH264NaluList","extractH265PPS","handleVideoH265Nalu","extractH264PPS","extractH264SEI","extractH265SEI","newNalu","seqHeader","dts","calcIframeIntervalTimestamp","calcNetworkDelay","packet","reduce","pre","cur","nalu2","nalu3","nalu4","isPlayer","isPushDropping","startStreamRateAndStatsInterval","stopStreamRateAndStatsInterval","setInterval","demuxBufferDelay","getVideoBufferLength","audioDemuxBufferDelay","getAudioBufferLength","flvBufferByteLength","getFlvBufferLength","pushLatestDelay","isDropping","dropping","isStreamTsMoreThanLocal","clearInterval","getDelay","preDelayTimestamp","firstTimestamp","startTimestamp","localTimestamp","timeTimestamp","getDelayNotUpdateDelay","resetDelay","resetAllDelay","doDecode","isPlaybackCacheBeforeDecodeForFpsRender","loop","tempDelay","getNotDroppingDelayTs","hasIframeInBufferList","stopId","nowTime","playbackCacheLoop","fragDuration","streamFps","audioDecoder","videoDecoder","streamAudioFps","streamVideoFps","webglObj","offscreenCanvasGL","pushBuffer","decodeAudio","maxDelay","dropBuffer$2","decodeVideo","some","rate","OPut","demuxFlv","signal","pipeTo","reader","getReader","fetchNext","WebSocket","binaryType","onopen","onclose","onmessage","demuxNakedFlow","demuxM7s","tmp8","tmp32","payloadBuffer","isPlaybackOnlyDecodeIFrame","setCodecAudio","setCodec","setCodecVideo","avcConfig","needClear","iFrameIndex","findIndex","bufferItem","iFrameItem","dv","diff1","localDiff","intervalTimestamp","canVisibilityDecodeNotDrop","playbackUpdatePlaybackRate","createWebGL","channels","yuvData","yuv","pcmData","frameCount","origin","channel","sendWebsocketMessage","readyState","timeEnd","AudioDecoder","msg","opt","workerPostRun"],"mappings":"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IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,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"}